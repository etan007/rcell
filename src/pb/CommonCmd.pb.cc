// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CommonCmd.proto

#include "CommonCmd.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

PROTOBUF_CONSTEXPR PBCommonCmd::PBCommonCmd(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.cmd_)*/2} {}
struct PBCommonCmdDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PBCommonCmdDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PBCommonCmdDefaultTypeInternal() {}
  union {
    PBCommonCmd _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PBCommonCmdDefaultTypeInternal _PBCommonCmd_default_instance_;
PROTOBUF_CONSTEXPR PBNotifyNewerMailboxReq::PBNotifyNewerMailboxReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.entity_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.cmdid_)*/nullptr
  , /*decltype(_impl_.entity_mb_)*/nullptr
  , /*decltype(_impl_.reserved1_)*/uint64_t{0u}
  , /*decltype(_impl_.param_)*/3} {}
struct PBNotifyNewerMailboxReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PBNotifyNewerMailboxReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PBNotifyNewerMailboxReqDefaultTypeInternal() {}
  union {
    PBNotifyNewerMailboxReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PBNotifyNewerMailboxReqDefaultTypeInternal _PBNotifyNewerMailboxReq_default_instance_;
PROTOBUF_CONSTEXPR PBRpcData_ReduceConsum_Req::PBRpcData_ReduceConsum_Req(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.config_id_)*/0u
  , /*decltype(_impl_.reduce_count_)*/0u
  , /*decltype(_impl_.reason_)*/0u
  , /*decltype(_impl_.subrpccmd_)*/1} {}
struct PBRpcData_ReduceConsum_ReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PBRpcData_ReduceConsum_ReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PBRpcData_ReduceConsum_ReqDefaultTypeInternal() {}
  union {
    PBRpcData_ReduceConsum_Req _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PBRpcData_ReduceConsum_ReqDefaultTypeInternal _PBRpcData_ReduceConsum_Req_default_instance_;
PROTOBUF_CONSTEXPR PBRpcGuildDayMissinAward_Req::PBRpcGuildDayMissinAward_Req(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.bdaymission_)*/false
  , /*decltype(_impl_.missionid_)*/0
  , /*decltype(_impl_.subrpccmd_)*/2} {}
struct PBRpcGuildDayMissinAward_ReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PBRpcGuildDayMissinAward_ReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PBRpcGuildDayMissinAward_ReqDefaultTypeInternal() {}
  union {
    PBRpcGuildDayMissinAward_Req _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PBRpcGuildDayMissinAward_ReqDefaultTypeInternal _PBRpcGuildDayMissinAward_Req_default_instance_;
PROTOBUF_CONSTEXPR PBUserMgrRpcCallReq::PBUserMgrRpcCallReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.reqparam_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.cmdid_)*/nullptr
  , /*decltype(_impl_.callback_id_)*/uint64_t{0u}
  , /*decltype(_impl_.param_)*/18
  , /*decltype(_impl_.subrpccmd_)*/1} {}
struct PBUserMgrRpcCallReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PBUserMgrRpcCallReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PBUserMgrRpcCallReqDefaultTypeInternal() {}
  union {
    PBUserMgrRpcCallReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PBUserMgrRpcCallReqDefaultTypeInternal _PBUserMgrRpcCallReq_default_instance_;
PROTOBUF_CONSTEXPR PBUserMgrRpcCallRsp::PBUserMgrRpcCallRsp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.rspparam_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.cmdid_)*/nullptr
  , /*decltype(_impl_.callback_id_)*/uint64_t{0u}
  , /*decltype(_impl_.bsucess_)*/false
  , /*decltype(_impl_.param_)*/19
  , /*decltype(_impl_.subrpccmd_)*/1} {}
struct PBUserMgrRpcCallRspDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PBUserMgrRpcCallRspDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PBUserMgrRpcCallRspDefaultTypeInternal() {}
  union {
    PBUserMgrRpcCallRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PBUserMgrRpcCallRspDefaultTypeInternal _PBUserMgrRpcCallRsp_default_instance_;
static ::_pb::Metadata file_level_metadata_CommonCmd_2eproto[6];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_CommonCmd_2eproto[5];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_CommonCmd_2eproto = nullptr;

const uint32_t TableStruct_CommonCmd_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::PBCommonCmd, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::PBCommonCmd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PBCommonCmd, _impl_.cmd_),
  0,
  PROTOBUF_FIELD_OFFSET(::PBNotifyNewerMailboxReq, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::PBNotifyNewerMailboxReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PBNotifyNewerMailboxReq, _impl_.cmdid_),
  PROTOBUF_FIELD_OFFSET(::PBNotifyNewerMailboxReq, _impl_.param_),
  PROTOBUF_FIELD_OFFSET(::PBNotifyNewerMailboxReq, _impl_.entity_name_),
  PROTOBUF_FIELD_OFFSET(::PBNotifyNewerMailboxReq, _impl_.entity_mb_),
  PROTOBUF_FIELD_OFFSET(::PBNotifyNewerMailboxReq, _impl_.reserved1_),
  1,
  4,
  0,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::PBRpcData_ReduceConsum_Req, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::PBRpcData_ReduceConsum_Req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PBRpcData_ReduceConsum_Req, _impl_.subrpccmd_),
  PROTOBUF_FIELD_OFFSET(::PBRpcData_ReduceConsum_Req, _impl_.config_id_),
  PROTOBUF_FIELD_OFFSET(::PBRpcData_ReduceConsum_Req, _impl_.reduce_count_),
  PROTOBUF_FIELD_OFFSET(::PBRpcData_ReduceConsum_Req, _impl_.reason_),
  3,
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::PBRpcGuildDayMissinAward_Req, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::PBRpcGuildDayMissinAward_Req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PBRpcGuildDayMissinAward_Req, _impl_.subrpccmd_),
  PROTOBUF_FIELD_OFFSET(::PBRpcGuildDayMissinAward_Req, _impl_.bdaymission_),
  PROTOBUF_FIELD_OFFSET(::PBRpcGuildDayMissinAward_Req, _impl_.missionid_),
  2,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::PBUserMgrRpcCallReq, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::PBUserMgrRpcCallReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PBUserMgrRpcCallReq, _impl_.cmdid_),
  PROTOBUF_FIELD_OFFSET(::PBUserMgrRpcCallReq, _impl_.param_),
  PROTOBUF_FIELD_OFFSET(::PBUserMgrRpcCallReq, _impl_.subrpccmd_),
  PROTOBUF_FIELD_OFFSET(::PBUserMgrRpcCallReq, _impl_.callback_id_),
  PROTOBUF_FIELD_OFFSET(::PBUserMgrRpcCallReq, _impl_.reqparam_),
  1,
  3,
  4,
  2,
  0,
  PROTOBUF_FIELD_OFFSET(::PBUserMgrRpcCallRsp, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::PBUserMgrRpcCallRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PBUserMgrRpcCallRsp, _impl_.cmdid_),
  PROTOBUF_FIELD_OFFSET(::PBUserMgrRpcCallRsp, _impl_.param_),
  PROTOBUF_FIELD_OFFSET(::PBUserMgrRpcCallRsp, _impl_.subrpccmd_),
  PROTOBUF_FIELD_OFFSET(::PBUserMgrRpcCallRsp, _impl_.callback_id_),
  PROTOBUF_FIELD_OFFSET(::PBUserMgrRpcCallRsp, _impl_.bsucess_),
  PROTOBUF_FIELD_OFFSET(::PBUserMgrRpcCallRsp, _impl_.rspparam_),
  1,
  4,
  5,
  2,
  3,
  0,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, -1, sizeof(::PBCommonCmd)},
  { 8, 19, -1, sizeof(::PBNotifyNewerMailboxReq)},
  { 24, 34, -1, sizeof(::PBRpcData_ReduceConsum_Req)},
  { 38, 47, -1, sizeof(::PBRpcGuildDayMissinAward_Req)},
  { 50, 61, -1, sizeof(::PBUserMgrRpcCallReq)},
  { 66, 78, -1, sizeof(::PBUserMgrRpcCallRsp)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::_PBCommonCmd_default_instance_._instance,
  &::_PBNotifyNewerMailboxReq_default_instance_._instance,
  &::_PBRpcData_ReduceConsum_Req_default_instance_._instance,
  &::_PBRpcGuildDayMissinAward_Req_default_instance_._instance,
  &::_PBUserMgrRpcCallReq_default_instance_._instance,
  &::_PBUserMgrRpcCallRsp_default_instance_._instance,
};

const char descriptor_table_protodef_CommonCmd_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\017CommonCmd.proto\032\016xCommond.proto\032\014Entit"
  "y.proto\"3\n\013PBCommonCmd\022$\n\003cmd\030\001 \001(\0162\010.Cm"
  "dType:\rPB_COMMON_CMD\"\317\001\n\027PBNotifyNewerMa"
  "ilboxReq\022\033\n\005cmdID\030\001 \001(\0132\014.PBCommonCmd\0228\n"
  "\005param\030\002 \001(\0162\020.PBCommonCmdType:\027PB_NOTIF"
  "Y_NEWER_MAILBOX\022\023\n\013entity_name\030\003 \001(\t\022#\n\t"
  "entity_mb\030\004 \001(\0132\020.PBEntityMailbox\022\021\n\tres"
  "erved1\030\005 \001(\004\"\020\n\005MsgID\022\007\n\002ID\020\331\017\"\217\001\n\032PBRpc"
  "Data_ReduceConsum_Req\0228\n\tsubRpcCmd\030\001 \001(\016"
  "2\r.PBSubRpcType:\026RPC_REDUCE_Consume_REQ\022"
  "\021\n\tconfig_id\030\002 \001(\r\022\024\n\014reduce_count\030\003 \001(\r"
  "\022\016\n\006reason\030\004 \001(\r\"\206\001\n\034PBRpcGuildDayMissin"
  "Award_Req\022>\n\tsubRpcCmd\030\001 \001(\0162\r.PBSubRpcT"
  "ype:\034RPC_GUILD_DAYMISSINAWARD_REQ\022\023\n\013bDa"
  "yMission\030\002 \001(\010\022\021\n\tmissionId\030\003 \001(\005\"\306\001\n\023PB"
  "UserMgrRpcCallReq\022\033\n\005cmdID\030\001 \001(\0132\014.PBCom"
  "monCmd\0227\n\005param\030\002 \001(\0162\020.PBCommonCmdType:"
  "\026PB_UserMgr_RpcCall_REQ\022 \n\tsubRpcCmd\030\003 \001"
  "(\0162\r.PBSubRpcType\022\023\n\013callback_id\030\004 \001(\004\022\020"
  "\n\010reqParam\030\005 \001(\014\"\020\n\005MsgID\022\007\n\002ID\020\346\017\"\327\001\n\023P"
  "BUserMgrRpcCallRsp\022\033\n\005cmdID\030\001 \001(\0132\014.PBCo"
  "mmonCmd\0227\n\005param\030\002 \001(\0162\020.PBCommonCmdType"
  ":\026PB_UserMgr_RpcCall_RSP\022 \n\tsubRpcCmd\030\003 "
  "\001(\0162\r.PBSubRpcType\022\023\n\013callback_id\030\004 \001(\004\022"
  "\017\n\007bSucess\030\005 \001(\010\022\020\n\010rspParam\030\006 \001(\014\"\020\n\005Ms"
  "gID\022\007\n\002ID\020\347\017*\277\006\n\017PBCommonCmdType\022\034\n\030PB_L"
  "OBBYGATE_USER_ONLINE\020\001\022\035\n\031PB_LOBBYGATE_U"
  "SER_OFFLINE\020\002\022\033\n\027PB_NOTIFY_NEWER_MAILBOX"
  "\020\003\022\036\n\032PB_USERMGR_SEARCH_USER_REQ\020\004\022\036\n\032PB"
  "_USERMGR_SEARCH_USER_RSP\020\005\022\031\n\025PB_DbMgr_E"
  "XEC_SQL_REQ\020\006\022\031\n\025PB_DbMgr_EXEC_SQL_RSP\020\007"
  "\022\033\n\027PB_DbMgr_INSERT_SQL_REQ\020\010\022\033\n\027PB_DbMg"
  "r_INSERT_SQL_RSP\020\t\022\033\n\027PB_DbMgr_UPDATE_SQ"
  "L_REQ\020\n\022\033\n\027PB_DbMgr_UPDATE_SQL_RSP\020\013\022\033\n\027"
  "PB_DbMgr_SELECT_SQL_REQ\020\014\022\033\n\027PB_DbMgr_SE"
  "LECT_SQL_RSP\020\r\022!\n\035PB_DbMgr_SELECT_COUNT_"
  "SQL_REQ\020\016\022!\n\035PB_DbMgr_SELECT_COUNT_SQL_R"
  "SP\020\017\022*\n&PB_UserMgr_GetPlayerBaseDataSimp"
  "le_REQ\020\020\022*\n&PB_UserMgr_GetPlayerBaseData"
  "Simple_RSP\020\021\022\032\n\026PB_UserMgr_RpcCall_REQ\020\022"
  "\022\032\n\026PB_UserMgr_RpcCall_RSP\020\023\022\037\n\033PB_Playe"
  "rBaseDataSimple_SYN\020\024\022\031\n\025PB_PlayerRechar"
  "ge_SYN\020\025\022&\n\"PB_NOTIFY_GAMEMGR_LOADED_SUC"
  "CESSED\020\036\022&\n\"PB_NOTIFY_GAMEMGR_INITED_SUC"
  "CESSED\020\037\022%\n!PB_NOTIFY_GlobalEntity_START"
  "_INIT\020 \022%\n!PB_NOTIFY_LOGIN_SERVER_OPEN_L"
  "OGIN\020(*n\n\014PBSubRpcType\022\032\n\026RPC_REDUCE_Con"
  "sume_REQ\020\001\022 \n\034RPC_GUILD_DAYMISSINAWARD_R"
  "EQ\020\002\022 \n\034RPC_GUILD_DAYMISSONAWARD_RSP\020\003"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_CommonCmd_2eproto_deps[2] = {
  &::descriptor_table_Entity_2eproto,
  &::descriptor_table_xCommond_2eproto,
};
static ::_pbi::once_flag descriptor_table_CommonCmd_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_CommonCmd_2eproto = {
    false, false, 1958, descriptor_table_protodef_CommonCmd_2eproto,
    "CommonCmd.proto",
    &descriptor_table_CommonCmd_2eproto_once, descriptor_table_CommonCmd_2eproto_deps, 2, 6,
    schemas, file_default_instances, TableStruct_CommonCmd_2eproto::offsets,
    file_level_metadata_CommonCmd_2eproto, file_level_enum_descriptors_CommonCmd_2eproto,
    file_level_service_descriptors_CommonCmd_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_CommonCmd_2eproto_getter() {
  return &descriptor_table_CommonCmd_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_CommonCmd_2eproto(&descriptor_table_CommonCmd_2eproto);
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PBNotifyNewerMailboxReq_MsgID_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_CommonCmd_2eproto);
  return file_level_enum_descriptors_CommonCmd_2eproto[0];
}
bool PBNotifyNewerMailboxReq_MsgID_IsValid(int value) {
  switch (value) {
    case 2009:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr PBNotifyNewerMailboxReq_MsgID PBNotifyNewerMailboxReq::ID;
constexpr PBNotifyNewerMailboxReq_MsgID PBNotifyNewerMailboxReq::MsgID_MIN;
constexpr PBNotifyNewerMailboxReq_MsgID PBNotifyNewerMailboxReq::MsgID_MAX;
constexpr int PBNotifyNewerMailboxReq::MsgID_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PBUserMgrRpcCallReq_MsgID_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_CommonCmd_2eproto);
  return file_level_enum_descriptors_CommonCmd_2eproto[1];
}
bool PBUserMgrRpcCallReq_MsgID_IsValid(int value) {
  switch (value) {
    case 2022:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr PBUserMgrRpcCallReq_MsgID PBUserMgrRpcCallReq::ID;
constexpr PBUserMgrRpcCallReq_MsgID PBUserMgrRpcCallReq::MsgID_MIN;
constexpr PBUserMgrRpcCallReq_MsgID PBUserMgrRpcCallReq::MsgID_MAX;
constexpr int PBUserMgrRpcCallReq::MsgID_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PBUserMgrRpcCallRsp_MsgID_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_CommonCmd_2eproto);
  return file_level_enum_descriptors_CommonCmd_2eproto[2];
}
bool PBUserMgrRpcCallRsp_MsgID_IsValid(int value) {
  switch (value) {
    case 2023:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr PBUserMgrRpcCallRsp_MsgID PBUserMgrRpcCallRsp::ID;
constexpr PBUserMgrRpcCallRsp_MsgID PBUserMgrRpcCallRsp::MsgID_MIN;
constexpr PBUserMgrRpcCallRsp_MsgID PBUserMgrRpcCallRsp::MsgID_MAX;
constexpr int PBUserMgrRpcCallRsp::MsgID_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PBCommonCmdType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_CommonCmd_2eproto);
  return file_level_enum_descriptors_CommonCmd_2eproto[3];
}
bool PBCommonCmdType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 30:
    case 31:
    case 32:
    case 40:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PBSubRpcType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_CommonCmd_2eproto);
  return file_level_enum_descriptors_CommonCmd_2eproto[4];
}
bool PBSubRpcType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class PBCommonCmd::_Internal {
 public:
  using HasBits = decltype(std::declval<PBCommonCmd>()._impl_._has_bits_);
  static void set_has_cmd(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

PBCommonCmd::PBCommonCmd(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:PBCommonCmd)
}
PBCommonCmd::PBCommonCmd(const PBCommonCmd& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PBCommonCmd* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.cmd_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.cmd_ = from._impl_.cmd_;
  // @@protoc_insertion_point(copy_constructor:PBCommonCmd)
}

inline void PBCommonCmd::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.cmd_){2}
  };
}

PBCommonCmd::~PBCommonCmd() {
  // @@protoc_insertion_point(destructor:PBCommonCmd)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PBCommonCmd::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PBCommonCmd::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PBCommonCmd::Clear() {
// @@protoc_insertion_point(message_clear_start:PBCommonCmd)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.cmd_ = 2;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PBCommonCmd::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CmdType cmd = 1 [default = PB_COMMON_CMD];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CmdType_IsValid(val))) {
            _internal_set_cmd(static_cast<::CmdType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PBCommonCmd::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBCommonCmd)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CmdType cmd = 1 [default = PB_COMMON_CMD];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_cmd(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBCommonCmd)
  return target;
}

size_t PBCommonCmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBCommonCmd)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CmdType cmd = 1 [default = PB_COMMON_CMD];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_cmd());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PBCommonCmd::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PBCommonCmd::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PBCommonCmd::GetClassData() const { return &_class_data_; }


void PBCommonCmd::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PBCommonCmd*>(&to_msg);
  auto& from = static_cast<const PBCommonCmd&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PBCommonCmd)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_cmd()) {
    _this->_internal_set_cmd(from._internal_cmd());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PBCommonCmd::CopyFrom(const PBCommonCmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBCommonCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBCommonCmd::IsInitialized() const {
  return true;
}

void PBCommonCmd::InternalSwap(PBCommonCmd* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.cmd_, other->_impl_.cmd_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PBCommonCmd::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_CommonCmd_2eproto_getter, &descriptor_table_CommonCmd_2eproto_once,
      file_level_metadata_CommonCmd_2eproto[0]);
}

// ===================================================================

class PBNotifyNewerMailboxReq::_Internal {
 public:
  using HasBits = decltype(std::declval<PBNotifyNewerMailboxReq>()._impl_._has_bits_);
  static const ::PBCommonCmd& cmdid(const PBNotifyNewerMailboxReq* msg);
  static void set_has_cmdid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_param(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_entity_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::PBEntityMailbox& entity_mb(const PBNotifyNewerMailboxReq* msg);
  static void set_has_entity_mb(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_reserved1(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::PBCommonCmd&
PBNotifyNewerMailboxReq::_Internal::cmdid(const PBNotifyNewerMailboxReq* msg) {
  return *msg->_impl_.cmdid_;
}
const ::PBEntityMailbox&
PBNotifyNewerMailboxReq::_Internal::entity_mb(const PBNotifyNewerMailboxReq* msg) {
  return *msg->_impl_.entity_mb_;
}
void PBNotifyNewerMailboxReq::clear_entity_mb() {
  if (_impl_.entity_mb_ != nullptr) _impl_.entity_mb_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
PBNotifyNewerMailboxReq::PBNotifyNewerMailboxReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:PBNotifyNewerMailboxReq)
}
PBNotifyNewerMailboxReq::PBNotifyNewerMailboxReq(const PBNotifyNewerMailboxReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PBNotifyNewerMailboxReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.entity_name_){}
    , decltype(_impl_.cmdid_){nullptr}
    , decltype(_impl_.entity_mb_){nullptr}
    , decltype(_impl_.reserved1_){}
    , decltype(_impl_.param_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.entity_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.entity_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_entity_name()) {
    _this->_impl_.entity_name_.Set(from._internal_entity_name(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_cmdid()) {
    _this->_impl_.cmdid_ = new ::PBCommonCmd(*from._impl_.cmdid_);
  }
  if (from._internal_has_entity_mb()) {
    _this->_impl_.entity_mb_ = new ::PBEntityMailbox(*from._impl_.entity_mb_);
  }
  ::memcpy(&_impl_.reserved1_, &from._impl_.reserved1_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.param_) -
    reinterpret_cast<char*>(&_impl_.reserved1_)) + sizeof(_impl_.param_));
  // @@protoc_insertion_point(copy_constructor:PBNotifyNewerMailboxReq)
}

inline void PBNotifyNewerMailboxReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.entity_name_){}
    , decltype(_impl_.cmdid_){nullptr}
    , decltype(_impl_.entity_mb_){nullptr}
    , decltype(_impl_.reserved1_){uint64_t{0u}}
    , decltype(_impl_.param_){3}
  };
  _impl_.entity_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.entity_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PBNotifyNewerMailboxReq::~PBNotifyNewerMailboxReq() {
  // @@protoc_insertion_point(destructor:PBNotifyNewerMailboxReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PBNotifyNewerMailboxReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.entity_name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.cmdid_;
  if (this != internal_default_instance()) delete _impl_.entity_mb_;
}

void PBNotifyNewerMailboxReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PBNotifyNewerMailboxReq::Clear() {
// @@protoc_insertion_point(message_clear_start:PBNotifyNewerMailboxReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.entity_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.cmdid_ != nullptr);
      _impl_.cmdid_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.entity_mb_ != nullptr);
      _impl_.entity_mb_->Clear();
    }
  }
  if (cached_has_bits & 0x00000018u) {
    _impl_.reserved1_ = uint64_t{0u};
    _impl_.param_ = 3;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PBNotifyNewerMailboxReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .PBCommonCmd cmdID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_cmdid(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .PBCommonCmdType param = 2 [default = PB_NOTIFY_NEWER_MAILBOX];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::PBCommonCmdType_IsValid(val))) {
            _internal_set_param(static_cast<::PBCommonCmdType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional string entity_name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_entity_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "PBNotifyNewerMailboxReq.entity_name");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional .PBEntityMailbox entity_mb = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_entity_mb(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint64 reserved1 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_reserved1(&has_bits);
          _impl_.reserved1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PBNotifyNewerMailboxReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBNotifyNewerMailboxReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .PBCommonCmd cmdID = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::cmdid(this),
        _Internal::cmdid(this).GetCachedSize(), target, stream);
  }

  // optional .PBCommonCmdType param = 2 [default = PB_NOTIFY_NEWER_MAILBOX];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_param(), target);
  }

  // optional string entity_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_entity_name().data(), static_cast<int>(this->_internal_entity_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "PBNotifyNewerMailboxReq.entity_name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_entity_name(), target);
  }

  // optional .PBEntityMailbox entity_mb = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::entity_mb(this),
        _Internal::entity_mb(this).GetCachedSize(), target, stream);
  }

  // optional uint64 reserved1 = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(5, this->_internal_reserved1(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBNotifyNewerMailboxReq)
  return target;
}

size_t PBNotifyNewerMailboxReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBNotifyNewerMailboxReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string entity_name = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_entity_name());
    }

    // optional .PBCommonCmd cmdID = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.cmdid_);
    }

    // optional .PBEntityMailbox entity_mb = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.entity_mb_);
    }

    // optional uint64 reserved1 = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_reserved1());
    }

    // optional .PBCommonCmdType param = 2 [default = PB_NOTIFY_NEWER_MAILBOX];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_param());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PBNotifyNewerMailboxReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PBNotifyNewerMailboxReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PBNotifyNewerMailboxReq::GetClassData() const { return &_class_data_; }


void PBNotifyNewerMailboxReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PBNotifyNewerMailboxReq*>(&to_msg);
  auto& from = static_cast<const PBNotifyNewerMailboxReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PBNotifyNewerMailboxReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_entity_name(from._internal_entity_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_cmdid()->::PBCommonCmd::MergeFrom(
          from._internal_cmdid());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_entity_mb()->::PBEntityMailbox::MergeFrom(
          from._internal_entity_mb());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.reserved1_ = from._impl_.reserved1_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.param_ = from._impl_.param_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PBNotifyNewerMailboxReq::CopyFrom(const PBNotifyNewerMailboxReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBNotifyNewerMailboxReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBNotifyNewerMailboxReq::IsInitialized() const {
  return true;
}

void PBNotifyNewerMailboxReq::InternalSwap(PBNotifyNewerMailboxReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.entity_name_, lhs_arena,
      &other->_impl_.entity_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PBNotifyNewerMailboxReq, _impl_.reserved1_)
      + sizeof(PBNotifyNewerMailboxReq::_impl_.reserved1_)
      - PROTOBUF_FIELD_OFFSET(PBNotifyNewerMailboxReq, _impl_.cmdid_)>(
          reinterpret_cast<char*>(&_impl_.cmdid_),
          reinterpret_cast<char*>(&other->_impl_.cmdid_));
  swap(_impl_.param_, other->_impl_.param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PBNotifyNewerMailboxReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_CommonCmd_2eproto_getter, &descriptor_table_CommonCmd_2eproto_once,
      file_level_metadata_CommonCmd_2eproto[1]);
}

// ===================================================================

class PBRpcData_ReduceConsum_Req::_Internal {
 public:
  using HasBits = decltype(std::declval<PBRpcData_ReduceConsum_Req>()._impl_._has_bits_);
  static void set_has_subrpccmd(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_config_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_reduce_count(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_reason(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

PBRpcData_ReduceConsum_Req::PBRpcData_ReduceConsum_Req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:PBRpcData_ReduceConsum_Req)
}
PBRpcData_ReduceConsum_Req::PBRpcData_ReduceConsum_Req(const PBRpcData_ReduceConsum_Req& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PBRpcData_ReduceConsum_Req* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.config_id_){}
    , decltype(_impl_.reduce_count_){}
    , decltype(_impl_.reason_){}
    , decltype(_impl_.subrpccmd_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.config_id_, &from._impl_.config_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.subrpccmd_) -
    reinterpret_cast<char*>(&_impl_.config_id_)) + sizeof(_impl_.subrpccmd_));
  // @@protoc_insertion_point(copy_constructor:PBRpcData_ReduceConsum_Req)
}

inline void PBRpcData_ReduceConsum_Req::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.config_id_){0u}
    , decltype(_impl_.reduce_count_){0u}
    , decltype(_impl_.reason_){0u}
    , decltype(_impl_.subrpccmd_){1}
  };
}

PBRpcData_ReduceConsum_Req::~PBRpcData_ReduceConsum_Req() {
  // @@protoc_insertion_point(destructor:PBRpcData_ReduceConsum_Req)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PBRpcData_ReduceConsum_Req::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PBRpcData_ReduceConsum_Req::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PBRpcData_ReduceConsum_Req::Clear() {
// @@protoc_insertion_point(message_clear_start:PBRpcData_ReduceConsum_Req)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.config_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.reason_) -
        reinterpret_cast<char*>(&_impl_.config_id_)) + sizeof(_impl_.reason_));
    _impl_.subrpccmd_ = 1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PBRpcData_ReduceConsum_Req::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .PBSubRpcType subRpcCmd = 1 [default = RPC_REDUCE_Consume_REQ];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::PBSubRpcType_IsValid(val))) {
            _internal_set_subrpccmd(static_cast<::PBSubRpcType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional uint32 config_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_config_id(&has_bits);
          _impl_.config_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 reduce_count = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_reduce_count(&has_bits);
          _impl_.reduce_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 reason = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_reason(&has_bits);
          _impl_.reason_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PBRpcData_ReduceConsum_Req::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBRpcData_ReduceConsum_Req)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .PBSubRpcType subRpcCmd = 1 [default = RPC_REDUCE_Consume_REQ];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_subrpccmd(), target);
  }

  // optional uint32 config_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_config_id(), target);
  }

  // optional uint32 reduce_count = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_reduce_count(), target);
  }

  // optional uint32 reason = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_reason(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBRpcData_ReduceConsum_Req)
  return target;
}

size_t PBRpcData_ReduceConsum_Req::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBRpcData_ReduceConsum_Req)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional uint32 config_id = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_config_id());
    }

    // optional uint32 reduce_count = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_reduce_count());
    }

    // optional uint32 reason = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_reason());
    }

    // optional .PBSubRpcType subRpcCmd = 1 [default = RPC_REDUCE_Consume_REQ];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_subrpccmd());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PBRpcData_ReduceConsum_Req::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PBRpcData_ReduceConsum_Req::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PBRpcData_ReduceConsum_Req::GetClassData() const { return &_class_data_; }


void PBRpcData_ReduceConsum_Req::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PBRpcData_ReduceConsum_Req*>(&to_msg);
  auto& from = static_cast<const PBRpcData_ReduceConsum_Req&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PBRpcData_ReduceConsum_Req)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.config_id_ = from._impl_.config_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.reduce_count_ = from._impl_.reduce_count_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.reason_ = from._impl_.reason_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.subrpccmd_ = from._impl_.subrpccmd_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PBRpcData_ReduceConsum_Req::CopyFrom(const PBRpcData_ReduceConsum_Req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBRpcData_ReduceConsum_Req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBRpcData_ReduceConsum_Req::IsInitialized() const {
  return true;
}

void PBRpcData_ReduceConsum_Req::InternalSwap(PBRpcData_ReduceConsum_Req* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PBRpcData_ReduceConsum_Req, _impl_.reason_)
      + sizeof(PBRpcData_ReduceConsum_Req::_impl_.reason_)
      - PROTOBUF_FIELD_OFFSET(PBRpcData_ReduceConsum_Req, _impl_.config_id_)>(
          reinterpret_cast<char*>(&_impl_.config_id_),
          reinterpret_cast<char*>(&other->_impl_.config_id_));
  swap(_impl_.subrpccmd_, other->_impl_.subrpccmd_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PBRpcData_ReduceConsum_Req::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_CommonCmd_2eproto_getter, &descriptor_table_CommonCmd_2eproto_once,
      file_level_metadata_CommonCmd_2eproto[2]);
}

// ===================================================================

class PBRpcGuildDayMissinAward_Req::_Internal {
 public:
  using HasBits = decltype(std::declval<PBRpcGuildDayMissinAward_Req>()._impl_._has_bits_);
  static void set_has_subrpccmd(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_bdaymission(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_missionid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

PBRpcGuildDayMissinAward_Req::PBRpcGuildDayMissinAward_Req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:PBRpcGuildDayMissinAward_Req)
}
PBRpcGuildDayMissinAward_Req::PBRpcGuildDayMissinAward_Req(const PBRpcGuildDayMissinAward_Req& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PBRpcGuildDayMissinAward_Req* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.bdaymission_){}
    , decltype(_impl_.missionid_){}
    , decltype(_impl_.subrpccmd_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.bdaymission_, &from._impl_.bdaymission_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.subrpccmd_) -
    reinterpret_cast<char*>(&_impl_.bdaymission_)) + sizeof(_impl_.subrpccmd_));
  // @@protoc_insertion_point(copy_constructor:PBRpcGuildDayMissinAward_Req)
}

inline void PBRpcGuildDayMissinAward_Req::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.bdaymission_){false}
    , decltype(_impl_.missionid_){0}
    , decltype(_impl_.subrpccmd_){2}
  };
}

PBRpcGuildDayMissinAward_Req::~PBRpcGuildDayMissinAward_Req() {
  // @@protoc_insertion_point(destructor:PBRpcGuildDayMissinAward_Req)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PBRpcGuildDayMissinAward_Req::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PBRpcGuildDayMissinAward_Req::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PBRpcGuildDayMissinAward_Req::Clear() {
// @@protoc_insertion_point(message_clear_start:PBRpcGuildDayMissinAward_Req)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.bdaymission_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.missionid_) -
        reinterpret_cast<char*>(&_impl_.bdaymission_)) + sizeof(_impl_.missionid_));
    _impl_.subrpccmd_ = 2;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PBRpcGuildDayMissinAward_Req::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .PBSubRpcType subRpcCmd = 1 [default = RPC_GUILD_DAYMISSINAWARD_REQ];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::PBSubRpcType_IsValid(val))) {
            _internal_set_subrpccmd(static_cast<::PBSubRpcType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional bool bDayMission = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_bdaymission(&has_bits);
          _impl_.bdaymission_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 missionId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_missionid(&has_bits);
          _impl_.missionid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PBRpcGuildDayMissinAward_Req::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBRpcGuildDayMissinAward_Req)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .PBSubRpcType subRpcCmd = 1 [default = RPC_GUILD_DAYMISSINAWARD_REQ];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_subrpccmd(), target);
  }

  // optional bool bDayMission = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_bdaymission(), target);
  }

  // optional int32 missionId = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_missionid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBRpcGuildDayMissinAward_Req)
  return target;
}

size_t PBRpcGuildDayMissinAward_Req::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBRpcGuildDayMissinAward_Req)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional bool bDayMission = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 1;
    }

    // optional int32 missionId = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_missionid());
    }

    // optional .PBSubRpcType subRpcCmd = 1 [default = RPC_GUILD_DAYMISSINAWARD_REQ];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_subrpccmd());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PBRpcGuildDayMissinAward_Req::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PBRpcGuildDayMissinAward_Req::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PBRpcGuildDayMissinAward_Req::GetClassData() const { return &_class_data_; }


void PBRpcGuildDayMissinAward_Req::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PBRpcGuildDayMissinAward_Req*>(&to_msg);
  auto& from = static_cast<const PBRpcGuildDayMissinAward_Req&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PBRpcGuildDayMissinAward_Req)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.bdaymission_ = from._impl_.bdaymission_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.missionid_ = from._impl_.missionid_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.subrpccmd_ = from._impl_.subrpccmd_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PBRpcGuildDayMissinAward_Req::CopyFrom(const PBRpcGuildDayMissinAward_Req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBRpcGuildDayMissinAward_Req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBRpcGuildDayMissinAward_Req::IsInitialized() const {
  return true;
}

void PBRpcGuildDayMissinAward_Req::InternalSwap(PBRpcGuildDayMissinAward_Req* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PBRpcGuildDayMissinAward_Req, _impl_.missionid_)
      + sizeof(PBRpcGuildDayMissinAward_Req::_impl_.missionid_)
      - PROTOBUF_FIELD_OFFSET(PBRpcGuildDayMissinAward_Req, _impl_.bdaymission_)>(
          reinterpret_cast<char*>(&_impl_.bdaymission_),
          reinterpret_cast<char*>(&other->_impl_.bdaymission_));
  swap(_impl_.subrpccmd_, other->_impl_.subrpccmd_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PBRpcGuildDayMissinAward_Req::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_CommonCmd_2eproto_getter, &descriptor_table_CommonCmd_2eproto_once,
      file_level_metadata_CommonCmd_2eproto[3]);
}

// ===================================================================

class PBUserMgrRpcCallReq::_Internal {
 public:
  using HasBits = decltype(std::declval<PBUserMgrRpcCallReq>()._impl_._has_bits_);
  static const ::PBCommonCmd& cmdid(const PBUserMgrRpcCallReq* msg);
  static void set_has_cmdid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_param(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_subrpccmd(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_callback_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_reqparam(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::PBCommonCmd&
PBUserMgrRpcCallReq::_Internal::cmdid(const PBUserMgrRpcCallReq* msg) {
  return *msg->_impl_.cmdid_;
}
PBUserMgrRpcCallReq::PBUserMgrRpcCallReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:PBUserMgrRpcCallReq)
}
PBUserMgrRpcCallReq::PBUserMgrRpcCallReq(const PBUserMgrRpcCallReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PBUserMgrRpcCallReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.reqparam_){}
    , decltype(_impl_.cmdid_){nullptr}
    , decltype(_impl_.callback_id_){}
    , decltype(_impl_.param_){}
    , decltype(_impl_.subrpccmd_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.reqparam_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.reqparam_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_reqparam()) {
    _this->_impl_.reqparam_.Set(from._internal_reqparam(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_cmdid()) {
    _this->_impl_.cmdid_ = new ::PBCommonCmd(*from._impl_.cmdid_);
  }
  ::memcpy(&_impl_.callback_id_, &from._impl_.callback_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.subrpccmd_) -
    reinterpret_cast<char*>(&_impl_.callback_id_)) + sizeof(_impl_.subrpccmd_));
  // @@protoc_insertion_point(copy_constructor:PBUserMgrRpcCallReq)
}

inline void PBUserMgrRpcCallReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.reqparam_){}
    , decltype(_impl_.cmdid_){nullptr}
    , decltype(_impl_.callback_id_){uint64_t{0u}}
    , decltype(_impl_.param_){18}
    , decltype(_impl_.subrpccmd_){1}
  };
  _impl_.reqparam_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.reqparam_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PBUserMgrRpcCallReq::~PBUserMgrRpcCallReq() {
  // @@protoc_insertion_point(destructor:PBUserMgrRpcCallReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PBUserMgrRpcCallReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.reqparam_.Destroy();
  if (this != internal_default_instance()) delete _impl_.cmdid_;
}

void PBUserMgrRpcCallReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PBUserMgrRpcCallReq::Clear() {
// @@protoc_insertion_point(message_clear_start:PBUserMgrRpcCallReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.reqparam_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.cmdid_ != nullptr);
      _impl_.cmdid_->Clear();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    _impl_.callback_id_ = uint64_t{0u};
    _impl_.param_ = 18;
    _impl_.subrpccmd_ = 1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PBUserMgrRpcCallReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .PBCommonCmd cmdID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_cmdid(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .PBCommonCmdType param = 2 [default = PB_UserMgr_RpcCall_REQ];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::PBCommonCmdType_IsValid(val))) {
            _internal_set_param(static_cast<::PBCommonCmdType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional .PBSubRpcType subRpcCmd = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::PBSubRpcType_IsValid(val))) {
            _internal_set_subrpccmd(static_cast<::PBSubRpcType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional uint64 callback_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_callback_id(&has_bits);
          _impl_.callback_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bytes reqParam = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_reqparam();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PBUserMgrRpcCallReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBUserMgrRpcCallReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .PBCommonCmd cmdID = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::cmdid(this),
        _Internal::cmdid(this).GetCachedSize(), target, stream);
  }

  // optional .PBCommonCmdType param = 2 [default = PB_UserMgr_RpcCall_REQ];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_param(), target);
  }

  // optional .PBSubRpcType subRpcCmd = 3;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_subrpccmd(), target);
  }

  // optional uint64 callback_id = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(4, this->_internal_callback_id(), target);
  }

  // optional bytes reqParam = 5;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_reqparam(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBUserMgrRpcCallReq)
  return target;
}

size_t PBUserMgrRpcCallReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBUserMgrRpcCallReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional bytes reqParam = 5;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_reqparam());
    }

    // optional .PBCommonCmd cmdID = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.cmdid_);
    }

    // optional uint64 callback_id = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_callback_id());
    }

    // optional .PBCommonCmdType param = 2 [default = PB_UserMgr_RpcCall_REQ];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_param());
    }

    // optional .PBSubRpcType subRpcCmd = 3;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_subrpccmd());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PBUserMgrRpcCallReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PBUserMgrRpcCallReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PBUserMgrRpcCallReq::GetClassData() const { return &_class_data_; }


void PBUserMgrRpcCallReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PBUserMgrRpcCallReq*>(&to_msg);
  auto& from = static_cast<const PBUserMgrRpcCallReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PBUserMgrRpcCallReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_reqparam(from._internal_reqparam());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_cmdid()->::PBCommonCmd::MergeFrom(
          from._internal_cmdid());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.callback_id_ = from._impl_.callback_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.param_ = from._impl_.param_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.subrpccmd_ = from._impl_.subrpccmd_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PBUserMgrRpcCallReq::CopyFrom(const PBUserMgrRpcCallReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBUserMgrRpcCallReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBUserMgrRpcCallReq::IsInitialized() const {
  return true;
}

void PBUserMgrRpcCallReq::InternalSwap(PBUserMgrRpcCallReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.reqparam_, lhs_arena,
      &other->_impl_.reqparam_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PBUserMgrRpcCallReq, _impl_.callback_id_)
      + sizeof(PBUserMgrRpcCallReq::_impl_.callback_id_)
      - PROTOBUF_FIELD_OFFSET(PBUserMgrRpcCallReq, _impl_.cmdid_)>(
          reinterpret_cast<char*>(&_impl_.cmdid_),
          reinterpret_cast<char*>(&other->_impl_.cmdid_));
  swap(_impl_.param_, other->_impl_.param_);
  swap(_impl_.subrpccmd_, other->_impl_.subrpccmd_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PBUserMgrRpcCallReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_CommonCmd_2eproto_getter, &descriptor_table_CommonCmd_2eproto_once,
      file_level_metadata_CommonCmd_2eproto[4]);
}

// ===================================================================

class PBUserMgrRpcCallRsp::_Internal {
 public:
  using HasBits = decltype(std::declval<PBUserMgrRpcCallRsp>()._impl_._has_bits_);
  static const ::PBCommonCmd& cmdid(const PBUserMgrRpcCallRsp* msg);
  static void set_has_cmdid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_param(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_subrpccmd(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_callback_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_bsucess(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_rspparam(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::PBCommonCmd&
PBUserMgrRpcCallRsp::_Internal::cmdid(const PBUserMgrRpcCallRsp* msg) {
  return *msg->_impl_.cmdid_;
}
PBUserMgrRpcCallRsp::PBUserMgrRpcCallRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:PBUserMgrRpcCallRsp)
}
PBUserMgrRpcCallRsp::PBUserMgrRpcCallRsp(const PBUserMgrRpcCallRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PBUserMgrRpcCallRsp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.rspparam_){}
    , decltype(_impl_.cmdid_){nullptr}
    , decltype(_impl_.callback_id_){}
    , decltype(_impl_.bsucess_){}
    , decltype(_impl_.param_){}
    , decltype(_impl_.subrpccmd_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.rspparam_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.rspparam_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_rspparam()) {
    _this->_impl_.rspparam_.Set(from._internal_rspparam(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_cmdid()) {
    _this->_impl_.cmdid_ = new ::PBCommonCmd(*from._impl_.cmdid_);
  }
  ::memcpy(&_impl_.callback_id_, &from._impl_.callback_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.subrpccmd_) -
    reinterpret_cast<char*>(&_impl_.callback_id_)) + sizeof(_impl_.subrpccmd_));
  // @@protoc_insertion_point(copy_constructor:PBUserMgrRpcCallRsp)
}

inline void PBUserMgrRpcCallRsp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.rspparam_){}
    , decltype(_impl_.cmdid_){nullptr}
    , decltype(_impl_.callback_id_){uint64_t{0u}}
    , decltype(_impl_.bsucess_){false}
    , decltype(_impl_.param_){19}
    , decltype(_impl_.subrpccmd_){1}
  };
  _impl_.rspparam_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.rspparam_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PBUserMgrRpcCallRsp::~PBUserMgrRpcCallRsp() {
  // @@protoc_insertion_point(destructor:PBUserMgrRpcCallRsp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PBUserMgrRpcCallRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.rspparam_.Destroy();
  if (this != internal_default_instance()) delete _impl_.cmdid_;
}

void PBUserMgrRpcCallRsp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PBUserMgrRpcCallRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:PBUserMgrRpcCallRsp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.rspparam_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.cmdid_ != nullptr);
      _impl_.cmdid_->Clear();
    }
  }
  if (cached_has_bits & 0x0000003cu) {
    ::memset(&_impl_.callback_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.bsucess_) -
        reinterpret_cast<char*>(&_impl_.callback_id_)) + sizeof(_impl_.bsucess_));
    _impl_.param_ = 19;
    _impl_.subrpccmd_ = 1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PBUserMgrRpcCallRsp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .PBCommonCmd cmdID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_cmdid(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .PBCommonCmdType param = 2 [default = PB_UserMgr_RpcCall_RSP];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::PBCommonCmdType_IsValid(val))) {
            _internal_set_param(static_cast<::PBCommonCmdType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional .PBSubRpcType subRpcCmd = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::PBSubRpcType_IsValid(val))) {
            _internal_set_subrpccmd(static_cast<::PBSubRpcType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional uint64 callback_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_callback_id(&has_bits);
          _impl_.callback_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool bSucess = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_bsucess(&has_bits);
          _impl_.bsucess_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bytes rspParam = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_rspparam();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PBUserMgrRpcCallRsp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBUserMgrRpcCallRsp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .PBCommonCmd cmdID = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::cmdid(this),
        _Internal::cmdid(this).GetCachedSize(), target, stream);
  }

  // optional .PBCommonCmdType param = 2 [default = PB_UserMgr_RpcCall_RSP];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_param(), target);
  }

  // optional .PBSubRpcType subRpcCmd = 3;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_subrpccmd(), target);
  }

  // optional uint64 callback_id = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(4, this->_internal_callback_id(), target);
  }

  // optional bool bSucess = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_bsucess(), target);
  }

  // optional bytes rspParam = 6;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        6, this->_internal_rspparam(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBUserMgrRpcCallRsp)
  return target;
}

size_t PBUserMgrRpcCallRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBUserMgrRpcCallRsp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional bytes rspParam = 6;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_rspparam());
    }

    // optional .PBCommonCmd cmdID = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.cmdid_);
    }

    // optional uint64 callback_id = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_callback_id());
    }

    // optional bool bSucess = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

    // optional .PBCommonCmdType param = 2 [default = PB_UserMgr_RpcCall_RSP];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_param());
    }

    // optional .PBSubRpcType subRpcCmd = 3;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_subrpccmd());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PBUserMgrRpcCallRsp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PBUserMgrRpcCallRsp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PBUserMgrRpcCallRsp::GetClassData() const { return &_class_data_; }


void PBUserMgrRpcCallRsp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PBUserMgrRpcCallRsp*>(&to_msg);
  auto& from = static_cast<const PBUserMgrRpcCallRsp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PBUserMgrRpcCallRsp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_rspparam(from._internal_rspparam());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_cmdid()->::PBCommonCmd::MergeFrom(
          from._internal_cmdid());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.callback_id_ = from._impl_.callback_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.bsucess_ = from._impl_.bsucess_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.param_ = from._impl_.param_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.subrpccmd_ = from._impl_.subrpccmd_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PBUserMgrRpcCallRsp::CopyFrom(const PBUserMgrRpcCallRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBUserMgrRpcCallRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBUserMgrRpcCallRsp::IsInitialized() const {
  return true;
}

void PBUserMgrRpcCallRsp::InternalSwap(PBUserMgrRpcCallRsp* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.rspparam_, lhs_arena,
      &other->_impl_.rspparam_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PBUserMgrRpcCallRsp, _impl_.bsucess_)
      + sizeof(PBUserMgrRpcCallRsp::_impl_.bsucess_)
      - PROTOBUF_FIELD_OFFSET(PBUserMgrRpcCallRsp, _impl_.cmdid_)>(
          reinterpret_cast<char*>(&_impl_.cmdid_),
          reinterpret_cast<char*>(&other->_impl_.cmdid_));
  swap(_impl_.param_, other->_impl_.param_);
  swap(_impl_.subrpccmd_, other->_impl_.subrpccmd_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PBUserMgrRpcCallRsp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_CommonCmd_2eproto_getter, &descriptor_table_CommonCmd_2eproto_once,
      file_level_metadata_CommonCmd_2eproto[5]);
}

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::PBCommonCmd*
Arena::CreateMaybeMessage< ::PBCommonCmd >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PBCommonCmd >(arena);
}
template<> PROTOBUF_NOINLINE ::PBNotifyNewerMailboxReq*
Arena::CreateMaybeMessage< ::PBNotifyNewerMailboxReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PBNotifyNewerMailboxReq >(arena);
}
template<> PROTOBUF_NOINLINE ::PBRpcData_ReduceConsum_Req*
Arena::CreateMaybeMessage< ::PBRpcData_ReduceConsum_Req >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PBRpcData_ReduceConsum_Req >(arena);
}
template<> PROTOBUF_NOINLINE ::PBRpcGuildDayMissinAward_Req*
Arena::CreateMaybeMessage< ::PBRpcGuildDayMissinAward_Req >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PBRpcGuildDayMissinAward_Req >(arena);
}
template<> PROTOBUF_NOINLINE ::PBUserMgrRpcCallReq*
Arena::CreateMaybeMessage< ::PBUserMgrRpcCallReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PBUserMgrRpcCallReq >(arena);
}
template<> PROTOBUF_NOINLINE ::PBUserMgrRpcCallRsp*
Arena::CreateMaybeMessage< ::PBUserMgrRpcCallRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PBUserMgrRpcCallRsp >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
