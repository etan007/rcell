// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CommonCmd.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_CommonCmd_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_CommonCmd_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "xCommond.pb.h"
#include "Entity.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_CommonCmd_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_CommonCmd_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_CommonCmd_2eproto;
class PBCommonCmd;
struct PBCommonCmdDefaultTypeInternal;
extern PBCommonCmdDefaultTypeInternal _PBCommonCmd_default_instance_;
class PBNotifyNewerMailboxReq;
struct PBNotifyNewerMailboxReqDefaultTypeInternal;
extern PBNotifyNewerMailboxReqDefaultTypeInternal _PBNotifyNewerMailboxReq_default_instance_;
class PBRpcData_ReduceConsum_Req;
struct PBRpcData_ReduceConsum_ReqDefaultTypeInternal;
extern PBRpcData_ReduceConsum_ReqDefaultTypeInternal _PBRpcData_ReduceConsum_Req_default_instance_;
class PBRpcGuildDayMissinAward_Req;
struct PBRpcGuildDayMissinAward_ReqDefaultTypeInternal;
extern PBRpcGuildDayMissinAward_ReqDefaultTypeInternal _PBRpcGuildDayMissinAward_Req_default_instance_;
class PBUserMgrRpcCallReq;
struct PBUserMgrRpcCallReqDefaultTypeInternal;
extern PBUserMgrRpcCallReqDefaultTypeInternal _PBUserMgrRpcCallReq_default_instance_;
class PBUserMgrRpcCallRsp;
struct PBUserMgrRpcCallRspDefaultTypeInternal;
extern PBUserMgrRpcCallRspDefaultTypeInternal _PBUserMgrRpcCallRsp_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::PBCommonCmd* Arena::CreateMaybeMessage<::PBCommonCmd>(Arena*);
template<> ::PBNotifyNewerMailboxReq* Arena::CreateMaybeMessage<::PBNotifyNewerMailboxReq>(Arena*);
template<> ::PBRpcData_ReduceConsum_Req* Arena::CreateMaybeMessage<::PBRpcData_ReduceConsum_Req>(Arena*);
template<> ::PBRpcGuildDayMissinAward_Req* Arena::CreateMaybeMessage<::PBRpcGuildDayMissinAward_Req>(Arena*);
template<> ::PBUserMgrRpcCallReq* Arena::CreateMaybeMessage<::PBUserMgrRpcCallReq>(Arena*);
template<> ::PBUserMgrRpcCallRsp* Arena::CreateMaybeMessage<::PBUserMgrRpcCallRsp>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

enum PBNotifyNewerMailboxReq_MsgID : int {
  PBNotifyNewerMailboxReq_MsgID_ID = 2009
};
bool PBNotifyNewerMailboxReq_MsgID_IsValid(int value);
constexpr PBNotifyNewerMailboxReq_MsgID PBNotifyNewerMailboxReq_MsgID_MsgID_MIN = PBNotifyNewerMailboxReq_MsgID_ID;
constexpr PBNotifyNewerMailboxReq_MsgID PBNotifyNewerMailboxReq_MsgID_MsgID_MAX = PBNotifyNewerMailboxReq_MsgID_ID;
constexpr int PBNotifyNewerMailboxReq_MsgID_MsgID_ARRAYSIZE = PBNotifyNewerMailboxReq_MsgID_MsgID_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PBNotifyNewerMailboxReq_MsgID_descriptor();
template<typename T>
inline const std::string& PBNotifyNewerMailboxReq_MsgID_Name(T enum_t_value) {
  static_assert(::std::is_same<T, PBNotifyNewerMailboxReq_MsgID>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function PBNotifyNewerMailboxReq_MsgID_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    PBNotifyNewerMailboxReq_MsgID_descriptor(), enum_t_value);
}
inline bool PBNotifyNewerMailboxReq_MsgID_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, PBNotifyNewerMailboxReq_MsgID* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<PBNotifyNewerMailboxReq_MsgID>(
    PBNotifyNewerMailboxReq_MsgID_descriptor(), name, value);
}
enum PBUserMgrRpcCallReq_MsgID : int {
  PBUserMgrRpcCallReq_MsgID_ID = 2022
};
bool PBUserMgrRpcCallReq_MsgID_IsValid(int value);
constexpr PBUserMgrRpcCallReq_MsgID PBUserMgrRpcCallReq_MsgID_MsgID_MIN = PBUserMgrRpcCallReq_MsgID_ID;
constexpr PBUserMgrRpcCallReq_MsgID PBUserMgrRpcCallReq_MsgID_MsgID_MAX = PBUserMgrRpcCallReq_MsgID_ID;
constexpr int PBUserMgrRpcCallReq_MsgID_MsgID_ARRAYSIZE = PBUserMgrRpcCallReq_MsgID_MsgID_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PBUserMgrRpcCallReq_MsgID_descriptor();
template<typename T>
inline const std::string& PBUserMgrRpcCallReq_MsgID_Name(T enum_t_value) {
  static_assert(::std::is_same<T, PBUserMgrRpcCallReq_MsgID>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function PBUserMgrRpcCallReq_MsgID_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    PBUserMgrRpcCallReq_MsgID_descriptor(), enum_t_value);
}
inline bool PBUserMgrRpcCallReq_MsgID_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, PBUserMgrRpcCallReq_MsgID* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<PBUserMgrRpcCallReq_MsgID>(
    PBUserMgrRpcCallReq_MsgID_descriptor(), name, value);
}
enum PBUserMgrRpcCallRsp_MsgID : int {
  PBUserMgrRpcCallRsp_MsgID_ID = 2023
};
bool PBUserMgrRpcCallRsp_MsgID_IsValid(int value);
constexpr PBUserMgrRpcCallRsp_MsgID PBUserMgrRpcCallRsp_MsgID_MsgID_MIN = PBUserMgrRpcCallRsp_MsgID_ID;
constexpr PBUserMgrRpcCallRsp_MsgID PBUserMgrRpcCallRsp_MsgID_MsgID_MAX = PBUserMgrRpcCallRsp_MsgID_ID;
constexpr int PBUserMgrRpcCallRsp_MsgID_MsgID_ARRAYSIZE = PBUserMgrRpcCallRsp_MsgID_MsgID_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PBUserMgrRpcCallRsp_MsgID_descriptor();
template<typename T>
inline const std::string& PBUserMgrRpcCallRsp_MsgID_Name(T enum_t_value) {
  static_assert(::std::is_same<T, PBUserMgrRpcCallRsp_MsgID>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function PBUserMgrRpcCallRsp_MsgID_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    PBUserMgrRpcCallRsp_MsgID_descriptor(), enum_t_value);
}
inline bool PBUserMgrRpcCallRsp_MsgID_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, PBUserMgrRpcCallRsp_MsgID* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<PBUserMgrRpcCallRsp_MsgID>(
    PBUserMgrRpcCallRsp_MsgID_descriptor(), name, value);
}
enum PBCommonCmdType : int {
  PB_LOBBYGATE_USER_ONLINE = 1,
  PB_LOBBYGATE_USER_OFFLINE = 2,
  PB_NOTIFY_NEWER_MAILBOX = 3,
  PB_USERMGR_SEARCH_USER_REQ = 4,
  PB_USERMGR_SEARCH_USER_RSP = 5,
  PB_DbMgr_EXEC_SQL_REQ = 6,
  PB_DbMgr_EXEC_SQL_RSP = 7,
  PB_DbMgr_INSERT_SQL_REQ = 8,
  PB_DbMgr_INSERT_SQL_RSP = 9,
  PB_DbMgr_UPDATE_SQL_REQ = 10,
  PB_DbMgr_UPDATE_SQL_RSP = 11,
  PB_DbMgr_SELECT_SQL_REQ = 12,
  PB_DbMgr_SELECT_SQL_RSP = 13,
  PB_DbMgr_SELECT_COUNT_SQL_REQ = 14,
  PB_DbMgr_SELECT_COUNT_SQL_RSP = 15,
  PB_UserMgr_GetPlayerBaseDataSimple_REQ = 16,
  PB_UserMgr_GetPlayerBaseDataSimple_RSP = 17,
  PB_UserMgr_RpcCall_REQ = 18,
  PB_UserMgr_RpcCall_RSP = 19,
  PB_PlayerBaseDataSimple_SYN = 20,
  PB_PlayerRecharge_SYN = 21,
  PB_NOTIFY_GAMEMGR_LOADED_SUCCESSED = 30,
  PB_NOTIFY_GAMEMGR_INITED_SUCCESSED = 31,
  PB_NOTIFY_GlobalEntity_START_INIT = 32,
  PB_NOTIFY_LOGIN_SERVER_OPEN_LOGIN = 40
};
bool PBCommonCmdType_IsValid(int value);
constexpr PBCommonCmdType PBCommonCmdType_MIN = PB_LOBBYGATE_USER_ONLINE;
constexpr PBCommonCmdType PBCommonCmdType_MAX = PB_NOTIFY_LOGIN_SERVER_OPEN_LOGIN;
constexpr int PBCommonCmdType_ARRAYSIZE = PBCommonCmdType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PBCommonCmdType_descriptor();
template<typename T>
inline const std::string& PBCommonCmdType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, PBCommonCmdType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function PBCommonCmdType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    PBCommonCmdType_descriptor(), enum_t_value);
}
inline bool PBCommonCmdType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, PBCommonCmdType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<PBCommonCmdType>(
    PBCommonCmdType_descriptor(), name, value);
}
enum PBSubRpcType : int {
  RPC_REDUCE_Consume_REQ = 1,
  RPC_GUILD_DAYMISSINAWARD_REQ = 2,
  RPC_GUILD_DAYMISSONAWARD_RSP = 3
};
bool PBSubRpcType_IsValid(int value);
constexpr PBSubRpcType PBSubRpcType_MIN = RPC_REDUCE_Consume_REQ;
constexpr PBSubRpcType PBSubRpcType_MAX = RPC_GUILD_DAYMISSONAWARD_RSP;
constexpr int PBSubRpcType_ARRAYSIZE = PBSubRpcType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PBSubRpcType_descriptor();
template<typename T>
inline const std::string& PBSubRpcType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, PBSubRpcType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function PBSubRpcType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    PBSubRpcType_descriptor(), enum_t_value);
}
inline bool PBSubRpcType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, PBSubRpcType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<PBSubRpcType>(
    PBSubRpcType_descriptor(), name, value);
}
// ===================================================================

class PBCommonCmd final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PBCommonCmd) */ {
 public:
  inline PBCommonCmd() : PBCommonCmd(nullptr) {}
  ~PBCommonCmd() override;
  explicit PROTOBUF_CONSTEXPR PBCommonCmd(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PBCommonCmd(const PBCommonCmd& from);
  PBCommonCmd(PBCommonCmd&& from) noexcept
    : PBCommonCmd() {
    *this = ::std::move(from);
  }

  inline PBCommonCmd& operator=(const PBCommonCmd& from) {
    CopyFrom(from);
    return *this;
  }
  inline PBCommonCmd& operator=(PBCommonCmd&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PBCommonCmd& default_instance() {
    return *internal_default_instance();
  }
  static inline const PBCommonCmd* internal_default_instance() {
    return reinterpret_cast<const PBCommonCmd*>(
               &_PBCommonCmd_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(PBCommonCmd& a, PBCommonCmd& b) {
    a.Swap(&b);
  }
  inline void Swap(PBCommonCmd* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PBCommonCmd* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PBCommonCmd* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PBCommonCmd>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PBCommonCmd& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PBCommonCmd& from) {
    PBCommonCmd::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBCommonCmd* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PBCommonCmd";
  }
  protected:
  explicit PBCommonCmd(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCmdFieldNumber = 1,
  };
  // optional .CmdType cmd = 1 [default = PB_COMMON_CMD];
  bool has_cmd() const;
  private:
  bool _internal_has_cmd() const;
  public:
  void clear_cmd();
  ::CmdType cmd() const;
  void set_cmd(::CmdType value);
  private:
  ::CmdType _internal_cmd() const;
  void _internal_set_cmd(::CmdType value);
  public:

  // @@protoc_insertion_point(class_scope:PBCommonCmd)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int cmd_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CommonCmd_2eproto;
};
// -------------------------------------------------------------------

class PBNotifyNewerMailboxReq final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PBNotifyNewerMailboxReq) */ {
 public:
  inline PBNotifyNewerMailboxReq() : PBNotifyNewerMailboxReq(nullptr) {}
  ~PBNotifyNewerMailboxReq() override;
  explicit PROTOBUF_CONSTEXPR PBNotifyNewerMailboxReq(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PBNotifyNewerMailboxReq(const PBNotifyNewerMailboxReq& from);
  PBNotifyNewerMailboxReq(PBNotifyNewerMailboxReq&& from) noexcept
    : PBNotifyNewerMailboxReq() {
    *this = ::std::move(from);
  }

  inline PBNotifyNewerMailboxReq& operator=(const PBNotifyNewerMailboxReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline PBNotifyNewerMailboxReq& operator=(PBNotifyNewerMailboxReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PBNotifyNewerMailboxReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const PBNotifyNewerMailboxReq* internal_default_instance() {
    return reinterpret_cast<const PBNotifyNewerMailboxReq*>(
               &_PBNotifyNewerMailboxReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(PBNotifyNewerMailboxReq& a, PBNotifyNewerMailboxReq& b) {
    a.Swap(&b);
  }
  inline void Swap(PBNotifyNewerMailboxReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PBNotifyNewerMailboxReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PBNotifyNewerMailboxReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PBNotifyNewerMailboxReq>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PBNotifyNewerMailboxReq& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PBNotifyNewerMailboxReq& from) {
    PBNotifyNewerMailboxReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBNotifyNewerMailboxReq* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PBNotifyNewerMailboxReq";
  }
  protected:
  explicit PBNotifyNewerMailboxReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef PBNotifyNewerMailboxReq_MsgID MsgID;
  static constexpr MsgID ID =
    PBNotifyNewerMailboxReq_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return PBNotifyNewerMailboxReq_MsgID_IsValid(value);
  }
  static constexpr MsgID MsgID_MIN =
    PBNotifyNewerMailboxReq_MsgID_MsgID_MIN;
  static constexpr MsgID MsgID_MAX =
    PBNotifyNewerMailboxReq_MsgID_MsgID_MAX;
  static constexpr int MsgID_ARRAYSIZE =
    PBNotifyNewerMailboxReq_MsgID_MsgID_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  MsgID_descriptor() {
    return PBNotifyNewerMailboxReq_MsgID_descriptor();
  }
  template<typename T>
  static inline const std::string& MsgID_Name(T enum_t_value) {
    static_assert(::std::is_same<T, MsgID>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function MsgID_Name.");
    return PBNotifyNewerMailboxReq_MsgID_Name(enum_t_value);
  }
  static inline bool MsgID_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      MsgID* value) {
    return PBNotifyNewerMailboxReq_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kEntityNameFieldNumber = 3,
    kCmdIDFieldNumber = 1,
    kEntityMbFieldNumber = 4,
    kReserved1FieldNumber = 5,
    kParamFieldNumber = 2,
  };
  // optional string entity_name = 3;
  bool has_entity_name() const;
  private:
  bool _internal_has_entity_name() const;
  public:
  void clear_entity_name();
  const std::string& entity_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_entity_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_entity_name();
  PROTOBUF_NODISCARD std::string* release_entity_name();
  void set_allocated_entity_name(std::string* entity_name);
  private:
  const std::string& _internal_entity_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_entity_name(const std::string& value);
  std::string* _internal_mutable_entity_name();
  public:

  // optional .PBCommonCmd cmdID = 1;
  bool has_cmdid() const;
  private:
  bool _internal_has_cmdid() const;
  public:
  void clear_cmdid();
  const ::PBCommonCmd& cmdid() const;
  PROTOBUF_NODISCARD ::PBCommonCmd* release_cmdid();
  ::PBCommonCmd* mutable_cmdid();
  void set_allocated_cmdid(::PBCommonCmd* cmdid);
  private:
  const ::PBCommonCmd& _internal_cmdid() const;
  ::PBCommonCmd* _internal_mutable_cmdid();
  public:
  void unsafe_arena_set_allocated_cmdid(
      ::PBCommonCmd* cmdid);
  ::PBCommonCmd* unsafe_arena_release_cmdid();

  // optional .PBEntityMailbox entity_mb = 4;
  bool has_entity_mb() const;
  private:
  bool _internal_has_entity_mb() const;
  public:
  void clear_entity_mb();
  const ::PBEntityMailbox& entity_mb() const;
  PROTOBUF_NODISCARD ::PBEntityMailbox* release_entity_mb();
  ::PBEntityMailbox* mutable_entity_mb();
  void set_allocated_entity_mb(::PBEntityMailbox* entity_mb);
  private:
  const ::PBEntityMailbox& _internal_entity_mb() const;
  ::PBEntityMailbox* _internal_mutable_entity_mb();
  public:
  void unsafe_arena_set_allocated_entity_mb(
      ::PBEntityMailbox* entity_mb);
  ::PBEntityMailbox* unsafe_arena_release_entity_mb();

  // optional uint64 reserved1 = 5;
  bool has_reserved1() const;
  private:
  bool _internal_has_reserved1() const;
  public:
  void clear_reserved1();
  uint64_t reserved1() const;
  void set_reserved1(uint64_t value);
  private:
  uint64_t _internal_reserved1() const;
  void _internal_set_reserved1(uint64_t value);
  public:

  // optional .PBCommonCmdType param = 2 [default = PB_NOTIFY_NEWER_MAILBOX];
  bool has_param() const;
  private:
  bool _internal_has_param() const;
  public:
  void clear_param();
  ::PBCommonCmdType param() const;
  void set_param(::PBCommonCmdType value);
  private:
  ::PBCommonCmdType _internal_param() const;
  void _internal_set_param(::PBCommonCmdType value);
  public:

  // @@protoc_insertion_point(class_scope:PBNotifyNewerMailboxReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr entity_name_;
    ::PBCommonCmd* cmdid_;
    ::PBEntityMailbox* entity_mb_;
    uint64_t reserved1_;
    int param_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CommonCmd_2eproto;
};
// -------------------------------------------------------------------

class PBRpcData_ReduceConsum_Req final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PBRpcData_ReduceConsum_Req) */ {
 public:
  inline PBRpcData_ReduceConsum_Req() : PBRpcData_ReduceConsum_Req(nullptr) {}
  ~PBRpcData_ReduceConsum_Req() override;
  explicit PROTOBUF_CONSTEXPR PBRpcData_ReduceConsum_Req(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PBRpcData_ReduceConsum_Req(const PBRpcData_ReduceConsum_Req& from);
  PBRpcData_ReduceConsum_Req(PBRpcData_ReduceConsum_Req&& from) noexcept
    : PBRpcData_ReduceConsum_Req() {
    *this = ::std::move(from);
  }

  inline PBRpcData_ReduceConsum_Req& operator=(const PBRpcData_ReduceConsum_Req& from) {
    CopyFrom(from);
    return *this;
  }
  inline PBRpcData_ReduceConsum_Req& operator=(PBRpcData_ReduceConsum_Req&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PBRpcData_ReduceConsum_Req& default_instance() {
    return *internal_default_instance();
  }
  static inline const PBRpcData_ReduceConsum_Req* internal_default_instance() {
    return reinterpret_cast<const PBRpcData_ReduceConsum_Req*>(
               &_PBRpcData_ReduceConsum_Req_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(PBRpcData_ReduceConsum_Req& a, PBRpcData_ReduceConsum_Req& b) {
    a.Swap(&b);
  }
  inline void Swap(PBRpcData_ReduceConsum_Req* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PBRpcData_ReduceConsum_Req* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PBRpcData_ReduceConsum_Req* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PBRpcData_ReduceConsum_Req>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PBRpcData_ReduceConsum_Req& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PBRpcData_ReduceConsum_Req& from) {
    PBRpcData_ReduceConsum_Req::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBRpcData_ReduceConsum_Req* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PBRpcData_ReduceConsum_Req";
  }
  protected:
  explicit PBRpcData_ReduceConsum_Req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConfigIdFieldNumber = 2,
    kReduceCountFieldNumber = 3,
    kReasonFieldNumber = 4,
    kSubRpcCmdFieldNumber = 1,
  };
  // optional uint32 config_id = 2;
  bool has_config_id() const;
  private:
  bool _internal_has_config_id() const;
  public:
  void clear_config_id();
  uint32_t config_id() const;
  void set_config_id(uint32_t value);
  private:
  uint32_t _internal_config_id() const;
  void _internal_set_config_id(uint32_t value);
  public:

  // optional uint32 reduce_count = 3;
  bool has_reduce_count() const;
  private:
  bool _internal_has_reduce_count() const;
  public:
  void clear_reduce_count();
  uint32_t reduce_count() const;
  void set_reduce_count(uint32_t value);
  private:
  uint32_t _internal_reduce_count() const;
  void _internal_set_reduce_count(uint32_t value);
  public:

  // optional uint32 reason = 4;
  bool has_reason() const;
  private:
  bool _internal_has_reason() const;
  public:
  void clear_reason();
  uint32_t reason() const;
  void set_reason(uint32_t value);
  private:
  uint32_t _internal_reason() const;
  void _internal_set_reason(uint32_t value);
  public:

  // optional .PBSubRpcType subRpcCmd = 1 [default = RPC_REDUCE_Consume_REQ];
  bool has_subrpccmd() const;
  private:
  bool _internal_has_subrpccmd() const;
  public:
  void clear_subrpccmd();
  ::PBSubRpcType subrpccmd() const;
  void set_subrpccmd(::PBSubRpcType value);
  private:
  ::PBSubRpcType _internal_subrpccmd() const;
  void _internal_set_subrpccmd(::PBSubRpcType value);
  public:

  // @@protoc_insertion_point(class_scope:PBRpcData_ReduceConsum_Req)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t config_id_;
    uint32_t reduce_count_;
    uint32_t reason_;
    int subrpccmd_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CommonCmd_2eproto;
};
// -------------------------------------------------------------------

class PBRpcGuildDayMissinAward_Req final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PBRpcGuildDayMissinAward_Req) */ {
 public:
  inline PBRpcGuildDayMissinAward_Req() : PBRpcGuildDayMissinAward_Req(nullptr) {}
  ~PBRpcGuildDayMissinAward_Req() override;
  explicit PROTOBUF_CONSTEXPR PBRpcGuildDayMissinAward_Req(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PBRpcGuildDayMissinAward_Req(const PBRpcGuildDayMissinAward_Req& from);
  PBRpcGuildDayMissinAward_Req(PBRpcGuildDayMissinAward_Req&& from) noexcept
    : PBRpcGuildDayMissinAward_Req() {
    *this = ::std::move(from);
  }

  inline PBRpcGuildDayMissinAward_Req& operator=(const PBRpcGuildDayMissinAward_Req& from) {
    CopyFrom(from);
    return *this;
  }
  inline PBRpcGuildDayMissinAward_Req& operator=(PBRpcGuildDayMissinAward_Req&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PBRpcGuildDayMissinAward_Req& default_instance() {
    return *internal_default_instance();
  }
  static inline const PBRpcGuildDayMissinAward_Req* internal_default_instance() {
    return reinterpret_cast<const PBRpcGuildDayMissinAward_Req*>(
               &_PBRpcGuildDayMissinAward_Req_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(PBRpcGuildDayMissinAward_Req& a, PBRpcGuildDayMissinAward_Req& b) {
    a.Swap(&b);
  }
  inline void Swap(PBRpcGuildDayMissinAward_Req* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PBRpcGuildDayMissinAward_Req* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PBRpcGuildDayMissinAward_Req* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PBRpcGuildDayMissinAward_Req>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PBRpcGuildDayMissinAward_Req& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PBRpcGuildDayMissinAward_Req& from) {
    PBRpcGuildDayMissinAward_Req::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBRpcGuildDayMissinAward_Req* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PBRpcGuildDayMissinAward_Req";
  }
  protected:
  explicit PBRpcGuildDayMissinAward_Req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBDayMissionFieldNumber = 2,
    kMissionIdFieldNumber = 3,
    kSubRpcCmdFieldNumber = 1,
  };
  // optional bool bDayMission = 2;
  bool has_bdaymission() const;
  private:
  bool _internal_has_bdaymission() const;
  public:
  void clear_bdaymission();
  bool bdaymission() const;
  void set_bdaymission(bool value);
  private:
  bool _internal_bdaymission() const;
  void _internal_set_bdaymission(bool value);
  public:

  // optional int32 missionId = 3;
  bool has_missionid() const;
  private:
  bool _internal_has_missionid() const;
  public:
  void clear_missionid();
  int32_t missionid() const;
  void set_missionid(int32_t value);
  private:
  int32_t _internal_missionid() const;
  void _internal_set_missionid(int32_t value);
  public:

  // optional .PBSubRpcType subRpcCmd = 1 [default = RPC_GUILD_DAYMISSINAWARD_REQ];
  bool has_subrpccmd() const;
  private:
  bool _internal_has_subrpccmd() const;
  public:
  void clear_subrpccmd();
  ::PBSubRpcType subrpccmd() const;
  void set_subrpccmd(::PBSubRpcType value);
  private:
  ::PBSubRpcType _internal_subrpccmd() const;
  void _internal_set_subrpccmd(::PBSubRpcType value);
  public:

  // @@protoc_insertion_point(class_scope:PBRpcGuildDayMissinAward_Req)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    bool bdaymission_;
    int32_t missionid_;
    int subrpccmd_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CommonCmd_2eproto;
};
// -------------------------------------------------------------------

class PBUserMgrRpcCallReq final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PBUserMgrRpcCallReq) */ {
 public:
  inline PBUserMgrRpcCallReq() : PBUserMgrRpcCallReq(nullptr) {}
  ~PBUserMgrRpcCallReq() override;
  explicit PROTOBUF_CONSTEXPR PBUserMgrRpcCallReq(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PBUserMgrRpcCallReq(const PBUserMgrRpcCallReq& from);
  PBUserMgrRpcCallReq(PBUserMgrRpcCallReq&& from) noexcept
    : PBUserMgrRpcCallReq() {
    *this = ::std::move(from);
  }

  inline PBUserMgrRpcCallReq& operator=(const PBUserMgrRpcCallReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline PBUserMgrRpcCallReq& operator=(PBUserMgrRpcCallReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PBUserMgrRpcCallReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const PBUserMgrRpcCallReq* internal_default_instance() {
    return reinterpret_cast<const PBUserMgrRpcCallReq*>(
               &_PBUserMgrRpcCallReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(PBUserMgrRpcCallReq& a, PBUserMgrRpcCallReq& b) {
    a.Swap(&b);
  }
  inline void Swap(PBUserMgrRpcCallReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PBUserMgrRpcCallReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PBUserMgrRpcCallReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PBUserMgrRpcCallReq>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PBUserMgrRpcCallReq& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PBUserMgrRpcCallReq& from) {
    PBUserMgrRpcCallReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBUserMgrRpcCallReq* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PBUserMgrRpcCallReq";
  }
  protected:
  explicit PBUserMgrRpcCallReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef PBUserMgrRpcCallReq_MsgID MsgID;
  static constexpr MsgID ID =
    PBUserMgrRpcCallReq_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return PBUserMgrRpcCallReq_MsgID_IsValid(value);
  }
  static constexpr MsgID MsgID_MIN =
    PBUserMgrRpcCallReq_MsgID_MsgID_MIN;
  static constexpr MsgID MsgID_MAX =
    PBUserMgrRpcCallReq_MsgID_MsgID_MAX;
  static constexpr int MsgID_ARRAYSIZE =
    PBUserMgrRpcCallReq_MsgID_MsgID_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  MsgID_descriptor() {
    return PBUserMgrRpcCallReq_MsgID_descriptor();
  }
  template<typename T>
  static inline const std::string& MsgID_Name(T enum_t_value) {
    static_assert(::std::is_same<T, MsgID>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function MsgID_Name.");
    return PBUserMgrRpcCallReq_MsgID_Name(enum_t_value);
  }
  static inline bool MsgID_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      MsgID* value) {
    return PBUserMgrRpcCallReq_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kReqParamFieldNumber = 5,
    kCmdIDFieldNumber = 1,
    kCallbackIdFieldNumber = 4,
    kParamFieldNumber = 2,
    kSubRpcCmdFieldNumber = 3,
  };
  // optional bytes reqParam = 5;
  bool has_reqparam() const;
  private:
  bool _internal_has_reqparam() const;
  public:
  void clear_reqparam();
  const std::string& reqparam() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_reqparam(ArgT0&& arg0, ArgT... args);
  std::string* mutable_reqparam();
  PROTOBUF_NODISCARD std::string* release_reqparam();
  void set_allocated_reqparam(std::string* reqparam);
  private:
  const std::string& _internal_reqparam() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_reqparam(const std::string& value);
  std::string* _internal_mutable_reqparam();
  public:

  // optional .PBCommonCmd cmdID = 1;
  bool has_cmdid() const;
  private:
  bool _internal_has_cmdid() const;
  public:
  void clear_cmdid();
  const ::PBCommonCmd& cmdid() const;
  PROTOBUF_NODISCARD ::PBCommonCmd* release_cmdid();
  ::PBCommonCmd* mutable_cmdid();
  void set_allocated_cmdid(::PBCommonCmd* cmdid);
  private:
  const ::PBCommonCmd& _internal_cmdid() const;
  ::PBCommonCmd* _internal_mutable_cmdid();
  public:
  void unsafe_arena_set_allocated_cmdid(
      ::PBCommonCmd* cmdid);
  ::PBCommonCmd* unsafe_arena_release_cmdid();

  // optional uint64 callback_id = 4;
  bool has_callback_id() const;
  private:
  bool _internal_has_callback_id() const;
  public:
  void clear_callback_id();
  uint64_t callback_id() const;
  void set_callback_id(uint64_t value);
  private:
  uint64_t _internal_callback_id() const;
  void _internal_set_callback_id(uint64_t value);
  public:

  // optional .PBCommonCmdType param = 2 [default = PB_UserMgr_RpcCall_REQ];
  bool has_param() const;
  private:
  bool _internal_has_param() const;
  public:
  void clear_param();
  ::PBCommonCmdType param() const;
  void set_param(::PBCommonCmdType value);
  private:
  ::PBCommonCmdType _internal_param() const;
  void _internal_set_param(::PBCommonCmdType value);
  public:

  // optional .PBSubRpcType subRpcCmd = 3;
  bool has_subrpccmd() const;
  private:
  bool _internal_has_subrpccmd() const;
  public:
  void clear_subrpccmd();
  ::PBSubRpcType subrpccmd() const;
  void set_subrpccmd(::PBSubRpcType value);
  private:
  ::PBSubRpcType _internal_subrpccmd() const;
  void _internal_set_subrpccmd(::PBSubRpcType value);
  public:

  // @@protoc_insertion_point(class_scope:PBUserMgrRpcCallReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr reqparam_;
    ::PBCommonCmd* cmdid_;
    uint64_t callback_id_;
    int param_;
    int subrpccmd_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CommonCmd_2eproto;
};
// -------------------------------------------------------------------

class PBUserMgrRpcCallRsp final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PBUserMgrRpcCallRsp) */ {
 public:
  inline PBUserMgrRpcCallRsp() : PBUserMgrRpcCallRsp(nullptr) {}
  ~PBUserMgrRpcCallRsp() override;
  explicit PROTOBUF_CONSTEXPR PBUserMgrRpcCallRsp(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PBUserMgrRpcCallRsp(const PBUserMgrRpcCallRsp& from);
  PBUserMgrRpcCallRsp(PBUserMgrRpcCallRsp&& from) noexcept
    : PBUserMgrRpcCallRsp() {
    *this = ::std::move(from);
  }

  inline PBUserMgrRpcCallRsp& operator=(const PBUserMgrRpcCallRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline PBUserMgrRpcCallRsp& operator=(PBUserMgrRpcCallRsp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PBUserMgrRpcCallRsp& default_instance() {
    return *internal_default_instance();
  }
  static inline const PBUserMgrRpcCallRsp* internal_default_instance() {
    return reinterpret_cast<const PBUserMgrRpcCallRsp*>(
               &_PBUserMgrRpcCallRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(PBUserMgrRpcCallRsp& a, PBUserMgrRpcCallRsp& b) {
    a.Swap(&b);
  }
  inline void Swap(PBUserMgrRpcCallRsp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PBUserMgrRpcCallRsp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PBUserMgrRpcCallRsp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PBUserMgrRpcCallRsp>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PBUserMgrRpcCallRsp& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PBUserMgrRpcCallRsp& from) {
    PBUserMgrRpcCallRsp::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBUserMgrRpcCallRsp* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PBUserMgrRpcCallRsp";
  }
  protected:
  explicit PBUserMgrRpcCallRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef PBUserMgrRpcCallRsp_MsgID MsgID;
  static constexpr MsgID ID =
    PBUserMgrRpcCallRsp_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return PBUserMgrRpcCallRsp_MsgID_IsValid(value);
  }
  static constexpr MsgID MsgID_MIN =
    PBUserMgrRpcCallRsp_MsgID_MsgID_MIN;
  static constexpr MsgID MsgID_MAX =
    PBUserMgrRpcCallRsp_MsgID_MsgID_MAX;
  static constexpr int MsgID_ARRAYSIZE =
    PBUserMgrRpcCallRsp_MsgID_MsgID_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  MsgID_descriptor() {
    return PBUserMgrRpcCallRsp_MsgID_descriptor();
  }
  template<typename T>
  static inline const std::string& MsgID_Name(T enum_t_value) {
    static_assert(::std::is_same<T, MsgID>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function MsgID_Name.");
    return PBUserMgrRpcCallRsp_MsgID_Name(enum_t_value);
  }
  static inline bool MsgID_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      MsgID* value) {
    return PBUserMgrRpcCallRsp_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kRspParamFieldNumber = 6,
    kCmdIDFieldNumber = 1,
    kCallbackIdFieldNumber = 4,
    kBSucessFieldNumber = 5,
    kParamFieldNumber = 2,
    kSubRpcCmdFieldNumber = 3,
  };
  // optional bytes rspParam = 6;
  bool has_rspparam() const;
  private:
  bool _internal_has_rspparam() const;
  public:
  void clear_rspparam();
  const std::string& rspparam() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_rspparam(ArgT0&& arg0, ArgT... args);
  std::string* mutable_rspparam();
  PROTOBUF_NODISCARD std::string* release_rspparam();
  void set_allocated_rspparam(std::string* rspparam);
  private:
  const std::string& _internal_rspparam() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_rspparam(const std::string& value);
  std::string* _internal_mutable_rspparam();
  public:

  // optional .PBCommonCmd cmdID = 1;
  bool has_cmdid() const;
  private:
  bool _internal_has_cmdid() const;
  public:
  void clear_cmdid();
  const ::PBCommonCmd& cmdid() const;
  PROTOBUF_NODISCARD ::PBCommonCmd* release_cmdid();
  ::PBCommonCmd* mutable_cmdid();
  void set_allocated_cmdid(::PBCommonCmd* cmdid);
  private:
  const ::PBCommonCmd& _internal_cmdid() const;
  ::PBCommonCmd* _internal_mutable_cmdid();
  public:
  void unsafe_arena_set_allocated_cmdid(
      ::PBCommonCmd* cmdid);
  ::PBCommonCmd* unsafe_arena_release_cmdid();

  // optional uint64 callback_id = 4;
  bool has_callback_id() const;
  private:
  bool _internal_has_callback_id() const;
  public:
  void clear_callback_id();
  uint64_t callback_id() const;
  void set_callback_id(uint64_t value);
  private:
  uint64_t _internal_callback_id() const;
  void _internal_set_callback_id(uint64_t value);
  public:

  // optional bool bSucess = 5;
  bool has_bsucess() const;
  private:
  bool _internal_has_bsucess() const;
  public:
  void clear_bsucess();
  bool bsucess() const;
  void set_bsucess(bool value);
  private:
  bool _internal_bsucess() const;
  void _internal_set_bsucess(bool value);
  public:

  // optional .PBCommonCmdType param = 2 [default = PB_UserMgr_RpcCall_RSP];
  bool has_param() const;
  private:
  bool _internal_has_param() const;
  public:
  void clear_param();
  ::PBCommonCmdType param() const;
  void set_param(::PBCommonCmdType value);
  private:
  ::PBCommonCmdType _internal_param() const;
  void _internal_set_param(::PBCommonCmdType value);
  public:

  // optional .PBSubRpcType subRpcCmd = 3;
  bool has_subrpccmd() const;
  private:
  bool _internal_has_subrpccmd() const;
  public:
  void clear_subrpccmd();
  ::PBSubRpcType subrpccmd() const;
  void set_subrpccmd(::PBSubRpcType value);
  private:
  ::PBSubRpcType _internal_subrpccmd() const;
  void _internal_set_subrpccmd(::PBSubRpcType value);
  public:

  // @@protoc_insertion_point(class_scope:PBUserMgrRpcCallRsp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr rspparam_;
    ::PBCommonCmd* cmdid_;
    uint64_t callback_id_;
    bool bsucess_;
    int param_;
    int subrpccmd_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CommonCmd_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PBCommonCmd

// optional .CmdType cmd = 1 [default = PB_COMMON_CMD];
inline bool PBCommonCmd::_internal_has_cmd() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PBCommonCmd::has_cmd() const {
  return _internal_has_cmd();
}
inline void PBCommonCmd::clear_cmd() {
  _impl_.cmd_ = 2;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CmdType PBCommonCmd::_internal_cmd() const {
  return static_cast< ::CmdType >(_impl_.cmd_);
}
inline ::CmdType PBCommonCmd::cmd() const {
  // @@protoc_insertion_point(field_get:PBCommonCmd.cmd)
  return _internal_cmd();
}
inline void PBCommonCmd::_internal_set_cmd(::CmdType value) {
  assert(::CmdType_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.cmd_ = value;
}
inline void PBCommonCmd::set_cmd(::CmdType value) {
  _internal_set_cmd(value);
  // @@protoc_insertion_point(field_set:PBCommonCmd.cmd)
}

// -------------------------------------------------------------------

// PBNotifyNewerMailboxReq

// optional .PBCommonCmd cmdID = 1;
inline bool PBNotifyNewerMailboxReq::_internal_has_cmdid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.cmdid_ != nullptr);
  return value;
}
inline bool PBNotifyNewerMailboxReq::has_cmdid() const {
  return _internal_has_cmdid();
}
inline void PBNotifyNewerMailboxReq::clear_cmdid() {
  if (_impl_.cmdid_ != nullptr) _impl_.cmdid_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::PBCommonCmd& PBNotifyNewerMailboxReq::_internal_cmdid() const {
  const ::PBCommonCmd* p = _impl_.cmdid_;
  return p != nullptr ? *p : reinterpret_cast<const ::PBCommonCmd&>(
      ::_PBCommonCmd_default_instance_);
}
inline const ::PBCommonCmd& PBNotifyNewerMailboxReq::cmdid() const {
  // @@protoc_insertion_point(field_get:PBNotifyNewerMailboxReq.cmdID)
  return _internal_cmdid();
}
inline void PBNotifyNewerMailboxReq::unsafe_arena_set_allocated_cmdid(
    ::PBCommonCmd* cmdid) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.cmdid_);
  }
  _impl_.cmdid_ = cmdid;
  if (cmdid) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBNotifyNewerMailboxReq.cmdID)
}
inline ::PBCommonCmd* PBNotifyNewerMailboxReq::release_cmdid() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::PBCommonCmd* temp = _impl_.cmdid_;
  _impl_.cmdid_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PBCommonCmd* PBNotifyNewerMailboxReq::unsafe_arena_release_cmdid() {
  // @@protoc_insertion_point(field_release:PBNotifyNewerMailboxReq.cmdID)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::PBCommonCmd* temp = _impl_.cmdid_;
  _impl_.cmdid_ = nullptr;
  return temp;
}
inline ::PBCommonCmd* PBNotifyNewerMailboxReq::_internal_mutable_cmdid() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.cmdid_ == nullptr) {
    auto* p = CreateMaybeMessage<::PBCommonCmd>(GetArenaForAllocation());
    _impl_.cmdid_ = p;
  }
  return _impl_.cmdid_;
}
inline ::PBCommonCmd* PBNotifyNewerMailboxReq::mutable_cmdid() {
  ::PBCommonCmd* _msg = _internal_mutable_cmdid();
  // @@protoc_insertion_point(field_mutable:PBNotifyNewerMailboxReq.cmdID)
  return _msg;
}
inline void PBNotifyNewerMailboxReq::set_allocated_cmdid(::PBCommonCmd* cmdid) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.cmdid_;
  }
  if (cmdid) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(cmdid);
    if (message_arena != submessage_arena) {
      cmdid = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, cmdid, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.cmdid_ = cmdid;
  // @@protoc_insertion_point(field_set_allocated:PBNotifyNewerMailboxReq.cmdID)
}

// optional .PBCommonCmdType param = 2 [default = PB_NOTIFY_NEWER_MAILBOX];
inline bool PBNotifyNewerMailboxReq::_internal_has_param() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool PBNotifyNewerMailboxReq::has_param() const {
  return _internal_has_param();
}
inline void PBNotifyNewerMailboxReq::clear_param() {
  _impl_.param_ = 3;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::PBCommonCmdType PBNotifyNewerMailboxReq::_internal_param() const {
  return static_cast< ::PBCommonCmdType >(_impl_.param_);
}
inline ::PBCommonCmdType PBNotifyNewerMailboxReq::param() const {
  // @@protoc_insertion_point(field_get:PBNotifyNewerMailboxReq.param)
  return _internal_param();
}
inline void PBNotifyNewerMailboxReq::_internal_set_param(::PBCommonCmdType value) {
  assert(::PBCommonCmdType_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.param_ = value;
}
inline void PBNotifyNewerMailboxReq::set_param(::PBCommonCmdType value) {
  _internal_set_param(value);
  // @@protoc_insertion_point(field_set:PBNotifyNewerMailboxReq.param)
}

// optional string entity_name = 3;
inline bool PBNotifyNewerMailboxReq::_internal_has_entity_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PBNotifyNewerMailboxReq::has_entity_name() const {
  return _internal_has_entity_name();
}
inline void PBNotifyNewerMailboxReq::clear_entity_name() {
  _impl_.entity_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& PBNotifyNewerMailboxReq::entity_name() const {
  // @@protoc_insertion_point(field_get:PBNotifyNewerMailboxReq.entity_name)
  return _internal_entity_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void PBNotifyNewerMailboxReq::set_entity_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.entity_name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:PBNotifyNewerMailboxReq.entity_name)
}
inline std::string* PBNotifyNewerMailboxReq::mutable_entity_name() {
  std::string* _s = _internal_mutable_entity_name();
  // @@protoc_insertion_point(field_mutable:PBNotifyNewerMailboxReq.entity_name)
  return _s;
}
inline const std::string& PBNotifyNewerMailboxReq::_internal_entity_name() const {
  return _impl_.entity_name_.Get();
}
inline void PBNotifyNewerMailboxReq::_internal_set_entity_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.entity_name_.Set(value, GetArenaForAllocation());
}
inline std::string* PBNotifyNewerMailboxReq::_internal_mutable_entity_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.entity_name_.Mutable(GetArenaForAllocation());
}
inline std::string* PBNotifyNewerMailboxReq::release_entity_name() {
  // @@protoc_insertion_point(field_release:PBNotifyNewerMailboxReq.entity_name)
  if (!_internal_has_entity_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.entity_name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.entity_name_.IsDefault()) {
    _impl_.entity_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void PBNotifyNewerMailboxReq::set_allocated_entity_name(std::string* entity_name) {
  if (entity_name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.entity_name_.SetAllocated(entity_name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.entity_name_.IsDefault()) {
    _impl_.entity_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:PBNotifyNewerMailboxReq.entity_name)
}

// optional .PBEntityMailbox entity_mb = 4;
inline bool PBNotifyNewerMailboxReq::_internal_has_entity_mb() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.entity_mb_ != nullptr);
  return value;
}
inline bool PBNotifyNewerMailboxReq::has_entity_mb() const {
  return _internal_has_entity_mb();
}
inline const ::PBEntityMailbox& PBNotifyNewerMailboxReq::_internal_entity_mb() const {
  const ::PBEntityMailbox* p = _impl_.entity_mb_;
  return p != nullptr ? *p : reinterpret_cast<const ::PBEntityMailbox&>(
      ::_PBEntityMailbox_default_instance_);
}
inline const ::PBEntityMailbox& PBNotifyNewerMailboxReq::entity_mb() const {
  // @@protoc_insertion_point(field_get:PBNotifyNewerMailboxReq.entity_mb)
  return _internal_entity_mb();
}
inline void PBNotifyNewerMailboxReq::unsafe_arena_set_allocated_entity_mb(
    ::PBEntityMailbox* entity_mb) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.entity_mb_);
  }
  _impl_.entity_mb_ = entity_mb;
  if (entity_mb) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBNotifyNewerMailboxReq.entity_mb)
}
inline ::PBEntityMailbox* PBNotifyNewerMailboxReq::release_entity_mb() {
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::PBEntityMailbox* temp = _impl_.entity_mb_;
  _impl_.entity_mb_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PBEntityMailbox* PBNotifyNewerMailboxReq::unsafe_arena_release_entity_mb() {
  // @@protoc_insertion_point(field_release:PBNotifyNewerMailboxReq.entity_mb)
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::PBEntityMailbox* temp = _impl_.entity_mb_;
  _impl_.entity_mb_ = nullptr;
  return temp;
}
inline ::PBEntityMailbox* PBNotifyNewerMailboxReq::_internal_mutable_entity_mb() {
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.entity_mb_ == nullptr) {
    auto* p = CreateMaybeMessage<::PBEntityMailbox>(GetArenaForAllocation());
    _impl_.entity_mb_ = p;
  }
  return _impl_.entity_mb_;
}
inline ::PBEntityMailbox* PBNotifyNewerMailboxReq::mutable_entity_mb() {
  ::PBEntityMailbox* _msg = _internal_mutable_entity_mb();
  // @@protoc_insertion_point(field_mutable:PBNotifyNewerMailboxReq.entity_mb)
  return _msg;
}
inline void PBNotifyNewerMailboxReq::set_allocated_entity_mb(::PBEntityMailbox* entity_mb) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.entity_mb_);
  }
  if (entity_mb) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(entity_mb));
    if (message_arena != submessage_arena) {
      entity_mb = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, entity_mb, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.entity_mb_ = entity_mb;
  // @@protoc_insertion_point(field_set_allocated:PBNotifyNewerMailboxReq.entity_mb)
}

// optional uint64 reserved1 = 5;
inline bool PBNotifyNewerMailboxReq::_internal_has_reserved1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool PBNotifyNewerMailboxReq::has_reserved1() const {
  return _internal_has_reserved1();
}
inline void PBNotifyNewerMailboxReq::clear_reserved1() {
  _impl_.reserved1_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint64_t PBNotifyNewerMailboxReq::_internal_reserved1() const {
  return _impl_.reserved1_;
}
inline uint64_t PBNotifyNewerMailboxReq::reserved1() const {
  // @@protoc_insertion_point(field_get:PBNotifyNewerMailboxReq.reserved1)
  return _internal_reserved1();
}
inline void PBNotifyNewerMailboxReq::_internal_set_reserved1(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.reserved1_ = value;
}
inline void PBNotifyNewerMailboxReq::set_reserved1(uint64_t value) {
  _internal_set_reserved1(value);
  // @@protoc_insertion_point(field_set:PBNotifyNewerMailboxReq.reserved1)
}

// -------------------------------------------------------------------

// PBRpcData_ReduceConsum_Req

// optional .PBSubRpcType subRpcCmd = 1 [default = RPC_REDUCE_Consume_REQ];
inline bool PBRpcData_ReduceConsum_Req::_internal_has_subrpccmd() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool PBRpcData_ReduceConsum_Req::has_subrpccmd() const {
  return _internal_has_subrpccmd();
}
inline void PBRpcData_ReduceConsum_Req::clear_subrpccmd() {
  _impl_.subrpccmd_ = 1;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::PBSubRpcType PBRpcData_ReduceConsum_Req::_internal_subrpccmd() const {
  return static_cast< ::PBSubRpcType >(_impl_.subrpccmd_);
}
inline ::PBSubRpcType PBRpcData_ReduceConsum_Req::subrpccmd() const {
  // @@protoc_insertion_point(field_get:PBRpcData_ReduceConsum_Req.subRpcCmd)
  return _internal_subrpccmd();
}
inline void PBRpcData_ReduceConsum_Req::_internal_set_subrpccmd(::PBSubRpcType value) {
  assert(::PBSubRpcType_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.subrpccmd_ = value;
}
inline void PBRpcData_ReduceConsum_Req::set_subrpccmd(::PBSubRpcType value) {
  _internal_set_subrpccmd(value);
  // @@protoc_insertion_point(field_set:PBRpcData_ReduceConsum_Req.subRpcCmd)
}

// optional uint32 config_id = 2;
inline bool PBRpcData_ReduceConsum_Req::_internal_has_config_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PBRpcData_ReduceConsum_Req::has_config_id() const {
  return _internal_has_config_id();
}
inline void PBRpcData_ReduceConsum_Req::clear_config_id() {
  _impl_.config_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t PBRpcData_ReduceConsum_Req::_internal_config_id() const {
  return _impl_.config_id_;
}
inline uint32_t PBRpcData_ReduceConsum_Req::config_id() const {
  // @@protoc_insertion_point(field_get:PBRpcData_ReduceConsum_Req.config_id)
  return _internal_config_id();
}
inline void PBRpcData_ReduceConsum_Req::_internal_set_config_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.config_id_ = value;
}
inline void PBRpcData_ReduceConsum_Req::set_config_id(uint32_t value) {
  _internal_set_config_id(value);
  // @@protoc_insertion_point(field_set:PBRpcData_ReduceConsum_Req.config_id)
}

// optional uint32 reduce_count = 3;
inline bool PBRpcData_ReduceConsum_Req::_internal_has_reduce_count() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool PBRpcData_ReduceConsum_Req::has_reduce_count() const {
  return _internal_has_reduce_count();
}
inline void PBRpcData_ReduceConsum_Req::clear_reduce_count() {
  _impl_.reduce_count_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t PBRpcData_ReduceConsum_Req::_internal_reduce_count() const {
  return _impl_.reduce_count_;
}
inline uint32_t PBRpcData_ReduceConsum_Req::reduce_count() const {
  // @@protoc_insertion_point(field_get:PBRpcData_ReduceConsum_Req.reduce_count)
  return _internal_reduce_count();
}
inline void PBRpcData_ReduceConsum_Req::_internal_set_reduce_count(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.reduce_count_ = value;
}
inline void PBRpcData_ReduceConsum_Req::set_reduce_count(uint32_t value) {
  _internal_set_reduce_count(value);
  // @@protoc_insertion_point(field_set:PBRpcData_ReduceConsum_Req.reduce_count)
}

// optional uint32 reason = 4;
inline bool PBRpcData_ReduceConsum_Req::_internal_has_reason() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool PBRpcData_ReduceConsum_Req::has_reason() const {
  return _internal_has_reason();
}
inline void PBRpcData_ReduceConsum_Req::clear_reason() {
  _impl_.reason_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t PBRpcData_ReduceConsum_Req::_internal_reason() const {
  return _impl_.reason_;
}
inline uint32_t PBRpcData_ReduceConsum_Req::reason() const {
  // @@protoc_insertion_point(field_get:PBRpcData_ReduceConsum_Req.reason)
  return _internal_reason();
}
inline void PBRpcData_ReduceConsum_Req::_internal_set_reason(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.reason_ = value;
}
inline void PBRpcData_ReduceConsum_Req::set_reason(uint32_t value) {
  _internal_set_reason(value);
  // @@protoc_insertion_point(field_set:PBRpcData_ReduceConsum_Req.reason)
}

// -------------------------------------------------------------------

// PBRpcGuildDayMissinAward_Req

// optional .PBSubRpcType subRpcCmd = 1 [default = RPC_GUILD_DAYMISSINAWARD_REQ];
inline bool PBRpcGuildDayMissinAward_Req::_internal_has_subrpccmd() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool PBRpcGuildDayMissinAward_Req::has_subrpccmd() const {
  return _internal_has_subrpccmd();
}
inline void PBRpcGuildDayMissinAward_Req::clear_subrpccmd() {
  _impl_.subrpccmd_ = 2;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::PBSubRpcType PBRpcGuildDayMissinAward_Req::_internal_subrpccmd() const {
  return static_cast< ::PBSubRpcType >(_impl_.subrpccmd_);
}
inline ::PBSubRpcType PBRpcGuildDayMissinAward_Req::subrpccmd() const {
  // @@protoc_insertion_point(field_get:PBRpcGuildDayMissinAward_Req.subRpcCmd)
  return _internal_subrpccmd();
}
inline void PBRpcGuildDayMissinAward_Req::_internal_set_subrpccmd(::PBSubRpcType value) {
  assert(::PBSubRpcType_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.subrpccmd_ = value;
}
inline void PBRpcGuildDayMissinAward_Req::set_subrpccmd(::PBSubRpcType value) {
  _internal_set_subrpccmd(value);
  // @@protoc_insertion_point(field_set:PBRpcGuildDayMissinAward_Req.subRpcCmd)
}

// optional bool bDayMission = 2;
inline bool PBRpcGuildDayMissinAward_Req::_internal_has_bdaymission() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PBRpcGuildDayMissinAward_Req::has_bdaymission() const {
  return _internal_has_bdaymission();
}
inline void PBRpcGuildDayMissinAward_Req::clear_bdaymission() {
  _impl_.bdaymission_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool PBRpcGuildDayMissinAward_Req::_internal_bdaymission() const {
  return _impl_.bdaymission_;
}
inline bool PBRpcGuildDayMissinAward_Req::bdaymission() const {
  // @@protoc_insertion_point(field_get:PBRpcGuildDayMissinAward_Req.bDayMission)
  return _internal_bdaymission();
}
inline void PBRpcGuildDayMissinAward_Req::_internal_set_bdaymission(bool value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.bdaymission_ = value;
}
inline void PBRpcGuildDayMissinAward_Req::set_bdaymission(bool value) {
  _internal_set_bdaymission(value);
  // @@protoc_insertion_point(field_set:PBRpcGuildDayMissinAward_Req.bDayMission)
}

// optional int32 missionId = 3;
inline bool PBRpcGuildDayMissinAward_Req::_internal_has_missionid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool PBRpcGuildDayMissinAward_Req::has_missionid() const {
  return _internal_has_missionid();
}
inline void PBRpcGuildDayMissinAward_Req::clear_missionid() {
  _impl_.missionid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int32_t PBRpcGuildDayMissinAward_Req::_internal_missionid() const {
  return _impl_.missionid_;
}
inline int32_t PBRpcGuildDayMissinAward_Req::missionid() const {
  // @@protoc_insertion_point(field_get:PBRpcGuildDayMissinAward_Req.missionId)
  return _internal_missionid();
}
inline void PBRpcGuildDayMissinAward_Req::_internal_set_missionid(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.missionid_ = value;
}
inline void PBRpcGuildDayMissinAward_Req::set_missionid(int32_t value) {
  _internal_set_missionid(value);
  // @@protoc_insertion_point(field_set:PBRpcGuildDayMissinAward_Req.missionId)
}

// -------------------------------------------------------------------

// PBUserMgrRpcCallReq

// optional .PBCommonCmd cmdID = 1;
inline bool PBUserMgrRpcCallReq::_internal_has_cmdid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.cmdid_ != nullptr);
  return value;
}
inline bool PBUserMgrRpcCallReq::has_cmdid() const {
  return _internal_has_cmdid();
}
inline void PBUserMgrRpcCallReq::clear_cmdid() {
  if (_impl_.cmdid_ != nullptr) _impl_.cmdid_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::PBCommonCmd& PBUserMgrRpcCallReq::_internal_cmdid() const {
  const ::PBCommonCmd* p = _impl_.cmdid_;
  return p != nullptr ? *p : reinterpret_cast<const ::PBCommonCmd&>(
      ::_PBCommonCmd_default_instance_);
}
inline const ::PBCommonCmd& PBUserMgrRpcCallReq::cmdid() const {
  // @@protoc_insertion_point(field_get:PBUserMgrRpcCallReq.cmdID)
  return _internal_cmdid();
}
inline void PBUserMgrRpcCallReq::unsafe_arena_set_allocated_cmdid(
    ::PBCommonCmd* cmdid) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.cmdid_);
  }
  _impl_.cmdid_ = cmdid;
  if (cmdid) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBUserMgrRpcCallReq.cmdID)
}
inline ::PBCommonCmd* PBUserMgrRpcCallReq::release_cmdid() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::PBCommonCmd* temp = _impl_.cmdid_;
  _impl_.cmdid_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PBCommonCmd* PBUserMgrRpcCallReq::unsafe_arena_release_cmdid() {
  // @@protoc_insertion_point(field_release:PBUserMgrRpcCallReq.cmdID)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::PBCommonCmd* temp = _impl_.cmdid_;
  _impl_.cmdid_ = nullptr;
  return temp;
}
inline ::PBCommonCmd* PBUserMgrRpcCallReq::_internal_mutable_cmdid() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.cmdid_ == nullptr) {
    auto* p = CreateMaybeMessage<::PBCommonCmd>(GetArenaForAllocation());
    _impl_.cmdid_ = p;
  }
  return _impl_.cmdid_;
}
inline ::PBCommonCmd* PBUserMgrRpcCallReq::mutable_cmdid() {
  ::PBCommonCmd* _msg = _internal_mutable_cmdid();
  // @@protoc_insertion_point(field_mutable:PBUserMgrRpcCallReq.cmdID)
  return _msg;
}
inline void PBUserMgrRpcCallReq::set_allocated_cmdid(::PBCommonCmd* cmdid) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.cmdid_;
  }
  if (cmdid) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(cmdid);
    if (message_arena != submessage_arena) {
      cmdid = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, cmdid, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.cmdid_ = cmdid;
  // @@protoc_insertion_point(field_set_allocated:PBUserMgrRpcCallReq.cmdID)
}

// optional .PBCommonCmdType param = 2 [default = PB_UserMgr_RpcCall_REQ];
inline bool PBUserMgrRpcCallReq::_internal_has_param() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool PBUserMgrRpcCallReq::has_param() const {
  return _internal_has_param();
}
inline void PBUserMgrRpcCallReq::clear_param() {
  _impl_.param_ = 18;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::PBCommonCmdType PBUserMgrRpcCallReq::_internal_param() const {
  return static_cast< ::PBCommonCmdType >(_impl_.param_);
}
inline ::PBCommonCmdType PBUserMgrRpcCallReq::param() const {
  // @@protoc_insertion_point(field_get:PBUserMgrRpcCallReq.param)
  return _internal_param();
}
inline void PBUserMgrRpcCallReq::_internal_set_param(::PBCommonCmdType value) {
  assert(::PBCommonCmdType_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.param_ = value;
}
inline void PBUserMgrRpcCallReq::set_param(::PBCommonCmdType value) {
  _internal_set_param(value);
  // @@protoc_insertion_point(field_set:PBUserMgrRpcCallReq.param)
}

// optional .PBSubRpcType subRpcCmd = 3;
inline bool PBUserMgrRpcCallReq::_internal_has_subrpccmd() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool PBUserMgrRpcCallReq::has_subrpccmd() const {
  return _internal_has_subrpccmd();
}
inline void PBUserMgrRpcCallReq::clear_subrpccmd() {
  _impl_.subrpccmd_ = 1;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::PBSubRpcType PBUserMgrRpcCallReq::_internal_subrpccmd() const {
  return static_cast< ::PBSubRpcType >(_impl_.subrpccmd_);
}
inline ::PBSubRpcType PBUserMgrRpcCallReq::subrpccmd() const {
  // @@protoc_insertion_point(field_get:PBUserMgrRpcCallReq.subRpcCmd)
  return _internal_subrpccmd();
}
inline void PBUserMgrRpcCallReq::_internal_set_subrpccmd(::PBSubRpcType value) {
  assert(::PBSubRpcType_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.subrpccmd_ = value;
}
inline void PBUserMgrRpcCallReq::set_subrpccmd(::PBSubRpcType value) {
  _internal_set_subrpccmd(value);
  // @@protoc_insertion_point(field_set:PBUserMgrRpcCallReq.subRpcCmd)
}

// optional uint64 callback_id = 4;
inline bool PBUserMgrRpcCallReq::_internal_has_callback_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool PBUserMgrRpcCallReq::has_callback_id() const {
  return _internal_has_callback_id();
}
inline void PBUserMgrRpcCallReq::clear_callback_id() {
  _impl_.callback_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint64_t PBUserMgrRpcCallReq::_internal_callback_id() const {
  return _impl_.callback_id_;
}
inline uint64_t PBUserMgrRpcCallReq::callback_id() const {
  // @@protoc_insertion_point(field_get:PBUserMgrRpcCallReq.callback_id)
  return _internal_callback_id();
}
inline void PBUserMgrRpcCallReq::_internal_set_callback_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.callback_id_ = value;
}
inline void PBUserMgrRpcCallReq::set_callback_id(uint64_t value) {
  _internal_set_callback_id(value);
  // @@protoc_insertion_point(field_set:PBUserMgrRpcCallReq.callback_id)
}

// optional bytes reqParam = 5;
inline bool PBUserMgrRpcCallReq::_internal_has_reqparam() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PBUserMgrRpcCallReq::has_reqparam() const {
  return _internal_has_reqparam();
}
inline void PBUserMgrRpcCallReq::clear_reqparam() {
  _impl_.reqparam_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& PBUserMgrRpcCallReq::reqparam() const {
  // @@protoc_insertion_point(field_get:PBUserMgrRpcCallReq.reqParam)
  return _internal_reqparam();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void PBUserMgrRpcCallReq::set_reqparam(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.reqparam_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:PBUserMgrRpcCallReq.reqParam)
}
inline std::string* PBUserMgrRpcCallReq::mutable_reqparam() {
  std::string* _s = _internal_mutable_reqparam();
  // @@protoc_insertion_point(field_mutable:PBUserMgrRpcCallReq.reqParam)
  return _s;
}
inline const std::string& PBUserMgrRpcCallReq::_internal_reqparam() const {
  return _impl_.reqparam_.Get();
}
inline void PBUserMgrRpcCallReq::_internal_set_reqparam(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.reqparam_.Set(value, GetArenaForAllocation());
}
inline std::string* PBUserMgrRpcCallReq::_internal_mutable_reqparam() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.reqparam_.Mutable(GetArenaForAllocation());
}
inline std::string* PBUserMgrRpcCallReq::release_reqparam() {
  // @@protoc_insertion_point(field_release:PBUserMgrRpcCallReq.reqParam)
  if (!_internal_has_reqparam()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.reqparam_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.reqparam_.IsDefault()) {
    _impl_.reqparam_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void PBUserMgrRpcCallReq::set_allocated_reqparam(std::string* reqparam) {
  if (reqparam != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.reqparam_.SetAllocated(reqparam, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.reqparam_.IsDefault()) {
    _impl_.reqparam_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:PBUserMgrRpcCallReq.reqParam)
}

// -------------------------------------------------------------------

// PBUserMgrRpcCallRsp

// optional .PBCommonCmd cmdID = 1;
inline bool PBUserMgrRpcCallRsp::_internal_has_cmdid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.cmdid_ != nullptr);
  return value;
}
inline bool PBUserMgrRpcCallRsp::has_cmdid() const {
  return _internal_has_cmdid();
}
inline void PBUserMgrRpcCallRsp::clear_cmdid() {
  if (_impl_.cmdid_ != nullptr) _impl_.cmdid_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::PBCommonCmd& PBUserMgrRpcCallRsp::_internal_cmdid() const {
  const ::PBCommonCmd* p = _impl_.cmdid_;
  return p != nullptr ? *p : reinterpret_cast<const ::PBCommonCmd&>(
      ::_PBCommonCmd_default_instance_);
}
inline const ::PBCommonCmd& PBUserMgrRpcCallRsp::cmdid() const {
  // @@protoc_insertion_point(field_get:PBUserMgrRpcCallRsp.cmdID)
  return _internal_cmdid();
}
inline void PBUserMgrRpcCallRsp::unsafe_arena_set_allocated_cmdid(
    ::PBCommonCmd* cmdid) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.cmdid_);
  }
  _impl_.cmdid_ = cmdid;
  if (cmdid) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBUserMgrRpcCallRsp.cmdID)
}
inline ::PBCommonCmd* PBUserMgrRpcCallRsp::release_cmdid() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::PBCommonCmd* temp = _impl_.cmdid_;
  _impl_.cmdid_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PBCommonCmd* PBUserMgrRpcCallRsp::unsafe_arena_release_cmdid() {
  // @@protoc_insertion_point(field_release:PBUserMgrRpcCallRsp.cmdID)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::PBCommonCmd* temp = _impl_.cmdid_;
  _impl_.cmdid_ = nullptr;
  return temp;
}
inline ::PBCommonCmd* PBUserMgrRpcCallRsp::_internal_mutable_cmdid() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.cmdid_ == nullptr) {
    auto* p = CreateMaybeMessage<::PBCommonCmd>(GetArenaForAllocation());
    _impl_.cmdid_ = p;
  }
  return _impl_.cmdid_;
}
inline ::PBCommonCmd* PBUserMgrRpcCallRsp::mutable_cmdid() {
  ::PBCommonCmd* _msg = _internal_mutable_cmdid();
  // @@protoc_insertion_point(field_mutable:PBUserMgrRpcCallRsp.cmdID)
  return _msg;
}
inline void PBUserMgrRpcCallRsp::set_allocated_cmdid(::PBCommonCmd* cmdid) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.cmdid_;
  }
  if (cmdid) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(cmdid);
    if (message_arena != submessage_arena) {
      cmdid = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, cmdid, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.cmdid_ = cmdid;
  // @@protoc_insertion_point(field_set_allocated:PBUserMgrRpcCallRsp.cmdID)
}

// optional .PBCommonCmdType param = 2 [default = PB_UserMgr_RpcCall_RSP];
inline bool PBUserMgrRpcCallRsp::_internal_has_param() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool PBUserMgrRpcCallRsp::has_param() const {
  return _internal_has_param();
}
inline void PBUserMgrRpcCallRsp::clear_param() {
  _impl_.param_ = 19;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::PBCommonCmdType PBUserMgrRpcCallRsp::_internal_param() const {
  return static_cast< ::PBCommonCmdType >(_impl_.param_);
}
inline ::PBCommonCmdType PBUserMgrRpcCallRsp::param() const {
  // @@protoc_insertion_point(field_get:PBUserMgrRpcCallRsp.param)
  return _internal_param();
}
inline void PBUserMgrRpcCallRsp::_internal_set_param(::PBCommonCmdType value) {
  assert(::PBCommonCmdType_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.param_ = value;
}
inline void PBUserMgrRpcCallRsp::set_param(::PBCommonCmdType value) {
  _internal_set_param(value);
  // @@protoc_insertion_point(field_set:PBUserMgrRpcCallRsp.param)
}

// optional .PBSubRpcType subRpcCmd = 3;
inline bool PBUserMgrRpcCallRsp::_internal_has_subrpccmd() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool PBUserMgrRpcCallRsp::has_subrpccmd() const {
  return _internal_has_subrpccmd();
}
inline void PBUserMgrRpcCallRsp::clear_subrpccmd() {
  _impl_.subrpccmd_ = 1;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::PBSubRpcType PBUserMgrRpcCallRsp::_internal_subrpccmd() const {
  return static_cast< ::PBSubRpcType >(_impl_.subrpccmd_);
}
inline ::PBSubRpcType PBUserMgrRpcCallRsp::subrpccmd() const {
  // @@protoc_insertion_point(field_get:PBUserMgrRpcCallRsp.subRpcCmd)
  return _internal_subrpccmd();
}
inline void PBUserMgrRpcCallRsp::_internal_set_subrpccmd(::PBSubRpcType value) {
  assert(::PBSubRpcType_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.subrpccmd_ = value;
}
inline void PBUserMgrRpcCallRsp::set_subrpccmd(::PBSubRpcType value) {
  _internal_set_subrpccmd(value);
  // @@protoc_insertion_point(field_set:PBUserMgrRpcCallRsp.subRpcCmd)
}

// optional uint64 callback_id = 4;
inline bool PBUserMgrRpcCallRsp::_internal_has_callback_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool PBUserMgrRpcCallRsp::has_callback_id() const {
  return _internal_has_callback_id();
}
inline void PBUserMgrRpcCallRsp::clear_callback_id() {
  _impl_.callback_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint64_t PBUserMgrRpcCallRsp::_internal_callback_id() const {
  return _impl_.callback_id_;
}
inline uint64_t PBUserMgrRpcCallRsp::callback_id() const {
  // @@protoc_insertion_point(field_get:PBUserMgrRpcCallRsp.callback_id)
  return _internal_callback_id();
}
inline void PBUserMgrRpcCallRsp::_internal_set_callback_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.callback_id_ = value;
}
inline void PBUserMgrRpcCallRsp::set_callback_id(uint64_t value) {
  _internal_set_callback_id(value);
  // @@protoc_insertion_point(field_set:PBUserMgrRpcCallRsp.callback_id)
}

// optional bool bSucess = 5;
inline bool PBUserMgrRpcCallRsp::_internal_has_bsucess() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool PBUserMgrRpcCallRsp::has_bsucess() const {
  return _internal_has_bsucess();
}
inline void PBUserMgrRpcCallRsp::clear_bsucess() {
  _impl_.bsucess_ = false;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline bool PBUserMgrRpcCallRsp::_internal_bsucess() const {
  return _impl_.bsucess_;
}
inline bool PBUserMgrRpcCallRsp::bsucess() const {
  // @@protoc_insertion_point(field_get:PBUserMgrRpcCallRsp.bSucess)
  return _internal_bsucess();
}
inline void PBUserMgrRpcCallRsp::_internal_set_bsucess(bool value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.bsucess_ = value;
}
inline void PBUserMgrRpcCallRsp::set_bsucess(bool value) {
  _internal_set_bsucess(value);
  // @@protoc_insertion_point(field_set:PBUserMgrRpcCallRsp.bSucess)
}

// optional bytes rspParam = 6;
inline bool PBUserMgrRpcCallRsp::_internal_has_rspparam() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PBUserMgrRpcCallRsp::has_rspparam() const {
  return _internal_has_rspparam();
}
inline void PBUserMgrRpcCallRsp::clear_rspparam() {
  _impl_.rspparam_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& PBUserMgrRpcCallRsp::rspparam() const {
  // @@protoc_insertion_point(field_get:PBUserMgrRpcCallRsp.rspParam)
  return _internal_rspparam();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void PBUserMgrRpcCallRsp::set_rspparam(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.rspparam_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:PBUserMgrRpcCallRsp.rspParam)
}
inline std::string* PBUserMgrRpcCallRsp::mutable_rspparam() {
  std::string* _s = _internal_mutable_rspparam();
  // @@protoc_insertion_point(field_mutable:PBUserMgrRpcCallRsp.rspParam)
  return _s;
}
inline const std::string& PBUserMgrRpcCallRsp::_internal_rspparam() const {
  return _impl_.rspparam_.Get();
}
inline void PBUserMgrRpcCallRsp::_internal_set_rspparam(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.rspparam_.Set(value, GetArenaForAllocation());
}
inline std::string* PBUserMgrRpcCallRsp::_internal_mutable_rspparam() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.rspparam_.Mutable(GetArenaForAllocation());
}
inline std::string* PBUserMgrRpcCallRsp::release_rspparam() {
  // @@protoc_insertion_point(field_release:PBUserMgrRpcCallRsp.rspParam)
  if (!_internal_has_rspparam()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.rspparam_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.rspparam_.IsDefault()) {
    _impl_.rspparam_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void PBUserMgrRpcCallRsp::set_allocated_rspparam(std::string* rspparam) {
  if (rspparam != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.rspparam_.SetAllocated(rspparam, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.rspparam_.IsDefault()) {
    _impl_.rspparam_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:PBUserMgrRpcCallRsp.rspParam)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::PBNotifyNewerMailboxReq_MsgID> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBNotifyNewerMailboxReq_MsgID>() {
  return ::PBNotifyNewerMailboxReq_MsgID_descriptor();
}
template <> struct is_proto_enum< ::PBUserMgrRpcCallReq_MsgID> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBUserMgrRpcCallReq_MsgID>() {
  return ::PBUserMgrRpcCallReq_MsgID_descriptor();
}
template <> struct is_proto_enum< ::PBUserMgrRpcCallRsp_MsgID> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBUserMgrRpcCallRsp_MsgID>() {
  return ::PBUserMgrRpcCallRsp_MsgID_descriptor();
}
template <> struct is_proto_enum< ::PBCommonCmdType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBCommonCmdType>() {
  return ::PBCommonCmdType_descriptor();
}
template <> struct is_proto_enum< ::PBSubRpcType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBSubRpcType>() {
  return ::PBSubRpcType_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_CommonCmd_2eproto
