// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Entity.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_Entity_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_Entity_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_Entity_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_Entity_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Entity_2eproto;
class PBEntityMailbox;
struct PBEntityMailboxDefaultTypeInternal;
extern PBEntityMailboxDefaultTypeInternal _PBEntityMailbox_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::PBEntityMailbox* Arena::CreateMaybeMessage<::PBEntityMailbox>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

enum enPBEntityType : int {
  ET_NONE = 1
};
bool enPBEntityType_IsValid(int value);
constexpr enPBEntityType enPBEntityType_MIN = ET_NONE;
constexpr enPBEntityType enPBEntityType_MAX = ET_NONE;
constexpr int enPBEntityType_ARRAYSIZE = enPBEntityType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* enPBEntityType_descriptor();
template<typename T>
inline const std::string& enPBEntityType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, enPBEntityType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function enPBEntityType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    enPBEntityType_descriptor(), enum_t_value);
}
inline bool enPBEntityType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, enPBEntityType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<enPBEntityType>(
    enPBEntityType_descriptor(), name, value);
}
// ===================================================================

class PBEntityMailbox final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PBEntityMailbox) */ {
 public:
  inline PBEntityMailbox() : PBEntityMailbox(nullptr) {}
  ~PBEntityMailbox() override;
  explicit PROTOBUF_CONSTEXPR PBEntityMailbox(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PBEntityMailbox(const PBEntityMailbox& from);
  PBEntityMailbox(PBEntityMailbox&& from) noexcept
    : PBEntityMailbox() {
    *this = ::std::move(from);
  }

  inline PBEntityMailbox& operator=(const PBEntityMailbox& from) {
    CopyFrom(from);
    return *this;
  }
  inline PBEntityMailbox& operator=(PBEntityMailbox&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PBEntityMailbox& default_instance() {
    return *internal_default_instance();
  }
  static inline const PBEntityMailbox* internal_default_instance() {
    return reinterpret_cast<const PBEntityMailbox*>(
               &_PBEntityMailbox_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(PBEntityMailbox& a, PBEntityMailbox& b) {
    a.Swap(&b);
  }
  inline void Swap(PBEntityMailbox* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PBEntityMailbox* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PBEntityMailbox* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PBEntityMailbox>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PBEntityMailbox& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PBEntityMailbox& from) {
    PBEntityMailbox::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBEntityMailbox* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PBEntityMailbox";
  }
  protected:
  explicit PBEntityMailbox(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEntityIdFieldNumber = 1,
    kServerIdFieldNumber = 2,
  };
  // optional uint64 entity_id = 1;
  bool has_entity_id() const;
  private:
  bool _internal_has_entity_id() const;
  public:
  void clear_entity_id();
  uint64_t entity_id() const;
  void set_entity_id(uint64_t value);
  private:
  uint64_t _internal_entity_id() const;
  void _internal_set_entity_id(uint64_t value);
  public:

  // optional uint32 server_id = 2;
  bool has_server_id() const;
  private:
  bool _internal_has_server_id() const;
  public:
  void clear_server_id();
  uint32_t server_id() const;
  void set_server_id(uint32_t value);
  private:
  uint32_t _internal_server_id() const;
  void _internal_set_server_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:PBEntityMailbox)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t entity_id_;
    uint32_t server_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Entity_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PBEntityMailbox

// optional uint64 entity_id = 1;
inline bool PBEntityMailbox::_internal_has_entity_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PBEntityMailbox::has_entity_id() const {
  return _internal_has_entity_id();
}
inline void PBEntityMailbox::clear_entity_id() {
  _impl_.entity_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t PBEntityMailbox::_internal_entity_id() const {
  return _impl_.entity_id_;
}
inline uint64_t PBEntityMailbox::entity_id() const {
  // @@protoc_insertion_point(field_get:PBEntityMailbox.entity_id)
  return _internal_entity_id();
}
inline void PBEntityMailbox::_internal_set_entity_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.entity_id_ = value;
}
inline void PBEntityMailbox::set_entity_id(uint64_t value) {
  _internal_set_entity_id(value);
  // @@protoc_insertion_point(field_set:PBEntityMailbox.entity_id)
}

// optional uint32 server_id = 2;
inline bool PBEntityMailbox::_internal_has_server_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool PBEntityMailbox::has_server_id() const {
  return _internal_has_server_id();
}
inline void PBEntityMailbox::clear_server_id() {
  _impl_.server_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t PBEntityMailbox::_internal_server_id() const {
  return _impl_.server_id_;
}
inline uint32_t PBEntityMailbox::server_id() const {
  // @@protoc_insertion_point(field_get:PBEntityMailbox.server_id)
  return _internal_server_id();
}
inline void PBEntityMailbox::_internal_set_server_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.server_id_ = value;
}
inline void PBEntityMailbox::set_server_id(uint32_t value) {
  _internal_set_server_id(value);
  // @@protoc_insertion_point(field_set:PBEntityMailbox.server_id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::enPBEntityType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::enPBEntityType>() {
  return ::enPBEntityType_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_Entity_2eproto
