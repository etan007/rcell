// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SystemInternalCmd.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_SystemInternalCmd_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_SystemInternalCmd_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "xCommond.pb.h"
#include "Entity.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_SystemInternalCmd_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_SystemInternalCmd_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_SystemInternalCmd_2eproto;
class PBAllServerConnected;
struct PBAllServerConnectedDefaultTypeInternal;
extern PBAllServerConnectedDefaultTypeInternal _PBAllServerConnected_default_instance_;
class PBAllServerStartNow;
struct PBAllServerStartNowDefaultTypeInternal;
extern PBAllServerStartNowDefaultTypeInternal _PBAllServerStartNow_default_instance_;
class PBGlobalEntityInfo;
struct PBGlobalEntityInfoDefaultTypeInternal;
extern PBGlobalEntityInfoDefaultTypeInternal _PBGlobalEntityInfo_default_instance_;
class PBLobbyGateAddGlobalEntity;
struct PBLobbyGateAddGlobalEntityDefaultTypeInternal;
extern PBLobbyGateAddGlobalEntityDefaultTypeInternal _PBLobbyGateAddGlobalEntity_default_instance_;
class PBLobbyGateCreateEntityAnyWhere;
struct PBLobbyGateCreateEntityAnyWhereDefaultTypeInternal;
extern PBLobbyGateCreateEntityAnyWhereDefaultTypeInternal _PBLobbyGateCreateEntityAnyWhere_default_instance_;
class PBLobbyGateCreateEntityFromCenter;
struct PBLobbyGateCreateEntityFromCenterDefaultTypeInternal;
extern PBLobbyGateCreateEntityFromCenterDefaultTypeInternal _PBLobbyGateCreateEntityFromCenter_default_instance_;
class PBLobbyGateForwardMsg2Entity;
struct PBLobbyGateForwardMsg2EntityDefaultTypeInternal;
extern PBLobbyGateForwardMsg2EntityDefaultTypeInternal _PBLobbyGateForwardMsg2Entity_default_instance_;
class PBLobbyGateRegisterGlobalEntityReq;
struct PBLobbyGateRegisterGlobalEntityReqDefaultTypeInternal;
extern PBLobbyGateRegisterGlobalEntityReqDefaultTypeInternal _PBLobbyGateRegisterGlobalEntityReq_default_instance_;
class PBLobbyGateRegisterGlobalEntityRsp;
struct PBLobbyGateRegisterGlobalEntityRspDefaultTypeInternal;
extern PBLobbyGateRegisterGlobalEntityRspDefaultTypeInternal _PBLobbyGateRegisterGlobalEntityRsp_default_instance_;
class PBSystemCmd;
struct PBSystemCmdDefaultTypeInternal;
extern PBSystemCmdDefaultTypeInternal _PBSystemCmd_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::PBAllServerConnected* Arena::CreateMaybeMessage<::PBAllServerConnected>(Arena*);
template<> ::PBAllServerStartNow* Arena::CreateMaybeMessage<::PBAllServerStartNow>(Arena*);
template<> ::PBGlobalEntityInfo* Arena::CreateMaybeMessage<::PBGlobalEntityInfo>(Arena*);
template<> ::PBLobbyGateAddGlobalEntity* Arena::CreateMaybeMessage<::PBLobbyGateAddGlobalEntity>(Arena*);
template<> ::PBLobbyGateCreateEntityAnyWhere* Arena::CreateMaybeMessage<::PBLobbyGateCreateEntityAnyWhere>(Arena*);
template<> ::PBLobbyGateCreateEntityFromCenter* Arena::CreateMaybeMessage<::PBLobbyGateCreateEntityFromCenter>(Arena*);
template<> ::PBLobbyGateForwardMsg2Entity* Arena::CreateMaybeMessage<::PBLobbyGateForwardMsg2Entity>(Arena*);
template<> ::PBLobbyGateRegisterGlobalEntityReq* Arena::CreateMaybeMessage<::PBLobbyGateRegisterGlobalEntityReq>(Arena*);
template<> ::PBLobbyGateRegisterGlobalEntityRsp* Arena::CreateMaybeMessage<::PBLobbyGateRegisterGlobalEntityRsp>(Arena*);
template<> ::PBSystemCmd* Arena::CreateMaybeMessage<::PBSystemCmd>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

enum PBAllServerConnected_MsgID : int {
  PBAllServerConnected_MsgID_ID = 1001
};
bool PBAllServerConnected_MsgID_IsValid(int value);
constexpr PBAllServerConnected_MsgID PBAllServerConnected_MsgID_MsgID_MIN = PBAllServerConnected_MsgID_ID;
constexpr PBAllServerConnected_MsgID PBAllServerConnected_MsgID_MsgID_MAX = PBAllServerConnected_MsgID_ID;
constexpr int PBAllServerConnected_MsgID_MsgID_ARRAYSIZE = PBAllServerConnected_MsgID_MsgID_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PBAllServerConnected_MsgID_descriptor();
template<typename T>
inline const std::string& PBAllServerConnected_MsgID_Name(T enum_t_value) {
  static_assert(::std::is_same<T, PBAllServerConnected_MsgID>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function PBAllServerConnected_MsgID_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    PBAllServerConnected_MsgID_descriptor(), enum_t_value);
}
inline bool PBAllServerConnected_MsgID_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, PBAllServerConnected_MsgID* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<PBAllServerConnected_MsgID>(
    PBAllServerConnected_MsgID_descriptor(), name, value);
}
enum PBAllServerStartNow_MsgID : int {
  PBAllServerStartNow_MsgID_ID = 1002
};
bool PBAllServerStartNow_MsgID_IsValid(int value);
constexpr PBAllServerStartNow_MsgID PBAllServerStartNow_MsgID_MsgID_MIN = PBAllServerStartNow_MsgID_ID;
constexpr PBAllServerStartNow_MsgID PBAllServerStartNow_MsgID_MsgID_MAX = PBAllServerStartNow_MsgID_ID;
constexpr int PBAllServerStartNow_MsgID_MsgID_ARRAYSIZE = PBAllServerStartNow_MsgID_MsgID_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PBAllServerStartNow_MsgID_descriptor();
template<typename T>
inline const std::string& PBAllServerStartNow_MsgID_Name(T enum_t_value) {
  static_assert(::std::is_same<T, PBAllServerStartNow_MsgID>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function PBAllServerStartNow_MsgID_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    PBAllServerStartNow_MsgID_descriptor(), enum_t_value);
}
inline bool PBAllServerStartNow_MsgID_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, PBAllServerStartNow_MsgID* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<PBAllServerStartNow_MsgID>(
    PBAllServerStartNow_MsgID_descriptor(), name, value);
}
enum PBLobbyGateRegisterGlobalEntityReq_MsgID : int {
  PBLobbyGateRegisterGlobalEntityReq_MsgID_ID = 1003
};
bool PBLobbyGateRegisterGlobalEntityReq_MsgID_IsValid(int value);
constexpr PBLobbyGateRegisterGlobalEntityReq_MsgID PBLobbyGateRegisterGlobalEntityReq_MsgID_MsgID_MIN = PBLobbyGateRegisterGlobalEntityReq_MsgID_ID;
constexpr PBLobbyGateRegisterGlobalEntityReq_MsgID PBLobbyGateRegisterGlobalEntityReq_MsgID_MsgID_MAX = PBLobbyGateRegisterGlobalEntityReq_MsgID_ID;
constexpr int PBLobbyGateRegisterGlobalEntityReq_MsgID_MsgID_ARRAYSIZE = PBLobbyGateRegisterGlobalEntityReq_MsgID_MsgID_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PBLobbyGateRegisterGlobalEntityReq_MsgID_descriptor();
template<typename T>
inline const std::string& PBLobbyGateRegisterGlobalEntityReq_MsgID_Name(T enum_t_value) {
  static_assert(::std::is_same<T, PBLobbyGateRegisterGlobalEntityReq_MsgID>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function PBLobbyGateRegisterGlobalEntityReq_MsgID_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    PBLobbyGateRegisterGlobalEntityReq_MsgID_descriptor(), enum_t_value);
}
inline bool PBLobbyGateRegisterGlobalEntityReq_MsgID_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, PBLobbyGateRegisterGlobalEntityReq_MsgID* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<PBLobbyGateRegisterGlobalEntityReq_MsgID>(
    PBLobbyGateRegisterGlobalEntityReq_MsgID_descriptor(), name, value);
}
enum PBLobbyGateRegisterGlobalEntityRsp_MsgID : int {
  PBLobbyGateRegisterGlobalEntityRsp_MsgID_ID = 1004
};
bool PBLobbyGateRegisterGlobalEntityRsp_MsgID_IsValid(int value);
constexpr PBLobbyGateRegisterGlobalEntityRsp_MsgID PBLobbyGateRegisterGlobalEntityRsp_MsgID_MsgID_MIN = PBLobbyGateRegisterGlobalEntityRsp_MsgID_ID;
constexpr PBLobbyGateRegisterGlobalEntityRsp_MsgID PBLobbyGateRegisterGlobalEntityRsp_MsgID_MsgID_MAX = PBLobbyGateRegisterGlobalEntityRsp_MsgID_ID;
constexpr int PBLobbyGateRegisterGlobalEntityRsp_MsgID_MsgID_ARRAYSIZE = PBLobbyGateRegisterGlobalEntityRsp_MsgID_MsgID_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PBLobbyGateRegisterGlobalEntityRsp_MsgID_descriptor();
template<typename T>
inline const std::string& PBLobbyGateRegisterGlobalEntityRsp_MsgID_Name(T enum_t_value) {
  static_assert(::std::is_same<T, PBLobbyGateRegisterGlobalEntityRsp_MsgID>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function PBLobbyGateRegisterGlobalEntityRsp_MsgID_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    PBLobbyGateRegisterGlobalEntityRsp_MsgID_descriptor(), enum_t_value);
}
inline bool PBLobbyGateRegisterGlobalEntityRsp_MsgID_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, PBLobbyGateRegisterGlobalEntityRsp_MsgID* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<PBLobbyGateRegisterGlobalEntityRsp_MsgID>(
    PBLobbyGateRegisterGlobalEntityRsp_MsgID_descriptor(), name, value);
}
enum PBLobbyGateAddGlobalEntity_MsgID : int {
  PBLobbyGateAddGlobalEntity_MsgID_ID = 1005
};
bool PBLobbyGateAddGlobalEntity_MsgID_IsValid(int value);
constexpr PBLobbyGateAddGlobalEntity_MsgID PBLobbyGateAddGlobalEntity_MsgID_MsgID_MIN = PBLobbyGateAddGlobalEntity_MsgID_ID;
constexpr PBLobbyGateAddGlobalEntity_MsgID PBLobbyGateAddGlobalEntity_MsgID_MsgID_MAX = PBLobbyGateAddGlobalEntity_MsgID_ID;
constexpr int PBLobbyGateAddGlobalEntity_MsgID_MsgID_ARRAYSIZE = PBLobbyGateAddGlobalEntity_MsgID_MsgID_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PBLobbyGateAddGlobalEntity_MsgID_descriptor();
template<typename T>
inline const std::string& PBLobbyGateAddGlobalEntity_MsgID_Name(T enum_t_value) {
  static_assert(::std::is_same<T, PBLobbyGateAddGlobalEntity_MsgID>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function PBLobbyGateAddGlobalEntity_MsgID_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    PBLobbyGateAddGlobalEntity_MsgID_descriptor(), enum_t_value);
}
inline bool PBLobbyGateAddGlobalEntity_MsgID_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, PBLobbyGateAddGlobalEntity_MsgID* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<PBLobbyGateAddGlobalEntity_MsgID>(
    PBLobbyGateAddGlobalEntity_MsgID_descriptor(), name, value);
}
enum PBLobbyGateForwardMsg2Entity_MsgID : int {
  PBLobbyGateForwardMsg2Entity_MsgID_ID = 1006
};
bool PBLobbyGateForwardMsg2Entity_MsgID_IsValid(int value);
constexpr PBLobbyGateForwardMsg2Entity_MsgID PBLobbyGateForwardMsg2Entity_MsgID_MsgID_MIN = PBLobbyGateForwardMsg2Entity_MsgID_ID;
constexpr PBLobbyGateForwardMsg2Entity_MsgID PBLobbyGateForwardMsg2Entity_MsgID_MsgID_MAX = PBLobbyGateForwardMsg2Entity_MsgID_ID;
constexpr int PBLobbyGateForwardMsg2Entity_MsgID_MsgID_ARRAYSIZE = PBLobbyGateForwardMsg2Entity_MsgID_MsgID_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PBLobbyGateForwardMsg2Entity_MsgID_descriptor();
template<typename T>
inline const std::string& PBLobbyGateForwardMsg2Entity_MsgID_Name(T enum_t_value) {
  static_assert(::std::is_same<T, PBLobbyGateForwardMsg2Entity_MsgID>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function PBLobbyGateForwardMsg2Entity_MsgID_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    PBLobbyGateForwardMsg2Entity_MsgID_descriptor(), enum_t_value);
}
inline bool PBLobbyGateForwardMsg2Entity_MsgID_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, PBLobbyGateForwardMsg2Entity_MsgID* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<PBLobbyGateForwardMsg2Entity_MsgID>(
    PBLobbyGateForwardMsg2Entity_MsgID_descriptor(), name, value);
}
enum PBLobbyGateCreateEntityAnyWhere_MsgID : int {
  PBLobbyGateCreateEntityAnyWhere_MsgID_ID = 1007
};
bool PBLobbyGateCreateEntityAnyWhere_MsgID_IsValid(int value);
constexpr PBLobbyGateCreateEntityAnyWhere_MsgID PBLobbyGateCreateEntityAnyWhere_MsgID_MsgID_MIN = PBLobbyGateCreateEntityAnyWhere_MsgID_ID;
constexpr PBLobbyGateCreateEntityAnyWhere_MsgID PBLobbyGateCreateEntityAnyWhere_MsgID_MsgID_MAX = PBLobbyGateCreateEntityAnyWhere_MsgID_ID;
constexpr int PBLobbyGateCreateEntityAnyWhere_MsgID_MsgID_ARRAYSIZE = PBLobbyGateCreateEntityAnyWhere_MsgID_MsgID_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PBLobbyGateCreateEntityAnyWhere_MsgID_descriptor();
template<typename T>
inline const std::string& PBLobbyGateCreateEntityAnyWhere_MsgID_Name(T enum_t_value) {
  static_assert(::std::is_same<T, PBLobbyGateCreateEntityAnyWhere_MsgID>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function PBLobbyGateCreateEntityAnyWhere_MsgID_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    PBLobbyGateCreateEntityAnyWhere_MsgID_descriptor(), enum_t_value);
}
inline bool PBLobbyGateCreateEntityAnyWhere_MsgID_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, PBLobbyGateCreateEntityAnyWhere_MsgID* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<PBLobbyGateCreateEntityAnyWhere_MsgID>(
    PBLobbyGateCreateEntityAnyWhere_MsgID_descriptor(), name, value);
}
enum PBLobbyGateCreateEntityFromCenter_MsgID : int {
  PBLobbyGateCreateEntityFromCenter_MsgID_ID = 1008
};
bool PBLobbyGateCreateEntityFromCenter_MsgID_IsValid(int value);
constexpr PBLobbyGateCreateEntityFromCenter_MsgID PBLobbyGateCreateEntityFromCenter_MsgID_MsgID_MIN = PBLobbyGateCreateEntityFromCenter_MsgID_ID;
constexpr PBLobbyGateCreateEntityFromCenter_MsgID PBLobbyGateCreateEntityFromCenter_MsgID_MsgID_MAX = PBLobbyGateCreateEntityFromCenter_MsgID_ID;
constexpr int PBLobbyGateCreateEntityFromCenter_MsgID_MsgID_ARRAYSIZE = PBLobbyGateCreateEntityFromCenter_MsgID_MsgID_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PBLobbyGateCreateEntityFromCenter_MsgID_descriptor();
template<typename T>
inline const std::string& PBLobbyGateCreateEntityFromCenter_MsgID_Name(T enum_t_value) {
  static_assert(::std::is_same<T, PBLobbyGateCreateEntityFromCenter_MsgID>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function PBLobbyGateCreateEntityFromCenter_MsgID_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    PBLobbyGateCreateEntityFromCenter_MsgID_descriptor(), enum_t_value);
}
inline bool PBLobbyGateCreateEntityFromCenter_MsgID_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, PBLobbyGateCreateEntityFromCenter_MsgID* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<PBLobbyGateCreateEntityFromCenter_MsgID>(
    PBLobbyGateCreateEntityFromCenter_MsgID_descriptor(), name, value);
}
enum PBSystemCmdType : int {
  PB_LOBBYGATE_REGISTER_PUBLIC_ENTITY_REQ = 1,
  PB_LOBBYGATE_REGISTER_PUBLIC_ENTITY_RSP = 2,
  PB_LOBBYGATE_ADD_PUBLIC_ENTITY = 3,
  PB_LOBBYGATE_SEND_MSG_2_PUBLIC_ENTITY = 4,
  PB_LOBBYGATE_CREATE_ENTITY_ANYWHERE_REQ = 5,
  PB_LOBBYGATE_CREATE_ENTITY_FROM_LOBBYCENTER = 6,
  PB_All_Server_Connected = 7,
  PB_All_Server_StartNow = 8
};
bool PBSystemCmdType_IsValid(int value);
constexpr PBSystemCmdType PBSystemCmdType_MIN = PB_LOBBYGATE_REGISTER_PUBLIC_ENTITY_REQ;
constexpr PBSystemCmdType PBSystemCmdType_MAX = PB_All_Server_StartNow;
constexpr int PBSystemCmdType_ARRAYSIZE = PBSystemCmdType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PBSystemCmdType_descriptor();
template<typename T>
inline const std::string& PBSystemCmdType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, PBSystemCmdType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function PBSystemCmdType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    PBSystemCmdType_descriptor(), enum_t_value);
}
inline bool PBSystemCmdType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, PBSystemCmdType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<PBSystemCmdType>(
    PBSystemCmdType_descriptor(), name, value);
}
// ===================================================================

class PBSystemCmd final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PBSystemCmd) */ {
 public:
  inline PBSystemCmd() : PBSystemCmd(nullptr) {}
  ~PBSystemCmd() override;
  explicit PROTOBUF_CONSTEXPR PBSystemCmd(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PBSystemCmd(const PBSystemCmd& from);
  PBSystemCmd(PBSystemCmd&& from) noexcept
    : PBSystemCmd() {
    *this = ::std::move(from);
  }

  inline PBSystemCmd& operator=(const PBSystemCmd& from) {
    CopyFrom(from);
    return *this;
  }
  inline PBSystemCmd& operator=(PBSystemCmd&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PBSystemCmd& default_instance() {
    return *internal_default_instance();
  }
  static inline const PBSystemCmd* internal_default_instance() {
    return reinterpret_cast<const PBSystemCmd*>(
               &_PBSystemCmd_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(PBSystemCmd& a, PBSystemCmd& b) {
    a.Swap(&b);
  }
  inline void Swap(PBSystemCmd* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PBSystemCmd* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PBSystemCmd* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PBSystemCmd>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PBSystemCmd& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PBSystemCmd& from) {
    PBSystemCmd::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBSystemCmd* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PBSystemCmd";
  }
  protected:
  explicit PBSystemCmd(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCmdFieldNumber = 1,
  };
  // optional .CmdType cmd = 1 [default = PB_SYSTEM_INTERNAL_CMD];
  bool has_cmd() const;
  private:
  bool _internal_has_cmd() const;
  public:
  void clear_cmd();
  ::CmdType cmd() const;
  void set_cmd(::CmdType value);
  private:
  ::CmdType _internal_cmd() const;
  void _internal_set_cmd(::CmdType value);
  public:

  // @@protoc_insertion_point(class_scope:PBSystemCmd)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int cmd_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SystemInternalCmd_2eproto;
};
// -------------------------------------------------------------------

class PBAllServerConnected final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PBAllServerConnected) */ {
 public:
  inline PBAllServerConnected() : PBAllServerConnected(nullptr) {}
  ~PBAllServerConnected() override;
  explicit PROTOBUF_CONSTEXPR PBAllServerConnected(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PBAllServerConnected(const PBAllServerConnected& from);
  PBAllServerConnected(PBAllServerConnected&& from) noexcept
    : PBAllServerConnected() {
    *this = ::std::move(from);
  }

  inline PBAllServerConnected& operator=(const PBAllServerConnected& from) {
    CopyFrom(from);
    return *this;
  }
  inline PBAllServerConnected& operator=(PBAllServerConnected&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PBAllServerConnected& default_instance() {
    return *internal_default_instance();
  }
  static inline const PBAllServerConnected* internal_default_instance() {
    return reinterpret_cast<const PBAllServerConnected*>(
               &_PBAllServerConnected_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(PBAllServerConnected& a, PBAllServerConnected& b) {
    a.Swap(&b);
  }
  inline void Swap(PBAllServerConnected* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PBAllServerConnected* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PBAllServerConnected* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PBAllServerConnected>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PBAllServerConnected& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PBAllServerConnected& from) {
    PBAllServerConnected::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBAllServerConnected* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PBAllServerConnected";
  }
  protected:
  explicit PBAllServerConnected(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef PBAllServerConnected_MsgID MsgID;
  static constexpr MsgID ID =
    PBAllServerConnected_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return PBAllServerConnected_MsgID_IsValid(value);
  }
  static constexpr MsgID MsgID_MIN =
    PBAllServerConnected_MsgID_MsgID_MIN;
  static constexpr MsgID MsgID_MAX =
    PBAllServerConnected_MsgID_MsgID_MAX;
  static constexpr int MsgID_ARRAYSIZE =
    PBAllServerConnected_MsgID_MsgID_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  MsgID_descriptor() {
    return PBAllServerConnected_MsgID_descriptor();
  }
  template<typename T>
  static inline const std::string& MsgID_Name(T enum_t_value) {
    static_assert(::std::is_same<T, MsgID>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function MsgID_Name.");
    return PBAllServerConnected_MsgID_Name(enum_t_value);
  }
  static inline bool MsgID_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      MsgID* value) {
    return PBAllServerConnected_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kCmdIDFieldNumber = 1,
    kSguidFieldNumber = 3,
    kParamFieldNumber = 2,
  };
  // optional .PBSystemCmd cmdID = 1;
  bool has_cmdid() const;
  private:
  bool _internal_has_cmdid() const;
  public:
  void clear_cmdid();
  const ::PBSystemCmd& cmdid() const;
  PROTOBUF_NODISCARD ::PBSystemCmd* release_cmdid();
  ::PBSystemCmd* mutable_cmdid();
  void set_allocated_cmdid(::PBSystemCmd* cmdid);
  private:
  const ::PBSystemCmd& _internal_cmdid() const;
  ::PBSystemCmd* _internal_mutable_cmdid();
  public:
  void unsafe_arena_set_allocated_cmdid(
      ::PBSystemCmd* cmdid);
  ::PBSystemCmd* unsafe_arena_release_cmdid();

  // optional uint32 sguid = 3;
  bool has_sguid() const;
  private:
  bool _internal_has_sguid() const;
  public:
  void clear_sguid();
  uint32_t sguid() const;
  void set_sguid(uint32_t value);
  private:
  uint32_t _internal_sguid() const;
  void _internal_set_sguid(uint32_t value);
  public:

  // optional .PBSystemCmdType param = 2 [default = PB_All_Server_Connected];
  bool has_param() const;
  private:
  bool _internal_has_param() const;
  public:
  void clear_param();
  ::PBSystemCmdType param() const;
  void set_param(::PBSystemCmdType value);
  private:
  ::PBSystemCmdType _internal_param() const;
  void _internal_set_param(::PBSystemCmdType value);
  public:

  // @@protoc_insertion_point(class_scope:PBAllServerConnected)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PBSystemCmd* cmdid_;
    uint32_t sguid_;
    int param_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SystemInternalCmd_2eproto;
};
// -------------------------------------------------------------------

class PBAllServerStartNow final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PBAllServerStartNow) */ {
 public:
  inline PBAllServerStartNow() : PBAllServerStartNow(nullptr) {}
  ~PBAllServerStartNow() override;
  explicit PROTOBUF_CONSTEXPR PBAllServerStartNow(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PBAllServerStartNow(const PBAllServerStartNow& from);
  PBAllServerStartNow(PBAllServerStartNow&& from) noexcept
    : PBAllServerStartNow() {
    *this = ::std::move(from);
  }

  inline PBAllServerStartNow& operator=(const PBAllServerStartNow& from) {
    CopyFrom(from);
    return *this;
  }
  inline PBAllServerStartNow& operator=(PBAllServerStartNow&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PBAllServerStartNow& default_instance() {
    return *internal_default_instance();
  }
  static inline const PBAllServerStartNow* internal_default_instance() {
    return reinterpret_cast<const PBAllServerStartNow*>(
               &_PBAllServerStartNow_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(PBAllServerStartNow& a, PBAllServerStartNow& b) {
    a.Swap(&b);
  }
  inline void Swap(PBAllServerStartNow* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PBAllServerStartNow* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PBAllServerStartNow* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PBAllServerStartNow>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PBAllServerStartNow& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PBAllServerStartNow& from) {
    PBAllServerStartNow::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBAllServerStartNow* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PBAllServerStartNow";
  }
  protected:
  explicit PBAllServerStartNow(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef PBAllServerStartNow_MsgID MsgID;
  static constexpr MsgID ID =
    PBAllServerStartNow_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return PBAllServerStartNow_MsgID_IsValid(value);
  }
  static constexpr MsgID MsgID_MIN =
    PBAllServerStartNow_MsgID_MsgID_MIN;
  static constexpr MsgID MsgID_MAX =
    PBAllServerStartNow_MsgID_MsgID_MAX;
  static constexpr int MsgID_ARRAYSIZE =
    PBAllServerStartNow_MsgID_MsgID_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  MsgID_descriptor() {
    return PBAllServerStartNow_MsgID_descriptor();
  }
  template<typename T>
  static inline const std::string& MsgID_Name(T enum_t_value) {
    static_assert(::std::is_same<T, MsgID>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function MsgID_Name.");
    return PBAllServerStartNow_MsgID_Name(enum_t_value);
  }
  static inline bool MsgID_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      MsgID* value) {
    return PBAllServerStartNow_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kCmdIDFieldNumber = 1,
    kBStartFieldNumber = 3,
    kParamFieldNumber = 2,
  };
  // optional .PBSystemCmd cmdID = 1;
  bool has_cmdid() const;
  private:
  bool _internal_has_cmdid() const;
  public:
  void clear_cmdid();
  const ::PBSystemCmd& cmdid() const;
  PROTOBUF_NODISCARD ::PBSystemCmd* release_cmdid();
  ::PBSystemCmd* mutable_cmdid();
  void set_allocated_cmdid(::PBSystemCmd* cmdid);
  private:
  const ::PBSystemCmd& _internal_cmdid() const;
  ::PBSystemCmd* _internal_mutable_cmdid();
  public:
  void unsafe_arena_set_allocated_cmdid(
      ::PBSystemCmd* cmdid);
  ::PBSystemCmd* unsafe_arena_release_cmdid();

  // optional uint32 bStart = 3;
  bool has_bstart() const;
  private:
  bool _internal_has_bstart() const;
  public:
  void clear_bstart();
  uint32_t bstart() const;
  void set_bstart(uint32_t value);
  private:
  uint32_t _internal_bstart() const;
  void _internal_set_bstart(uint32_t value);
  public:

  // optional .PBSystemCmdType param = 2 [default = PB_All_Server_StartNow];
  bool has_param() const;
  private:
  bool _internal_has_param() const;
  public:
  void clear_param();
  ::PBSystemCmdType param() const;
  void set_param(::PBSystemCmdType value);
  private:
  ::PBSystemCmdType _internal_param() const;
  void _internal_set_param(::PBSystemCmdType value);
  public:

  // @@protoc_insertion_point(class_scope:PBAllServerStartNow)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PBSystemCmd* cmdid_;
    uint32_t bstart_;
    int param_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SystemInternalCmd_2eproto;
};
// -------------------------------------------------------------------

class PBLobbyGateRegisterGlobalEntityReq final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PBLobbyGateRegisterGlobalEntityReq) */ {
 public:
  inline PBLobbyGateRegisterGlobalEntityReq() : PBLobbyGateRegisterGlobalEntityReq(nullptr) {}
  ~PBLobbyGateRegisterGlobalEntityReq() override;
  explicit PROTOBUF_CONSTEXPR PBLobbyGateRegisterGlobalEntityReq(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PBLobbyGateRegisterGlobalEntityReq(const PBLobbyGateRegisterGlobalEntityReq& from);
  PBLobbyGateRegisterGlobalEntityReq(PBLobbyGateRegisterGlobalEntityReq&& from) noexcept
    : PBLobbyGateRegisterGlobalEntityReq() {
    *this = ::std::move(from);
  }

  inline PBLobbyGateRegisterGlobalEntityReq& operator=(const PBLobbyGateRegisterGlobalEntityReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline PBLobbyGateRegisterGlobalEntityReq& operator=(PBLobbyGateRegisterGlobalEntityReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PBLobbyGateRegisterGlobalEntityReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const PBLobbyGateRegisterGlobalEntityReq* internal_default_instance() {
    return reinterpret_cast<const PBLobbyGateRegisterGlobalEntityReq*>(
               &_PBLobbyGateRegisterGlobalEntityReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(PBLobbyGateRegisterGlobalEntityReq& a, PBLobbyGateRegisterGlobalEntityReq& b) {
    a.Swap(&b);
  }
  inline void Swap(PBLobbyGateRegisterGlobalEntityReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PBLobbyGateRegisterGlobalEntityReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PBLobbyGateRegisterGlobalEntityReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PBLobbyGateRegisterGlobalEntityReq>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PBLobbyGateRegisterGlobalEntityReq& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PBLobbyGateRegisterGlobalEntityReq& from) {
    PBLobbyGateRegisterGlobalEntityReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBLobbyGateRegisterGlobalEntityReq* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PBLobbyGateRegisterGlobalEntityReq";
  }
  protected:
  explicit PBLobbyGateRegisterGlobalEntityReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef PBLobbyGateRegisterGlobalEntityReq_MsgID MsgID;
  static constexpr MsgID ID =
    PBLobbyGateRegisterGlobalEntityReq_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return PBLobbyGateRegisterGlobalEntityReq_MsgID_IsValid(value);
  }
  static constexpr MsgID MsgID_MIN =
    PBLobbyGateRegisterGlobalEntityReq_MsgID_MsgID_MIN;
  static constexpr MsgID MsgID_MAX =
    PBLobbyGateRegisterGlobalEntityReq_MsgID_MsgID_MAX;
  static constexpr int MsgID_ARRAYSIZE =
    PBLobbyGateRegisterGlobalEntityReq_MsgID_MsgID_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  MsgID_descriptor() {
    return PBLobbyGateRegisterGlobalEntityReq_MsgID_descriptor();
  }
  template<typename T>
  static inline const std::string& MsgID_Name(T enum_t_value) {
    static_assert(::std::is_same<T, MsgID>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function MsgID_Name.");
    return PBLobbyGateRegisterGlobalEntityReq_MsgID_Name(enum_t_value);
  }
  static inline bool MsgID_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      MsgID* value) {
    return PBLobbyGateRegisterGlobalEntityReq_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kEntityNameFieldNumber = 3,
    kCmdIDFieldNumber = 1,
    kEntityMbFieldNumber = 4,
    kParamFieldNumber = 2,
  };
  // optional bytes entity_name = 3;
  bool has_entity_name() const;
  private:
  bool _internal_has_entity_name() const;
  public:
  void clear_entity_name();
  const std::string& entity_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_entity_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_entity_name();
  PROTOBUF_NODISCARD std::string* release_entity_name();
  void set_allocated_entity_name(std::string* entity_name);
  private:
  const std::string& _internal_entity_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_entity_name(const std::string& value);
  std::string* _internal_mutable_entity_name();
  public:

  // optional .PBSystemCmd cmdID = 1;
  bool has_cmdid() const;
  private:
  bool _internal_has_cmdid() const;
  public:
  void clear_cmdid();
  const ::PBSystemCmd& cmdid() const;
  PROTOBUF_NODISCARD ::PBSystemCmd* release_cmdid();
  ::PBSystemCmd* mutable_cmdid();
  void set_allocated_cmdid(::PBSystemCmd* cmdid);
  private:
  const ::PBSystemCmd& _internal_cmdid() const;
  ::PBSystemCmd* _internal_mutable_cmdid();
  public:
  void unsafe_arena_set_allocated_cmdid(
      ::PBSystemCmd* cmdid);
  ::PBSystemCmd* unsafe_arena_release_cmdid();

  // optional .PBEntityMailbox entity_mb = 4;
  bool has_entity_mb() const;
  private:
  bool _internal_has_entity_mb() const;
  public:
  void clear_entity_mb();
  const ::PBEntityMailbox& entity_mb() const;
  PROTOBUF_NODISCARD ::PBEntityMailbox* release_entity_mb();
  ::PBEntityMailbox* mutable_entity_mb();
  void set_allocated_entity_mb(::PBEntityMailbox* entity_mb);
  private:
  const ::PBEntityMailbox& _internal_entity_mb() const;
  ::PBEntityMailbox* _internal_mutable_entity_mb();
  public:
  void unsafe_arena_set_allocated_entity_mb(
      ::PBEntityMailbox* entity_mb);
  ::PBEntityMailbox* unsafe_arena_release_entity_mb();

  // optional .PBSystemCmdType param = 2 [default = PB_LOBBYGATE_REGISTER_PUBLIC_ENTITY_REQ];
  bool has_param() const;
  private:
  bool _internal_has_param() const;
  public:
  void clear_param();
  ::PBSystemCmdType param() const;
  void set_param(::PBSystemCmdType value);
  private:
  ::PBSystemCmdType _internal_param() const;
  void _internal_set_param(::PBSystemCmdType value);
  public:

  // @@protoc_insertion_point(class_scope:PBLobbyGateRegisterGlobalEntityReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr entity_name_;
    ::PBSystemCmd* cmdid_;
    ::PBEntityMailbox* entity_mb_;
    int param_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SystemInternalCmd_2eproto;
};
// -------------------------------------------------------------------

class PBLobbyGateRegisterGlobalEntityRsp final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PBLobbyGateRegisterGlobalEntityRsp) */ {
 public:
  inline PBLobbyGateRegisterGlobalEntityRsp() : PBLobbyGateRegisterGlobalEntityRsp(nullptr) {}
  ~PBLobbyGateRegisterGlobalEntityRsp() override;
  explicit PROTOBUF_CONSTEXPR PBLobbyGateRegisterGlobalEntityRsp(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PBLobbyGateRegisterGlobalEntityRsp(const PBLobbyGateRegisterGlobalEntityRsp& from);
  PBLobbyGateRegisterGlobalEntityRsp(PBLobbyGateRegisterGlobalEntityRsp&& from) noexcept
    : PBLobbyGateRegisterGlobalEntityRsp() {
    *this = ::std::move(from);
  }

  inline PBLobbyGateRegisterGlobalEntityRsp& operator=(const PBLobbyGateRegisterGlobalEntityRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline PBLobbyGateRegisterGlobalEntityRsp& operator=(PBLobbyGateRegisterGlobalEntityRsp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PBLobbyGateRegisterGlobalEntityRsp& default_instance() {
    return *internal_default_instance();
  }
  static inline const PBLobbyGateRegisterGlobalEntityRsp* internal_default_instance() {
    return reinterpret_cast<const PBLobbyGateRegisterGlobalEntityRsp*>(
               &_PBLobbyGateRegisterGlobalEntityRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(PBLobbyGateRegisterGlobalEntityRsp& a, PBLobbyGateRegisterGlobalEntityRsp& b) {
    a.Swap(&b);
  }
  inline void Swap(PBLobbyGateRegisterGlobalEntityRsp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PBLobbyGateRegisterGlobalEntityRsp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PBLobbyGateRegisterGlobalEntityRsp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PBLobbyGateRegisterGlobalEntityRsp>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PBLobbyGateRegisterGlobalEntityRsp& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PBLobbyGateRegisterGlobalEntityRsp& from) {
    PBLobbyGateRegisterGlobalEntityRsp::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBLobbyGateRegisterGlobalEntityRsp* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PBLobbyGateRegisterGlobalEntityRsp";
  }
  protected:
  explicit PBLobbyGateRegisterGlobalEntityRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef PBLobbyGateRegisterGlobalEntityRsp_MsgID MsgID;
  static constexpr MsgID ID =
    PBLobbyGateRegisterGlobalEntityRsp_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return PBLobbyGateRegisterGlobalEntityRsp_MsgID_IsValid(value);
  }
  static constexpr MsgID MsgID_MIN =
    PBLobbyGateRegisterGlobalEntityRsp_MsgID_MsgID_MIN;
  static constexpr MsgID MsgID_MAX =
    PBLobbyGateRegisterGlobalEntityRsp_MsgID_MsgID_MAX;
  static constexpr int MsgID_ARRAYSIZE =
    PBLobbyGateRegisterGlobalEntityRsp_MsgID_MsgID_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  MsgID_descriptor() {
    return PBLobbyGateRegisterGlobalEntityRsp_MsgID_descriptor();
  }
  template<typename T>
  static inline const std::string& MsgID_Name(T enum_t_value) {
    static_assert(::std::is_same<T, MsgID>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function MsgID_Name.");
    return PBLobbyGateRegisterGlobalEntityRsp_MsgID_Name(enum_t_value);
  }
  static inline bool MsgID_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      MsgID* value) {
    return PBLobbyGateRegisterGlobalEntityRsp_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kEntityNameFieldNumber = 3,
    kCmdIDFieldNumber = 1,
    kEntityMbFieldNumber = 4,
    kCodeFieldNumber = 5,
    kParamFieldNumber = 2,
  };
  // optional bytes entity_name = 3;
  bool has_entity_name() const;
  private:
  bool _internal_has_entity_name() const;
  public:
  void clear_entity_name();
  const std::string& entity_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_entity_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_entity_name();
  PROTOBUF_NODISCARD std::string* release_entity_name();
  void set_allocated_entity_name(std::string* entity_name);
  private:
  const std::string& _internal_entity_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_entity_name(const std::string& value);
  std::string* _internal_mutable_entity_name();
  public:

  // optional .PBSystemCmd cmdID = 1;
  bool has_cmdid() const;
  private:
  bool _internal_has_cmdid() const;
  public:
  void clear_cmdid();
  const ::PBSystemCmd& cmdid() const;
  PROTOBUF_NODISCARD ::PBSystemCmd* release_cmdid();
  ::PBSystemCmd* mutable_cmdid();
  void set_allocated_cmdid(::PBSystemCmd* cmdid);
  private:
  const ::PBSystemCmd& _internal_cmdid() const;
  ::PBSystemCmd* _internal_mutable_cmdid();
  public:
  void unsafe_arena_set_allocated_cmdid(
      ::PBSystemCmd* cmdid);
  ::PBSystemCmd* unsafe_arena_release_cmdid();

  // optional .PBEntityMailbox entity_mb = 4;
  bool has_entity_mb() const;
  private:
  bool _internal_has_entity_mb() const;
  public:
  void clear_entity_mb();
  const ::PBEntityMailbox& entity_mb() const;
  PROTOBUF_NODISCARD ::PBEntityMailbox* release_entity_mb();
  ::PBEntityMailbox* mutable_entity_mb();
  void set_allocated_entity_mb(::PBEntityMailbox* entity_mb);
  private:
  const ::PBEntityMailbox& _internal_entity_mb() const;
  ::PBEntityMailbox* _internal_mutable_entity_mb();
  public:
  void unsafe_arena_set_allocated_entity_mb(
      ::PBEntityMailbox* entity_mb);
  ::PBEntityMailbox* unsafe_arena_release_entity_mb();

  // optional uint32 code = 5;
  bool has_code() const;
  private:
  bool _internal_has_code() const;
  public:
  void clear_code();
  uint32_t code() const;
  void set_code(uint32_t value);
  private:
  uint32_t _internal_code() const;
  void _internal_set_code(uint32_t value);
  public:

  // optional .PBSystemCmdType param = 2 [default = PB_LOBBYGATE_REGISTER_PUBLIC_ENTITY_RSP];
  bool has_param() const;
  private:
  bool _internal_has_param() const;
  public:
  void clear_param();
  ::PBSystemCmdType param() const;
  void set_param(::PBSystemCmdType value);
  private:
  ::PBSystemCmdType _internal_param() const;
  void _internal_set_param(::PBSystemCmdType value);
  public:

  // @@protoc_insertion_point(class_scope:PBLobbyGateRegisterGlobalEntityRsp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr entity_name_;
    ::PBSystemCmd* cmdid_;
    ::PBEntityMailbox* entity_mb_;
    uint32_t code_;
    int param_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SystemInternalCmd_2eproto;
};
// -------------------------------------------------------------------

class PBGlobalEntityInfo final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PBGlobalEntityInfo) */ {
 public:
  inline PBGlobalEntityInfo() : PBGlobalEntityInfo(nullptr) {}
  ~PBGlobalEntityInfo() override;
  explicit PROTOBUF_CONSTEXPR PBGlobalEntityInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PBGlobalEntityInfo(const PBGlobalEntityInfo& from);
  PBGlobalEntityInfo(PBGlobalEntityInfo&& from) noexcept
    : PBGlobalEntityInfo() {
    *this = ::std::move(from);
  }

  inline PBGlobalEntityInfo& operator=(const PBGlobalEntityInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline PBGlobalEntityInfo& operator=(PBGlobalEntityInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PBGlobalEntityInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const PBGlobalEntityInfo* internal_default_instance() {
    return reinterpret_cast<const PBGlobalEntityInfo*>(
               &_PBGlobalEntityInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(PBGlobalEntityInfo& a, PBGlobalEntityInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(PBGlobalEntityInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PBGlobalEntityInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PBGlobalEntityInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PBGlobalEntityInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PBGlobalEntityInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PBGlobalEntityInfo& from) {
    PBGlobalEntityInfo::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBGlobalEntityInfo* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PBGlobalEntityInfo";
  }
  protected:
  explicit PBGlobalEntityInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEntityNameFieldNumber = 1,
    kEntityMbFieldNumber = 2,
  };
  // optional bytes entity_name = 1;
  bool has_entity_name() const;
  private:
  bool _internal_has_entity_name() const;
  public:
  void clear_entity_name();
  const std::string& entity_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_entity_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_entity_name();
  PROTOBUF_NODISCARD std::string* release_entity_name();
  void set_allocated_entity_name(std::string* entity_name);
  private:
  const std::string& _internal_entity_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_entity_name(const std::string& value);
  std::string* _internal_mutable_entity_name();
  public:

  // optional .PBEntityMailbox entity_mb = 2;
  bool has_entity_mb() const;
  private:
  bool _internal_has_entity_mb() const;
  public:
  void clear_entity_mb();
  const ::PBEntityMailbox& entity_mb() const;
  PROTOBUF_NODISCARD ::PBEntityMailbox* release_entity_mb();
  ::PBEntityMailbox* mutable_entity_mb();
  void set_allocated_entity_mb(::PBEntityMailbox* entity_mb);
  private:
  const ::PBEntityMailbox& _internal_entity_mb() const;
  ::PBEntityMailbox* _internal_mutable_entity_mb();
  public:
  void unsafe_arena_set_allocated_entity_mb(
      ::PBEntityMailbox* entity_mb);
  ::PBEntityMailbox* unsafe_arena_release_entity_mb();

  // @@protoc_insertion_point(class_scope:PBGlobalEntityInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr entity_name_;
    ::PBEntityMailbox* entity_mb_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SystemInternalCmd_2eproto;
};
// -------------------------------------------------------------------

class PBLobbyGateAddGlobalEntity final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PBLobbyGateAddGlobalEntity) */ {
 public:
  inline PBLobbyGateAddGlobalEntity() : PBLobbyGateAddGlobalEntity(nullptr) {}
  ~PBLobbyGateAddGlobalEntity() override;
  explicit PROTOBUF_CONSTEXPR PBLobbyGateAddGlobalEntity(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PBLobbyGateAddGlobalEntity(const PBLobbyGateAddGlobalEntity& from);
  PBLobbyGateAddGlobalEntity(PBLobbyGateAddGlobalEntity&& from) noexcept
    : PBLobbyGateAddGlobalEntity() {
    *this = ::std::move(from);
  }

  inline PBLobbyGateAddGlobalEntity& operator=(const PBLobbyGateAddGlobalEntity& from) {
    CopyFrom(from);
    return *this;
  }
  inline PBLobbyGateAddGlobalEntity& operator=(PBLobbyGateAddGlobalEntity&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PBLobbyGateAddGlobalEntity& default_instance() {
    return *internal_default_instance();
  }
  static inline const PBLobbyGateAddGlobalEntity* internal_default_instance() {
    return reinterpret_cast<const PBLobbyGateAddGlobalEntity*>(
               &_PBLobbyGateAddGlobalEntity_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(PBLobbyGateAddGlobalEntity& a, PBLobbyGateAddGlobalEntity& b) {
    a.Swap(&b);
  }
  inline void Swap(PBLobbyGateAddGlobalEntity* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PBLobbyGateAddGlobalEntity* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PBLobbyGateAddGlobalEntity* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PBLobbyGateAddGlobalEntity>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PBLobbyGateAddGlobalEntity& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PBLobbyGateAddGlobalEntity& from) {
    PBLobbyGateAddGlobalEntity::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBLobbyGateAddGlobalEntity* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PBLobbyGateAddGlobalEntity";
  }
  protected:
  explicit PBLobbyGateAddGlobalEntity(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef PBLobbyGateAddGlobalEntity_MsgID MsgID;
  static constexpr MsgID ID =
    PBLobbyGateAddGlobalEntity_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return PBLobbyGateAddGlobalEntity_MsgID_IsValid(value);
  }
  static constexpr MsgID MsgID_MIN =
    PBLobbyGateAddGlobalEntity_MsgID_MsgID_MIN;
  static constexpr MsgID MsgID_MAX =
    PBLobbyGateAddGlobalEntity_MsgID_MsgID_MAX;
  static constexpr int MsgID_ARRAYSIZE =
    PBLobbyGateAddGlobalEntity_MsgID_MsgID_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  MsgID_descriptor() {
    return PBLobbyGateAddGlobalEntity_MsgID_descriptor();
  }
  template<typename T>
  static inline const std::string& MsgID_Name(T enum_t_value) {
    static_assert(::std::is_same<T, MsgID>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function MsgID_Name.");
    return PBLobbyGateAddGlobalEntity_MsgID_Name(enum_t_value);
  }
  static inline bool MsgID_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      MsgID* value) {
    return PBLobbyGateAddGlobalEntity_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kGlobalEntitiesFieldNumber = 3,
    kCmdIDFieldNumber = 1,
    kParamFieldNumber = 2,
  };
  // repeated .PBGlobalEntityInfo global_entities = 3;
  int global_entities_size() const;
  private:
  int _internal_global_entities_size() const;
  public:
  void clear_global_entities();
  ::PBGlobalEntityInfo* mutable_global_entities(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PBGlobalEntityInfo >*
      mutable_global_entities();
  private:
  const ::PBGlobalEntityInfo& _internal_global_entities(int index) const;
  ::PBGlobalEntityInfo* _internal_add_global_entities();
  public:
  const ::PBGlobalEntityInfo& global_entities(int index) const;
  ::PBGlobalEntityInfo* add_global_entities();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PBGlobalEntityInfo >&
      global_entities() const;

  // optional .PBSystemCmd cmdID = 1;
  bool has_cmdid() const;
  private:
  bool _internal_has_cmdid() const;
  public:
  void clear_cmdid();
  const ::PBSystemCmd& cmdid() const;
  PROTOBUF_NODISCARD ::PBSystemCmd* release_cmdid();
  ::PBSystemCmd* mutable_cmdid();
  void set_allocated_cmdid(::PBSystemCmd* cmdid);
  private:
  const ::PBSystemCmd& _internal_cmdid() const;
  ::PBSystemCmd* _internal_mutable_cmdid();
  public:
  void unsafe_arena_set_allocated_cmdid(
      ::PBSystemCmd* cmdid);
  ::PBSystemCmd* unsafe_arena_release_cmdid();

  // optional .PBSystemCmdType param = 2 [default = PB_LOBBYGATE_ADD_PUBLIC_ENTITY];
  bool has_param() const;
  private:
  bool _internal_has_param() const;
  public:
  void clear_param();
  ::PBSystemCmdType param() const;
  void set_param(::PBSystemCmdType value);
  private:
  ::PBSystemCmdType _internal_param() const;
  void _internal_set_param(::PBSystemCmdType value);
  public:

  // @@protoc_insertion_point(class_scope:PBLobbyGateAddGlobalEntity)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PBGlobalEntityInfo > global_entities_;
    ::PBSystemCmd* cmdid_;
    int param_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SystemInternalCmd_2eproto;
};
// -------------------------------------------------------------------

class PBLobbyGateForwardMsg2Entity final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PBLobbyGateForwardMsg2Entity) */ {
 public:
  inline PBLobbyGateForwardMsg2Entity() : PBLobbyGateForwardMsg2Entity(nullptr) {}
  ~PBLobbyGateForwardMsg2Entity() override;
  explicit PROTOBUF_CONSTEXPR PBLobbyGateForwardMsg2Entity(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PBLobbyGateForwardMsg2Entity(const PBLobbyGateForwardMsg2Entity& from);
  PBLobbyGateForwardMsg2Entity(PBLobbyGateForwardMsg2Entity&& from) noexcept
    : PBLobbyGateForwardMsg2Entity() {
    *this = ::std::move(from);
  }

  inline PBLobbyGateForwardMsg2Entity& operator=(const PBLobbyGateForwardMsg2Entity& from) {
    CopyFrom(from);
    return *this;
  }
  inline PBLobbyGateForwardMsg2Entity& operator=(PBLobbyGateForwardMsg2Entity&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PBLobbyGateForwardMsg2Entity& default_instance() {
    return *internal_default_instance();
  }
  static inline const PBLobbyGateForwardMsg2Entity* internal_default_instance() {
    return reinterpret_cast<const PBLobbyGateForwardMsg2Entity*>(
               &_PBLobbyGateForwardMsg2Entity_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(PBLobbyGateForwardMsg2Entity& a, PBLobbyGateForwardMsg2Entity& b) {
    a.Swap(&b);
  }
  inline void Swap(PBLobbyGateForwardMsg2Entity* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PBLobbyGateForwardMsg2Entity* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PBLobbyGateForwardMsg2Entity* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PBLobbyGateForwardMsg2Entity>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PBLobbyGateForwardMsg2Entity& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PBLobbyGateForwardMsg2Entity& from) {
    PBLobbyGateForwardMsg2Entity::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBLobbyGateForwardMsg2Entity* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PBLobbyGateForwardMsg2Entity";
  }
  protected:
  explicit PBLobbyGateForwardMsg2Entity(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef PBLobbyGateForwardMsg2Entity_MsgID MsgID;
  static constexpr MsgID ID =
    PBLobbyGateForwardMsg2Entity_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return PBLobbyGateForwardMsg2Entity_MsgID_IsValid(value);
  }
  static constexpr MsgID MsgID_MIN =
    PBLobbyGateForwardMsg2Entity_MsgID_MsgID_MIN;
  static constexpr MsgID MsgID_MAX =
    PBLobbyGateForwardMsg2Entity_MsgID_MsgID_MAX;
  static constexpr int MsgID_ARRAYSIZE =
    PBLobbyGateForwardMsg2Entity_MsgID_MsgID_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  MsgID_descriptor() {
    return PBLobbyGateForwardMsg2Entity_MsgID_descriptor();
  }
  template<typename T>
  static inline const std::string& MsgID_Name(T enum_t_value) {
    static_assert(::std::is_same<T, MsgID>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function MsgID_Name.");
    return PBLobbyGateForwardMsg2Entity_MsgID_Name(enum_t_value);
  }
  static inline bool MsgID_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      MsgID* value) {
    return PBLobbyGateForwardMsg2Entity_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kForwardDataFieldNumber = 5,
    kCmdIDFieldNumber = 1,
    kSenderMbFieldNumber = 7,
    kSubCmdIdFieldNumber = 3,
    kSubParamFieldNumber = 4,
    kTargetEidFieldNumber = 6,
    kSend2ClientFieldNumber = 8,
    kParamFieldNumber = 2,
  };
  // optional bytes forward_data = 5;
  bool has_forward_data() const;
  private:
  bool _internal_has_forward_data() const;
  public:
  void clear_forward_data();
  const std::string& forward_data() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_forward_data(ArgT0&& arg0, ArgT... args);
  std::string* mutable_forward_data();
  PROTOBUF_NODISCARD std::string* release_forward_data();
  void set_allocated_forward_data(std::string* forward_data);
  private:
  const std::string& _internal_forward_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_forward_data(const std::string& value);
  std::string* _internal_mutable_forward_data();
  public:

  // optional .PBSystemCmd cmdID = 1;
  bool has_cmdid() const;
  private:
  bool _internal_has_cmdid() const;
  public:
  void clear_cmdid();
  const ::PBSystemCmd& cmdid() const;
  PROTOBUF_NODISCARD ::PBSystemCmd* release_cmdid();
  ::PBSystemCmd* mutable_cmdid();
  void set_allocated_cmdid(::PBSystemCmd* cmdid);
  private:
  const ::PBSystemCmd& _internal_cmdid() const;
  ::PBSystemCmd* _internal_mutable_cmdid();
  public:
  void unsafe_arena_set_allocated_cmdid(
      ::PBSystemCmd* cmdid);
  ::PBSystemCmd* unsafe_arena_release_cmdid();

  // optional .PBEntityMailbox sender_mb = 7;
  bool has_sender_mb() const;
  private:
  bool _internal_has_sender_mb() const;
  public:
  void clear_sender_mb();
  const ::PBEntityMailbox& sender_mb() const;
  PROTOBUF_NODISCARD ::PBEntityMailbox* release_sender_mb();
  ::PBEntityMailbox* mutable_sender_mb();
  void set_allocated_sender_mb(::PBEntityMailbox* sender_mb);
  private:
  const ::PBEntityMailbox& _internal_sender_mb() const;
  ::PBEntityMailbox* _internal_mutable_sender_mb();
  public:
  void unsafe_arena_set_allocated_sender_mb(
      ::PBEntityMailbox* sender_mb);
  ::PBEntityMailbox* unsafe_arena_release_sender_mb();

  // optional uint32 sub_CmdId = 3;
  bool has_sub_cmdid() const;
  private:
  bool _internal_has_sub_cmdid() const;
  public:
  void clear_sub_cmdid();
  uint32_t sub_cmdid() const;
  void set_sub_cmdid(uint32_t value);
  private:
  uint32_t _internal_sub_cmdid() const;
  void _internal_set_sub_cmdid(uint32_t value);
  public:

  // optional uint32 sub_Param = 4;
  bool has_sub_param() const;
  private:
  bool _internal_has_sub_param() const;
  public:
  void clear_sub_param();
  uint32_t sub_param() const;
  void set_sub_param(uint32_t value);
  private:
  uint32_t _internal_sub_param() const;
  void _internal_set_sub_param(uint32_t value);
  public:

  // optional uint64 target_eid = 6;
  bool has_target_eid() const;
  private:
  bool _internal_has_target_eid() const;
  public:
  void clear_target_eid();
  uint64_t target_eid() const;
  void set_target_eid(uint64_t value);
  private:
  uint64_t _internal_target_eid() const;
  void _internal_set_target_eid(uint64_t value);
  public:

  // optional bool send2Client = 8;
  bool has_send2client() const;
  private:
  bool _internal_has_send2client() const;
  public:
  void clear_send2client();
  bool send2client() const;
  void set_send2client(bool value);
  private:
  bool _internal_send2client() const;
  void _internal_set_send2client(bool value);
  public:

  // optional .PBSystemCmdType param = 2 [default = PB_LOBBYGATE_SEND_MSG_2_PUBLIC_ENTITY];
  bool has_param() const;
  private:
  bool _internal_has_param() const;
  public:
  void clear_param();
  ::PBSystemCmdType param() const;
  void set_param(::PBSystemCmdType value);
  private:
  ::PBSystemCmdType _internal_param() const;
  void _internal_set_param(::PBSystemCmdType value);
  public:

  // @@protoc_insertion_point(class_scope:PBLobbyGateForwardMsg2Entity)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr forward_data_;
    ::PBSystemCmd* cmdid_;
    ::PBEntityMailbox* sender_mb_;
    uint32_t sub_cmdid_;
    uint32_t sub_param_;
    uint64_t target_eid_;
    bool send2client_;
    int param_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SystemInternalCmd_2eproto;
};
// -------------------------------------------------------------------

class PBLobbyGateCreateEntityAnyWhere final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PBLobbyGateCreateEntityAnyWhere) */ {
 public:
  inline PBLobbyGateCreateEntityAnyWhere() : PBLobbyGateCreateEntityAnyWhere(nullptr) {}
  ~PBLobbyGateCreateEntityAnyWhere() override;
  explicit PROTOBUF_CONSTEXPR PBLobbyGateCreateEntityAnyWhere(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PBLobbyGateCreateEntityAnyWhere(const PBLobbyGateCreateEntityAnyWhere& from);
  PBLobbyGateCreateEntityAnyWhere(PBLobbyGateCreateEntityAnyWhere&& from) noexcept
    : PBLobbyGateCreateEntityAnyWhere() {
    *this = ::std::move(from);
  }

  inline PBLobbyGateCreateEntityAnyWhere& operator=(const PBLobbyGateCreateEntityAnyWhere& from) {
    CopyFrom(from);
    return *this;
  }
  inline PBLobbyGateCreateEntityAnyWhere& operator=(PBLobbyGateCreateEntityAnyWhere&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PBLobbyGateCreateEntityAnyWhere& default_instance() {
    return *internal_default_instance();
  }
  static inline const PBLobbyGateCreateEntityAnyWhere* internal_default_instance() {
    return reinterpret_cast<const PBLobbyGateCreateEntityAnyWhere*>(
               &_PBLobbyGateCreateEntityAnyWhere_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(PBLobbyGateCreateEntityAnyWhere& a, PBLobbyGateCreateEntityAnyWhere& b) {
    a.Swap(&b);
  }
  inline void Swap(PBLobbyGateCreateEntityAnyWhere* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PBLobbyGateCreateEntityAnyWhere* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PBLobbyGateCreateEntityAnyWhere* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PBLobbyGateCreateEntityAnyWhere>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PBLobbyGateCreateEntityAnyWhere& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PBLobbyGateCreateEntityAnyWhere& from) {
    PBLobbyGateCreateEntityAnyWhere::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBLobbyGateCreateEntityAnyWhere* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PBLobbyGateCreateEntityAnyWhere";
  }
  protected:
  explicit PBLobbyGateCreateEntityAnyWhere(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef PBLobbyGateCreateEntityAnyWhere_MsgID MsgID;
  static constexpr MsgID ID =
    PBLobbyGateCreateEntityAnyWhere_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return PBLobbyGateCreateEntityAnyWhere_MsgID_IsValid(value);
  }
  static constexpr MsgID MsgID_MIN =
    PBLobbyGateCreateEntityAnyWhere_MsgID_MsgID_MIN;
  static constexpr MsgID MsgID_MAX =
    PBLobbyGateCreateEntityAnyWhere_MsgID_MsgID_MAX;
  static constexpr int MsgID_ARRAYSIZE =
    PBLobbyGateCreateEntityAnyWhere_MsgID_MsgID_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  MsgID_descriptor() {
    return PBLobbyGateCreateEntityAnyWhere_MsgID_descriptor();
  }
  template<typename T>
  static inline const std::string& MsgID_Name(T enum_t_value) {
    static_assert(::std::is_same<T, MsgID>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function MsgID_Name.");
    return PBLobbyGateCreateEntityAnyWhere_MsgID_Name(enum_t_value);
  }
  static inline bool MsgID_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      MsgID* value) {
    return PBLobbyGateCreateEntityAnyWhere_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kEntityNameFieldNumber = 3,
    kEntityDataFieldNumber = 4,
    kCmdIDFieldNumber = 1,
    kParamFieldNumber = 2,
  };
  // optional bytes entity_name = 3;
  bool has_entity_name() const;
  private:
  bool _internal_has_entity_name() const;
  public:
  void clear_entity_name();
  const std::string& entity_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_entity_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_entity_name();
  PROTOBUF_NODISCARD std::string* release_entity_name();
  void set_allocated_entity_name(std::string* entity_name);
  private:
  const std::string& _internal_entity_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_entity_name(const std::string& value);
  std::string* _internal_mutable_entity_name();
  public:

  // optional bytes entity_data = 4;
  bool has_entity_data() const;
  private:
  bool _internal_has_entity_data() const;
  public:
  void clear_entity_data();
  const std::string& entity_data() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_entity_data(ArgT0&& arg0, ArgT... args);
  std::string* mutable_entity_data();
  PROTOBUF_NODISCARD std::string* release_entity_data();
  void set_allocated_entity_data(std::string* entity_data);
  private:
  const std::string& _internal_entity_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_entity_data(const std::string& value);
  std::string* _internal_mutable_entity_data();
  public:

  // optional .PBSystemCmd cmdID = 1;
  bool has_cmdid() const;
  private:
  bool _internal_has_cmdid() const;
  public:
  void clear_cmdid();
  const ::PBSystemCmd& cmdid() const;
  PROTOBUF_NODISCARD ::PBSystemCmd* release_cmdid();
  ::PBSystemCmd* mutable_cmdid();
  void set_allocated_cmdid(::PBSystemCmd* cmdid);
  private:
  const ::PBSystemCmd& _internal_cmdid() const;
  ::PBSystemCmd* _internal_mutable_cmdid();
  public:
  void unsafe_arena_set_allocated_cmdid(
      ::PBSystemCmd* cmdid);
  ::PBSystemCmd* unsafe_arena_release_cmdid();

  // optional .PBSystemCmdType param = 2 [default = PB_LOBBYGATE_CREATE_ENTITY_ANYWHERE_REQ];
  bool has_param() const;
  private:
  bool _internal_has_param() const;
  public:
  void clear_param();
  ::PBSystemCmdType param() const;
  void set_param(::PBSystemCmdType value);
  private:
  ::PBSystemCmdType _internal_param() const;
  void _internal_set_param(::PBSystemCmdType value);
  public:

  // @@protoc_insertion_point(class_scope:PBLobbyGateCreateEntityAnyWhere)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr entity_name_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr entity_data_;
    ::PBSystemCmd* cmdid_;
    int param_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SystemInternalCmd_2eproto;
};
// -------------------------------------------------------------------

class PBLobbyGateCreateEntityFromCenter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PBLobbyGateCreateEntityFromCenter) */ {
 public:
  inline PBLobbyGateCreateEntityFromCenter() : PBLobbyGateCreateEntityFromCenter(nullptr) {}
  ~PBLobbyGateCreateEntityFromCenter() override;
  explicit PROTOBUF_CONSTEXPR PBLobbyGateCreateEntityFromCenter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PBLobbyGateCreateEntityFromCenter(const PBLobbyGateCreateEntityFromCenter& from);
  PBLobbyGateCreateEntityFromCenter(PBLobbyGateCreateEntityFromCenter&& from) noexcept
    : PBLobbyGateCreateEntityFromCenter() {
    *this = ::std::move(from);
  }

  inline PBLobbyGateCreateEntityFromCenter& operator=(const PBLobbyGateCreateEntityFromCenter& from) {
    CopyFrom(from);
    return *this;
  }
  inline PBLobbyGateCreateEntityFromCenter& operator=(PBLobbyGateCreateEntityFromCenter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PBLobbyGateCreateEntityFromCenter& default_instance() {
    return *internal_default_instance();
  }
  static inline const PBLobbyGateCreateEntityFromCenter* internal_default_instance() {
    return reinterpret_cast<const PBLobbyGateCreateEntityFromCenter*>(
               &_PBLobbyGateCreateEntityFromCenter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(PBLobbyGateCreateEntityFromCenter& a, PBLobbyGateCreateEntityFromCenter& b) {
    a.Swap(&b);
  }
  inline void Swap(PBLobbyGateCreateEntityFromCenter* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PBLobbyGateCreateEntityFromCenter* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PBLobbyGateCreateEntityFromCenter* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PBLobbyGateCreateEntityFromCenter>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PBLobbyGateCreateEntityFromCenter& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PBLobbyGateCreateEntityFromCenter& from) {
    PBLobbyGateCreateEntityFromCenter::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBLobbyGateCreateEntityFromCenter* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PBLobbyGateCreateEntityFromCenter";
  }
  protected:
  explicit PBLobbyGateCreateEntityFromCenter(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef PBLobbyGateCreateEntityFromCenter_MsgID MsgID;
  static constexpr MsgID ID =
    PBLobbyGateCreateEntityFromCenter_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return PBLobbyGateCreateEntityFromCenter_MsgID_IsValid(value);
  }
  static constexpr MsgID MsgID_MIN =
    PBLobbyGateCreateEntityFromCenter_MsgID_MsgID_MIN;
  static constexpr MsgID MsgID_MAX =
    PBLobbyGateCreateEntityFromCenter_MsgID_MsgID_MAX;
  static constexpr int MsgID_ARRAYSIZE =
    PBLobbyGateCreateEntityFromCenter_MsgID_MsgID_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  MsgID_descriptor() {
    return PBLobbyGateCreateEntityFromCenter_MsgID_descriptor();
  }
  template<typename T>
  static inline const std::string& MsgID_Name(T enum_t_value) {
    static_assert(::std::is_same<T, MsgID>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function MsgID_Name.");
    return PBLobbyGateCreateEntityFromCenter_MsgID_Name(enum_t_value);
  }
  static inline bool MsgID_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      MsgID* value) {
    return PBLobbyGateCreateEntityFromCenter_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kEntityNameFieldNumber = 3,
    kEntityDataFieldNumber = 4,
    kCmdIDFieldNumber = 1,
    kParamFieldNumber = 2,
  };
  // optional bytes entity_name = 3;
  bool has_entity_name() const;
  private:
  bool _internal_has_entity_name() const;
  public:
  void clear_entity_name();
  const std::string& entity_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_entity_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_entity_name();
  PROTOBUF_NODISCARD std::string* release_entity_name();
  void set_allocated_entity_name(std::string* entity_name);
  private:
  const std::string& _internal_entity_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_entity_name(const std::string& value);
  std::string* _internal_mutable_entity_name();
  public:

  // optional bytes entity_data = 4;
  bool has_entity_data() const;
  private:
  bool _internal_has_entity_data() const;
  public:
  void clear_entity_data();
  const std::string& entity_data() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_entity_data(ArgT0&& arg0, ArgT... args);
  std::string* mutable_entity_data();
  PROTOBUF_NODISCARD std::string* release_entity_data();
  void set_allocated_entity_data(std::string* entity_data);
  private:
  const std::string& _internal_entity_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_entity_data(const std::string& value);
  std::string* _internal_mutable_entity_data();
  public:

  // optional .PBSystemCmd cmdID = 1;
  bool has_cmdid() const;
  private:
  bool _internal_has_cmdid() const;
  public:
  void clear_cmdid();
  const ::PBSystemCmd& cmdid() const;
  PROTOBUF_NODISCARD ::PBSystemCmd* release_cmdid();
  ::PBSystemCmd* mutable_cmdid();
  void set_allocated_cmdid(::PBSystemCmd* cmdid);
  private:
  const ::PBSystemCmd& _internal_cmdid() const;
  ::PBSystemCmd* _internal_mutable_cmdid();
  public:
  void unsafe_arena_set_allocated_cmdid(
      ::PBSystemCmd* cmdid);
  ::PBSystemCmd* unsafe_arena_release_cmdid();

  // optional .PBSystemCmdType param = 2 [default = PB_LOBBYGATE_CREATE_ENTITY_FROM_LOBBYCENTER];
  bool has_param() const;
  private:
  bool _internal_has_param() const;
  public:
  void clear_param();
  ::PBSystemCmdType param() const;
  void set_param(::PBSystemCmdType value);
  private:
  ::PBSystemCmdType _internal_param() const;
  void _internal_set_param(::PBSystemCmdType value);
  public:

  // @@protoc_insertion_point(class_scope:PBLobbyGateCreateEntityFromCenter)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr entity_name_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr entity_data_;
    ::PBSystemCmd* cmdid_;
    int param_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SystemInternalCmd_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PBSystemCmd

// optional .CmdType cmd = 1 [default = PB_SYSTEM_INTERNAL_CMD];
inline bool PBSystemCmd::_internal_has_cmd() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PBSystemCmd::has_cmd() const {
  return _internal_has_cmd();
}
inline void PBSystemCmd::clear_cmd() {
  _impl_.cmd_ = 1;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CmdType PBSystemCmd::_internal_cmd() const {
  return static_cast< ::CmdType >(_impl_.cmd_);
}
inline ::CmdType PBSystemCmd::cmd() const {
  // @@protoc_insertion_point(field_get:PBSystemCmd.cmd)
  return _internal_cmd();
}
inline void PBSystemCmd::_internal_set_cmd(::CmdType value) {
  assert(::CmdType_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.cmd_ = value;
}
inline void PBSystemCmd::set_cmd(::CmdType value) {
  _internal_set_cmd(value);
  // @@protoc_insertion_point(field_set:PBSystemCmd.cmd)
}

// -------------------------------------------------------------------

// PBAllServerConnected

// optional .PBSystemCmd cmdID = 1;
inline bool PBAllServerConnected::_internal_has_cmdid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.cmdid_ != nullptr);
  return value;
}
inline bool PBAllServerConnected::has_cmdid() const {
  return _internal_has_cmdid();
}
inline void PBAllServerConnected::clear_cmdid() {
  if (_impl_.cmdid_ != nullptr) _impl_.cmdid_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::PBSystemCmd& PBAllServerConnected::_internal_cmdid() const {
  const ::PBSystemCmd* p = _impl_.cmdid_;
  return p != nullptr ? *p : reinterpret_cast<const ::PBSystemCmd&>(
      ::_PBSystemCmd_default_instance_);
}
inline const ::PBSystemCmd& PBAllServerConnected::cmdid() const {
  // @@protoc_insertion_point(field_get:PBAllServerConnected.cmdID)
  return _internal_cmdid();
}
inline void PBAllServerConnected::unsafe_arena_set_allocated_cmdid(
    ::PBSystemCmd* cmdid) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.cmdid_);
  }
  _impl_.cmdid_ = cmdid;
  if (cmdid) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBAllServerConnected.cmdID)
}
inline ::PBSystemCmd* PBAllServerConnected::release_cmdid() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::PBSystemCmd* temp = _impl_.cmdid_;
  _impl_.cmdid_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PBSystemCmd* PBAllServerConnected::unsafe_arena_release_cmdid() {
  // @@protoc_insertion_point(field_release:PBAllServerConnected.cmdID)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::PBSystemCmd* temp = _impl_.cmdid_;
  _impl_.cmdid_ = nullptr;
  return temp;
}
inline ::PBSystemCmd* PBAllServerConnected::_internal_mutable_cmdid() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.cmdid_ == nullptr) {
    auto* p = CreateMaybeMessage<::PBSystemCmd>(GetArenaForAllocation());
    _impl_.cmdid_ = p;
  }
  return _impl_.cmdid_;
}
inline ::PBSystemCmd* PBAllServerConnected::mutable_cmdid() {
  ::PBSystemCmd* _msg = _internal_mutable_cmdid();
  // @@protoc_insertion_point(field_mutable:PBAllServerConnected.cmdID)
  return _msg;
}
inline void PBAllServerConnected::set_allocated_cmdid(::PBSystemCmd* cmdid) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.cmdid_;
  }
  if (cmdid) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(cmdid);
    if (message_arena != submessage_arena) {
      cmdid = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, cmdid, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.cmdid_ = cmdid;
  // @@protoc_insertion_point(field_set_allocated:PBAllServerConnected.cmdID)
}

// optional .PBSystemCmdType param = 2 [default = PB_All_Server_Connected];
inline bool PBAllServerConnected::_internal_has_param() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool PBAllServerConnected::has_param() const {
  return _internal_has_param();
}
inline void PBAllServerConnected::clear_param() {
  _impl_.param_ = 7;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::PBSystemCmdType PBAllServerConnected::_internal_param() const {
  return static_cast< ::PBSystemCmdType >(_impl_.param_);
}
inline ::PBSystemCmdType PBAllServerConnected::param() const {
  // @@protoc_insertion_point(field_get:PBAllServerConnected.param)
  return _internal_param();
}
inline void PBAllServerConnected::_internal_set_param(::PBSystemCmdType value) {
  assert(::PBSystemCmdType_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.param_ = value;
}
inline void PBAllServerConnected::set_param(::PBSystemCmdType value) {
  _internal_set_param(value);
  // @@protoc_insertion_point(field_set:PBAllServerConnected.param)
}

// optional uint32 sguid = 3;
inline bool PBAllServerConnected::_internal_has_sguid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool PBAllServerConnected::has_sguid() const {
  return _internal_has_sguid();
}
inline void PBAllServerConnected::clear_sguid() {
  _impl_.sguid_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t PBAllServerConnected::_internal_sguid() const {
  return _impl_.sguid_;
}
inline uint32_t PBAllServerConnected::sguid() const {
  // @@protoc_insertion_point(field_get:PBAllServerConnected.sguid)
  return _internal_sguid();
}
inline void PBAllServerConnected::_internal_set_sguid(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.sguid_ = value;
}
inline void PBAllServerConnected::set_sguid(uint32_t value) {
  _internal_set_sguid(value);
  // @@protoc_insertion_point(field_set:PBAllServerConnected.sguid)
}

// -------------------------------------------------------------------

// PBAllServerStartNow

// optional .PBSystemCmd cmdID = 1;
inline bool PBAllServerStartNow::_internal_has_cmdid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.cmdid_ != nullptr);
  return value;
}
inline bool PBAllServerStartNow::has_cmdid() const {
  return _internal_has_cmdid();
}
inline void PBAllServerStartNow::clear_cmdid() {
  if (_impl_.cmdid_ != nullptr) _impl_.cmdid_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::PBSystemCmd& PBAllServerStartNow::_internal_cmdid() const {
  const ::PBSystemCmd* p = _impl_.cmdid_;
  return p != nullptr ? *p : reinterpret_cast<const ::PBSystemCmd&>(
      ::_PBSystemCmd_default_instance_);
}
inline const ::PBSystemCmd& PBAllServerStartNow::cmdid() const {
  // @@protoc_insertion_point(field_get:PBAllServerStartNow.cmdID)
  return _internal_cmdid();
}
inline void PBAllServerStartNow::unsafe_arena_set_allocated_cmdid(
    ::PBSystemCmd* cmdid) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.cmdid_);
  }
  _impl_.cmdid_ = cmdid;
  if (cmdid) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBAllServerStartNow.cmdID)
}
inline ::PBSystemCmd* PBAllServerStartNow::release_cmdid() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::PBSystemCmd* temp = _impl_.cmdid_;
  _impl_.cmdid_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PBSystemCmd* PBAllServerStartNow::unsafe_arena_release_cmdid() {
  // @@protoc_insertion_point(field_release:PBAllServerStartNow.cmdID)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::PBSystemCmd* temp = _impl_.cmdid_;
  _impl_.cmdid_ = nullptr;
  return temp;
}
inline ::PBSystemCmd* PBAllServerStartNow::_internal_mutable_cmdid() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.cmdid_ == nullptr) {
    auto* p = CreateMaybeMessage<::PBSystemCmd>(GetArenaForAllocation());
    _impl_.cmdid_ = p;
  }
  return _impl_.cmdid_;
}
inline ::PBSystemCmd* PBAllServerStartNow::mutable_cmdid() {
  ::PBSystemCmd* _msg = _internal_mutable_cmdid();
  // @@protoc_insertion_point(field_mutable:PBAllServerStartNow.cmdID)
  return _msg;
}
inline void PBAllServerStartNow::set_allocated_cmdid(::PBSystemCmd* cmdid) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.cmdid_;
  }
  if (cmdid) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(cmdid);
    if (message_arena != submessage_arena) {
      cmdid = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, cmdid, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.cmdid_ = cmdid;
  // @@protoc_insertion_point(field_set_allocated:PBAllServerStartNow.cmdID)
}

// optional .PBSystemCmdType param = 2 [default = PB_All_Server_StartNow];
inline bool PBAllServerStartNow::_internal_has_param() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool PBAllServerStartNow::has_param() const {
  return _internal_has_param();
}
inline void PBAllServerStartNow::clear_param() {
  _impl_.param_ = 8;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::PBSystemCmdType PBAllServerStartNow::_internal_param() const {
  return static_cast< ::PBSystemCmdType >(_impl_.param_);
}
inline ::PBSystemCmdType PBAllServerStartNow::param() const {
  // @@protoc_insertion_point(field_get:PBAllServerStartNow.param)
  return _internal_param();
}
inline void PBAllServerStartNow::_internal_set_param(::PBSystemCmdType value) {
  assert(::PBSystemCmdType_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.param_ = value;
}
inline void PBAllServerStartNow::set_param(::PBSystemCmdType value) {
  _internal_set_param(value);
  // @@protoc_insertion_point(field_set:PBAllServerStartNow.param)
}

// optional uint32 bStart = 3;
inline bool PBAllServerStartNow::_internal_has_bstart() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool PBAllServerStartNow::has_bstart() const {
  return _internal_has_bstart();
}
inline void PBAllServerStartNow::clear_bstart() {
  _impl_.bstart_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t PBAllServerStartNow::_internal_bstart() const {
  return _impl_.bstart_;
}
inline uint32_t PBAllServerStartNow::bstart() const {
  // @@protoc_insertion_point(field_get:PBAllServerStartNow.bStart)
  return _internal_bstart();
}
inline void PBAllServerStartNow::_internal_set_bstart(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.bstart_ = value;
}
inline void PBAllServerStartNow::set_bstart(uint32_t value) {
  _internal_set_bstart(value);
  // @@protoc_insertion_point(field_set:PBAllServerStartNow.bStart)
}

// -------------------------------------------------------------------

// PBLobbyGateRegisterGlobalEntityReq

// optional .PBSystemCmd cmdID = 1;
inline bool PBLobbyGateRegisterGlobalEntityReq::_internal_has_cmdid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.cmdid_ != nullptr);
  return value;
}
inline bool PBLobbyGateRegisterGlobalEntityReq::has_cmdid() const {
  return _internal_has_cmdid();
}
inline void PBLobbyGateRegisterGlobalEntityReq::clear_cmdid() {
  if (_impl_.cmdid_ != nullptr) _impl_.cmdid_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::PBSystemCmd& PBLobbyGateRegisterGlobalEntityReq::_internal_cmdid() const {
  const ::PBSystemCmd* p = _impl_.cmdid_;
  return p != nullptr ? *p : reinterpret_cast<const ::PBSystemCmd&>(
      ::_PBSystemCmd_default_instance_);
}
inline const ::PBSystemCmd& PBLobbyGateRegisterGlobalEntityReq::cmdid() const {
  // @@protoc_insertion_point(field_get:PBLobbyGateRegisterGlobalEntityReq.cmdID)
  return _internal_cmdid();
}
inline void PBLobbyGateRegisterGlobalEntityReq::unsafe_arena_set_allocated_cmdid(
    ::PBSystemCmd* cmdid) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.cmdid_);
  }
  _impl_.cmdid_ = cmdid;
  if (cmdid) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBLobbyGateRegisterGlobalEntityReq.cmdID)
}
inline ::PBSystemCmd* PBLobbyGateRegisterGlobalEntityReq::release_cmdid() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::PBSystemCmd* temp = _impl_.cmdid_;
  _impl_.cmdid_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PBSystemCmd* PBLobbyGateRegisterGlobalEntityReq::unsafe_arena_release_cmdid() {
  // @@protoc_insertion_point(field_release:PBLobbyGateRegisterGlobalEntityReq.cmdID)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::PBSystemCmd* temp = _impl_.cmdid_;
  _impl_.cmdid_ = nullptr;
  return temp;
}
inline ::PBSystemCmd* PBLobbyGateRegisterGlobalEntityReq::_internal_mutable_cmdid() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.cmdid_ == nullptr) {
    auto* p = CreateMaybeMessage<::PBSystemCmd>(GetArenaForAllocation());
    _impl_.cmdid_ = p;
  }
  return _impl_.cmdid_;
}
inline ::PBSystemCmd* PBLobbyGateRegisterGlobalEntityReq::mutable_cmdid() {
  ::PBSystemCmd* _msg = _internal_mutable_cmdid();
  // @@protoc_insertion_point(field_mutable:PBLobbyGateRegisterGlobalEntityReq.cmdID)
  return _msg;
}
inline void PBLobbyGateRegisterGlobalEntityReq::set_allocated_cmdid(::PBSystemCmd* cmdid) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.cmdid_;
  }
  if (cmdid) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(cmdid);
    if (message_arena != submessage_arena) {
      cmdid = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, cmdid, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.cmdid_ = cmdid;
  // @@protoc_insertion_point(field_set_allocated:PBLobbyGateRegisterGlobalEntityReq.cmdID)
}

// optional .PBSystemCmdType param = 2 [default = PB_LOBBYGATE_REGISTER_PUBLIC_ENTITY_REQ];
inline bool PBLobbyGateRegisterGlobalEntityReq::_internal_has_param() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool PBLobbyGateRegisterGlobalEntityReq::has_param() const {
  return _internal_has_param();
}
inline void PBLobbyGateRegisterGlobalEntityReq::clear_param() {
  _impl_.param_ = 1;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::PBSystemCmdType PBLobbyGateRegisterGlobalEntityReq::_internal_param() const {
  return static_cast< ::PBSystemCmdType >(_impl_.param_);
}
inline ::PBSystemCmdType PBLobbyGateRegisterGlobalEntityReq::param() const {
  // @@protoc_insertion_point(field_get:PBLobbyGateRegisterGlobalEntityReq.param)
  return _internal_param();
}
inline void PBLobbyGateRegisterGlobalEntityReq::_internal_set_param(::PBSystemCmdType value) {
  assert(::PBSystemCmdType_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.param_ = value;
}
inline void PBLobbyGateRegisterGlobalEntityReq::set_param(::PBSystemCmdType value) {
  _internal_set_param(value);
  // @@protoc_insertion_point(field_set:PBLobbyGateRegisterGlobalEntityReq.param)
}

// optional bytes entity_name = 3;
inline bool PBLobbyGateRegisterGlobalEntityReq::_internal_has_entity_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PBLobbyGateRegisterGlobalEntityReq::has_entity_name() const {
  return _internal_has_entity_name();
}
inline void PBLobbyGateRegisterGlobalEntityReq::clear_entity_name() {
  _impl_.entity_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& PBLobbyGateRegisterGlobalEntityReq::entity_name() const {
  // @@protoc_insertion_point(field_get:PBLobbyGateRegisterGlobalEntityReq.entity_name)
  return _internal_entity_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void PBLobbyGateRegisterGlobalEntityReq::set_entity_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.entity_name_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:PBLobbyGateRegisterGlobalEntityReq.entity_name)
}
inline std::string* PBLobbyGateRegisterGlobalEntityReq::mutable_entity_name() {
  std::string* _s = _internal_mutable_entity_name();
  // @@protoc_insertion_point(field_mutable:PBLobbyGateRegisterGlobalEntityReq.entity_name)
  return _s;
}
inline const std::string& PBLobbyGateRegisterGlobalEntityReq::_internal_entity_name() const {
  return _impl_.entity_name_.Get();
}
inline void PBLobbyGateRegisterGlobalEntityReq::_internal_set_entity_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.entity_name_.Set(value, GetArenaForAllocation());
}
inline std::string* PBLobbyGateRegisterGlobalEntityReq::_internal_mutable_entity_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.entity_name_.Mutable(GetArenaForAllocation());
}
inline std::string* PBLobbyGateRegisterGlobalEntityReq::release_entity_name() {
  // @@protoc_insertion_point(field_release:PBLobbyGateRegisterGlobalEntityReq.entity_name)
  if (!_internal_has_entity_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.entity_name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.entity_name_.IsDefault()) {
    _impl_.entity_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void PBLobbyGateRegisterGlobalEntityReq::set_allocated_entity_name(std::string* entity_name) {
  if (entity_name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.entity_name_.SetAllocated(entity_name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.entity_name_.IsDefault()) {
    _impl_.entity_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:PBLobbyGateRegisterGlobalEntityReq.entity_name)
}

// optional .PBEntityMailbox entity_mb = 4;
inline bool PBLobbyGateRegisterGlobalEntityReq::_internal_has_entity_mb() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.entity_mb_ != nullptr);
  return value;
}
inline bool PBLobbyGateRegisterGlobalEntityReq::has_entity_mb() const {
  return _internal_has_entity_mb();
}
inline const ::PBEntityMailbox& PBLobbyGateRegisterGlobalEntityReq::_internal_entity_mb() const {
  const ::PBEntityMailbox* p = _impl_.entity_mb_;
  return p != nullptr ? *p : reinterpret_cast<const ::PBEntityMailbox&>(
      ::_PBEntityMailbox_default_instance_);
}
inline const ::PBEntityMailbox& PBLobbyGateRegisterGlobalEntityReq::entity_mb() const {
  // @@protoc_insertion_point(field_get:PBLobbyGateRegisterGlobalEntityReq.entity_mb)
  return _internal_entity_mb();
}
inline void PBLobbyGateRegisterGlobalEntityReq::unsafe_arena_set_allocated_entity_mb(
    ::PBEntityMailbox* entity_mb) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.entity_mb_);
  }
  _impl_.entity_mb_ = entity_mb;
  if (entity_mb) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBLobbyGateRegisterGlobalEntityReq.entity_mb)
}
inline ::PBEntityMailbox* PBLobbyGateRegisterGlobalEntityReq::release_entity_mb() {
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::PBEntityMailbox* temp = _impl_.entity_mb_;
  _impl_.entity_mb_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PBEntityMailbox* PBLobbyGateRegisterGlobalEntityReq::unsafe_arena_release_entity_mb() {
  // @@protoc_insertion_point(field_release:PBLobbyGateRegisterGlobalEntityReq.entity_mb)
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::PBEntityMailbox* temp = _impl_.entity_mb_;
  _impl_.entity_mb_ = nullptr;
  return temp;
}
inline ::PBEntityMailbox* PBLobbyGateRegisterGlobalEntityReq::_internal_mutable_entity_mb() {
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.entity_mb_ == nullptr) {
    auto* p = CreateMaybeMessage<::PBEntityMailbox>(GetArenaForAllocation());
    _impl_.entity_mb_ = p;
  }
  return _impl_.entity_mb_;
}
inline ::PBEntityMailbox* PBLobbyGateRegisterGlobalEntityReq::mutable_entity_mb() {
  ::PBEntityMailbox* _msg = _internal_mutable_entity_mb();
  // @@protoc_insertion_point(field_mutable:PBLobbyGateRegisterGlobalEntityReq.entity_mb)
  return _msg;
}
inline void PBLobbyGateRegisterGlobalEntityReq::set_allocated_entity_mb(::PBEntityMailbox* entity_mb) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.entity_mb_);
  }
  if (entity_mb) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(entity_mb));
    if (message_arena != submessage_arena) {
      entity_mb = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, entity_mb, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.entity_mb_ = entity_mb;
  // @@protoc_insertion_point(field_set_allocated:PBLobbyGateRegisterGlobalEntityReq.entity_mb)
}

// -------------------------------------------------------------------

// PBLobbyGateRegisterGlobalEntityRsp

// optional .PBSystemCmd cmdID = 1;
inline bool PBLobbyGateRegisterGlobalEntityRsp::_internal_has_cmdid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.cmdid_ != nullptr);
  return value;
}
inline bool PBLobbyGateRegisterGlobalEntityRsp::has_cmdid() const {
  return _internal_has_cmdid();
}
inline void PBLobbyGateRegisterGlobalEntityRsp::clear_cmdid() {
  if (_impl_.cmdid_ != nullptr) _impl_.cmdid_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::PBSystemCmd& PBLobbyGateRegisterGlobalEntityRsp::_internal_cmdid() const {
  const ::PBSystemCmd* p = _impl_.cmdid_;
  return p != nullptr ? *p : reinterpret_cast<const ::PBSystemCmd&>(
      ::_PBSystemCmd_default_instance_);
}
inline const ::PBSystemCmd& PBLobbyGateRegisterGlobalEntityRsp::cmdid() const {
  // @@protoc_insertion_point(field_get:PBLobbyGateRegisterGlobalEntityRsp.cmdID)
  return _internal_cmdid();
}
inline void PBLobbyGateRegisterGlobalEntityRsp::unsafe_arena_set_allocated_cmdid(
    ::PBSystemCmd* cmdid) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.cmdid_);
  }
  _impl_.cmdid_ = cmdid;
  if (cmdid) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBLobbyGateRegisterGlobalEntityRsp.cmdID)
}
inline ::PBSystemCmd* PBLobbyGateRegisterGlobalEntityRsp::release_cmdid() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::PBSystemCmd* temp = _impl_.cmdid_;
  _impl_.cmdid_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PBSystemCmd* PBLobbyGateRegisterGlobalEntityRsp::unsafe_arena_release_cmdid() {
  // @@protoc_insertion_point(field_release:PBLobbyGateRegisterGlobalEntityRsp.cmdID)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::PBSystemCmd* temp = _impl_.cmdid_;
  _impl_.cmdid_ = nullptr;
  return temp;
}
inline ::PBSystemCmd* PBLobbyGateRegisterGlobalEntityRsp::_internal_mutable_cmdid() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.cmdid_ == nullptr) {
    auto* p = CreateMaybeMessage<::PBSystemCmd>(GetArenaForAllocation());
    _impl_.cmdid_ = p;
  }
  return _impl_.cmdid_;
}
inline ::PBSystemCmd* PBLobbyGateRegisterGlobalEntityRsp::mutable_cmdid() {
  ::PBSystemCmd* _msg = _internal_mutable_cmdid();
  // @@protoc_insertion_point(field_mutable:PBLobbyGateRegisterGlobalEntityRsp.cmdID)
  return _msg;
}
inline void PBLobbyGateRegisterGlobalEntityRsp::set_allocated_cmdid(::PBSystemCmd* cmdid) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.cmdid_;
  }
  if (cmdid) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(cmdid);
    if (message_arena != submessage_arena) {
      cmdid = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, cmdid, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.cmdid_ = cmdid;
  // @@protoc_insertion_point(field_set_allocated:PBLobbyGateRegisterGlobalEntityRsp.cmdID)
}

// optional .PBSystemCmdType param = 2 [default = PB_LOBBYGATE_REGISTER_PUBLIC_ENTITY_RSP];
inline bool PBLobbyGateRegisterGlobalEntityRsp::_internal_has_param() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool PBLobbyGateRegisterGlobalEntityRsp::has_param() const {
  return _internal_has_param();
}
inline void PBLobbyGateRegisterGlobalEntityRsp::clear_param() {
  _impl_.param_ = 2;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::PBSystemCmdType PBLobbyGateRegisterGlobalEntityRsp::_internal_param() const {
  return static_cast< ::PBSystemCmdType >(_impl_.param_);
}
inline ::PBSystemCmdType PBLobbyGateRegisterGlobalEntityRsp::param() const {
  // @@protoc_insertion_point(field_get:PBLobbyGateRegisterGlobalEntityRsp.param)
  return _internal_param();
}
inline void PBLobbyGateRegisterGlobalEntityRsp::_internal_set_param(::PBSystemCmdType value) {
  assert(::PBSystemCmdType_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.param_ = value;
}
inline void PBLobbyGateRegisterGlobalEntityRsp::set_param(::PBSystemCmdType value) {
  _internal_set_param(value);
  // @@protoc_insertion_point(field_set:PBLobbyGateRegisterGlobalEntityRsp.param)
}

// optional bytes entity_name = 3;
inline bool PBLobbyGateRegisterGlobalEntityRsp::_internal_has_entity_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PBLobbyGateRegisterGlobalEntityRsp::has_entity_name() const {
  return _internal_has_entity_name();
}
inline void PBLobbyGateRegisterGlobalEntityRsp::clear_entity_name() {
  _impl_.entity_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& PBLobbyGateRegisterGlobalEntityRsp::entity_name() const {
  // @@protoc_insertion_point(field_get:PBLobbyGateRegisterGlobalEntityRsp.entity_name)
  return _internal_entity_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void PBLobbyGateRegisterGlobalEntityRsp::set_entity_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.entity_name_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:PBLobbyGateRegisterGlobalEntityRsp.entity_name)
}
inline std::string* PBLobbyGateRegisterGlobalEntityRsp::mutable_entity_name() {
  std::string* _s = _internal_mutable_entity_name();
  // @@protoc_insertion_point(field_mutable:PBLobbyGateRegisterGlobalEntityRsp.entity_name)
  return _s;
}
inline const std::string& PBLobbyGateRegisterGlobalEntityRsp::_internal_entity_name() const {
  return _impl_.entity_name_.Get();
}
inline void PBLobbyGateRegisterGlobalEntityRsp::_internal_set_entity_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.entity_name_.Set(value, GetArenaForAllocation());
}
inline std::string* PBLobbyGateRegisterGlobalEntityRsp::_internal_mutable_entity_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.entity_name_.Mutable(GetArenaForAllocation());
}
inline std::string* PBLobbyGateRegisterGlobalEntityRsp::release_entity_name() {
  // @@protoc_insertion_point(field_release:PBLobbyGateRegisterGlobalEntityRsp.entity_name)
  if (!_internal_has_entity_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.entity_name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.entity_name_.IsDefault()) {
    _impl_.entity_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void PBLobbyGateRegisterGlobalEntityRsp::set_allocated_entity_name(std::string* entity_name) {
  if (entity_name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.entity_name_.SetAllocated(entity_name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.entity_name_.IsDefault()) {
    _impl_.entity_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:PBLobbyGateRegisterGlobalEntityRsp.entity_name)
}

// optional .PBEntityMailbox entity_mb = 4;
inline bool PBLobbyGateRegisterGlobalEntityRsp::_internal_has_entity_mb() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.entity_mb_ != nullptr);
  return value;
}
inline bool PBLobbyGateRegisterGlobalEntityRsp::has_entity_mb() const {
  return _internal_has_entity_mb();
}
inline const ::PBEntityMailbox& PBLobbyGateRegisterGlobalEntityRsp::_internal_entity_mb() const {
  const ::PBEntityMailbox* p = _impl_.entity_mb_;
  return p != nullptr ? *p : reinterpret_cast<const ::PBEntityMailbox&>(
      ::_PBEntityMailbox_default_instance_);
}
inline const ::PBEntityMailbox& PBLobbyGateRegisterGlobalEntityRsp::entity_mb() const {
  // @@protoc_insertion_point(field_get:PBLobbyGateRegisterGlobalEntityRsp.entity_mb)
  return _internal_entity_mb();
}
inline void PBLobbyGateRegisterGlobalEntityRsp::unsafe_arena_set_allocated_entity_mb(
    ::PBEntityMailbox* entity_mb) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.entity_mb_);
  }
  _impl_.entity_mb_ = entity_mb;
  if (entity_mb) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBLobbyGateRegisterGlobalEntityRsp.entity_mb)
}
inline ::PBEntityMailbox* PBLobbyGateRegisterGlobalEntityRsp::release_entity_mb() {
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::PBEntityMailbox* temp = _impl_.entity_mb_;
  _impl_.entity_mb_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PBEntityMailbox* PBLobbyGateRegisterGlobalEntityRsp::unsafe_arena_release_entity_mb() {
  // @@protoc_insertion_point(field_release:PBLobbyGateRegisterGlobalEntityRsp.entity_mb)
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::PBEntityMailbox* temp = _impl_.entity_mb_;
  _impl_.entity_mb_ = nullptr;
  return temp;
}
inline ::PBEntityMailbox* PBLobbyGateRegisterGlobalEntityRsp::_internal_mutable_entity_mb() {
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.entity_mb_ == nullptr) {
    auto* p = CreateMaybeMessage<::PBEntityMailbox>(GetArenaForAllocation());
    _impl_.entity_mb_ = p;
  }
  return _impl_.entity_mb_;
}
inline ::PBEntityMailbox* PBLobbyGateRegisterGlobalEntityRsp::mutable_entity_mb() {
  ::PBEntityMailbox* _msg = _internal_mutable_entity_mb();
  // @@protoc_insertion_point(field_mutable:PBLobbyGateRegisterGlobalEntityRsp.entity_mb)
  return _msg;
}
inline void PBLobbyGateRegisterGlobalEntityRsp::set_allocated_entity_mb(::PBEntityMailbox* entity_mb) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.entity_mb_);
  }
  if (entity_mb) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(entity_mb));
    if (message_arena != submessage_arena) {
      entity_mb = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, entity_mb, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.entity_mb_ = entity_mb;
  // @@protoc_insertion_point(field_set_allocated:PBLobbyGateRegisterGlobalEntityRsp.entity_mb)
}

// optional uint32 code = 5;
inline bool PBLobbyGateRegisterGlobalEntityRsp::_internal_has_code() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool PBLobbyGateRegisterGlobalEntityRsp::has_code() const {
  return _internal_has_code();
}
inline void PBLobbyGateRegisterGlobalEntityRsp::clear_code() {
  _impl_.code_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t PBLobbyGateRegisterGlobalEntityRsp::_internal_code() const {
  return _impl_.code_;
}
inline uint32_t PBLobbyGateRegisterGlobalEntityRsp::code() const {
  // @@protoc_insertion_point(field_get:PBLobbyGateRegisterGlobalEntityRsp.code)
  return _internal_code();
}
inline void PBLobbyGateRegisterGlobalEntityRsp::_internal_set_code(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.code_ = value;
}
inline void PBLobbyGateRegisterGlobalEntityRsp::set_code(uint32_t value) {
  _internal_set_code(value);
  // @@protoc_insertion_point(field_set:PBLobbyGateRegisterGlobalEntityRsp.code)
}

// -------------------------------------------------------------------

// PBGlobalEntityInfo

// optional bytes entity_name = 1;
inline bool PBGlobalEntityInfo::_internal_has_entity_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PBGlobalEntityInfo::has_entity_name() const {
  return _internal_has_entity_name();
}
inline void PBGlobalEntityInfo::clear_entity_name() {
  _impl_.entity_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& PBGlobalEntityInfo::entity_name() const {
  // @@protoc_insertion_point(field_get:PBGlobalEntityInfo.entity_name)
  return _internal_entity_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void PBGlobalEntityInfo::set_entity_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.entity_name_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:PBGlobalEntityInfo.entity_name)
}
inline std::string* PBGlobalEntityInfo::mutable_entity_name() {
  std::string* _s = _internal_mutable_entity_name();
  // @@protoc_insertion_point(field_mutable:PBGlobalEntityInfo.entity_name)
  return _s;
}
inline const std::string& PBGlobalEntityInfo::_internal_entity_name() const {
  return _impl_.entity_name_.Get();
}
inline void PBGlobalEntityInfo::_internal_set_entity_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.entity_name_.Set(value, GetArenaForAllocation());
}
inline std::string* PBGlobalEntityInfo::_internal_mutable_entity_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.entity_name_.Mutable(GetArenaForAllocation());
}
inline std::string* PBGlobalEntityInfo::release_entity_name() {
  // @@protoc_insertion_point(field_release:PBGlobalEntityInfo.entity_name)
  if (!_internal_has_entity_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.entity_name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.entity_name_.IsDefault()) {
    _impl_.entity_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void PBGlobalEntityInfo::set_allocated_entity_name(std::string* entity_name) {
  if (entity_name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.entity_name_.SetAllocated(entity_name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.entity_name_.IsDefault()) {
    _impl_.entity_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:PBGlobalEntityInfo.entity_name)
}

// optional .PBEntityMailbox entity_mb = 2;
inline bool PBGlobalEntityInfo::_internal_has_entity_mb() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.entity_mb_ != nullptr);
  return value;
}
inline bool PBGlobalEntityInfo::has_entity_mb() const {
  return _internal_has_entity_mb();
}
inline const ::PBEntityMailbox& PBGlobalEntityInfo::_internal_entity_mb() const {
  const ::PBEntityMailbox* p = _impl_.entity_mb_;
  return p != nullptr ? *p : reinterpret_cast<const ::PBEntityMailbox&>(
      ::_PBEntityMailbox_default_instance_);
}
inline const ::PBEntityMailbox& PBGlobalEntityInfo::entity_mb() const {
  // @@protoc_insertion_point(field_get:PBGlobalEntityInfo.entity_mb)
  return _internal_entity_mb();
}
inline void PBGlobalEntityInfo::unsafe_arena_set_allocated_entity_mb(
    ::PBEntityMailbox* entity_mb) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.entity_mb_);
  }
  _impl_.entity_mb_ = entity_mb;
  if (entity_mb) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBGlobalEntityInfo.entity_mb)
}
inline ::PBEntityMailbox* PBGlobalEntityInfo::release_entity_mb() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::PBEntityMailbox* temp = _impl_.entity_mb_;
  _impl_.entity_mb_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PBEntityMailbox* PBGlobalEntityInfo::unsafe_arena_release_entity_mb() {
  // @@protoc_insertion_point(field_release:PBGlobalEntityInfo.entity_mb)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::PBEntityMailbox* temp = _impl_.entity_mb_;
  _impl_.entity_mb_ = nullptr;
  return temp;
}
inline ::PBEntityMailbox* PBGlobalEntityInfo::_internal_mutable_entity_mb() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.entity_mb_ == nullptr) {
    auto* p = CreateMaybeMessage<::PBEntityMailbox>(GetArenaForAllocation());
    _impl_.entity_mb_ = p;
  }
  return _impl_.entity_mb_;
}
inline ::PBEntityMailbox* PBGlobalEntityInfo::mutable_entity_mb() {
  ::PBEntityMailbox* _msg = _internal_mutable_entity_mb();
  // @@protoc_insertion_point(field_mutable:PBGlobalEntityInfo.entity_mb)
  return _msg;
}
inline void PBGlobalEntityInfo::set_allocated_entity_mb(::PBEntityMailbox* entity_mb) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.entity_mb_);
  }
  if (entity_mb) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(entity_mb));
    if (message_arena != submessage_arena) {
      entity_mb = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, entity_mb, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.entity_mb_ = entity_mb;
  // @@protoc_insertion_point(field_set_allocated:PBGlobalEntityInfo.entity_mb)
}

// -------------------------------------------------------------------

// PBLobbyGateAddGlobalEntity

// optional .PBSystemCmd cmdID = 1;
inline bool PBLobbyGateAddGlobalEntity::_internal_has_cmdid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.cmdid_ != nullptr);
  return value;
}
inline bool PBLobbyGateAddGlobalEntity::has_cmdid() const {
  return _internal_has_cmdid();
}
inline void PBLobbyGateAddGlobalEntity::clear_cmdid() {
  if (_impl_.cmdid_ != nullptr) _impl_.cmdid_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::PBSystemCmd& PBLobbyGateAddGlobalEntity::_internal_cmdid() const {
  const ::PBSystemCmd* p = _impl_.cmdid_;
  return p != nullptr ? *p : reinterpret_cast<const ::PBSystemCmd&>(
      ::_PBSystemCmd_default_instance_);
}
inline const ::PBSystemCmd& PBLobbyGateAddGlobalEntity::cmdid() const {
  // @@protoc_insertion_point(field_get:PBLobbyGateAddGlobalEntity.cmdID)
  return _internal_cmdid();
}
inline void PBLobbyGateAddGlobalEntity::unsafe_arena_set_allocated_cmdid(
    ::PBSystemCmd* cmdid) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.cmdid_);
  }
  _impl_.cmdid_ = cmdid;
  if (cmdid) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBLobbyGateAddGlobalEntity.cmdID)
}
inline ::PBSystemCmd* PBLobbyGateAddGlobalEntity::release_cmdid() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::PBSystemCmd* temp = _impl_.cmdid_;
  _impl_.cmdid_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PBSystemCmd* PBLobbyGateAddGlobalEntity::unsafe_arena_release_cmdid() {
  // @@protoc_insertion_point(field_release:PBLobbyGateAddGlobalEntity.cmdID)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::PBSystemCmd* temp = _impl_.cmdid_;
  _impl_.cmdid_ = nullptr;
  return temp;
}
inline ::PBSystemCmd* PBLobbyGateAddGlobalEntity::_internal_mutable_cmdid() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.cmdid_ == nullptr) {
    auto* p = CreateMaybeMessage<::PBSystemCmd>(GetArenaForAllocation());
    _impl_.cmdid_ = p;
  }
  return _impl_.cmdid_;
}
inline ::PBSystemCmd* PBLobbyGateAddGlobalEntity::mutable_cmdid() {
  ::PBSystemCmd* _msg = _internal_mutable_cmdid();
  // @@protoc_insertion_point(field_mutable:PBLobbyGateAddGlobalEntity.cmdID)
  return _msg;
}
inline void PBLobbyGateAddGlobalEntity::set_allocated_cmdid(::PBSystemCmd* cmdid) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.cmdid_;
  }
  if (cmdid) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(cmdid);
    if (message_arena != submessage_arena) {
      cmdid = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, cmdid, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.cmdid_ = cmdid;
  // @@protoc_insertion_point(field_set_allocated:PBLobbyGateAddGlobalEntity.cmdID)
}

// optional .PBSystemCmdType param = 2 [default = PB_LOBBYGATE_ADD_PUBLIC_ENTITY];
inline bool PBLobbyGateAddGlobalEntity::_internal_has_param() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool PBLobbyGateAddGlobalEntity::has_param() const {
  return _internal_has_param();
}
inline void PBLobbyGateAddGlobalEntity::clear_param() {
  _impl_.param_ = 3;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::PBSystemCmdType PBLobbyGateAddGlobalEntity::_internal_param() const {
  return static_cast< ::PBSystemCmdType >(_impl_.param_);
}
inline ::PBSystemCmdType PBLobbyGateAddGlobalEntity::param() const {
  // @@protoc_insertion_point(field_get:PBLobbyGateAddGlobalEntity.param)
  return _internal_param();
}
inline void PBLobbyGateAddGlobalEntity::_internal_set_param(::PBSystemCmdType value) {
  assert(::PBSystemCmdType_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.param_ = value;
}
inline void PBLobbyGateAddGlobalEntity::set_param(::PBSystemCmdType value) {
  _internal_set_param(value);
  // @@protoc_insertion_point(field_set:PBLobbyGateAddGlobalEntity.param)
}

// repeated .PBGlobalEntityInfo global_entities = 3;
inline int PBLobbyGateAddGlobalEntity::_internal_global_entities_size() const {
  return _impl_.global_entities_.size();
}
inline int PBLobbyGateAddGlobalEntity::global_entities_size() const {
  return _internal_global_entities_size();
}
inline void PBLobbyGateAddGlobalEntity::clear_global_entities() {
  _impl_.global_entities_.Clear();
}
inline ::PBGlobalEntityInfo* PBLobbyGateAddGlobalEntity::mutable_global_entities(int index) {
  // @@protoc_insertion_point(field_mutable:PBLobbyGateAddGlobalEntity.global_entities)
  return _impl_.global_entities_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PBGlobalEntityInfo >*
PBLobbyGateAddGlobalEntity::mutable_global_entities() {
  // @@protoc_insertion_point(field_mutable_list:PBLobbyGateAddGlobalEntity.global_entities)
  return &_impl_.global_entities_;
}
inline const ::PBGlobalEntityInfo& PBLobbyGateAddGlobalEntity::_internal_global_entities(int index) const {
  return _impl_.global_entities_.Get(index);
}
inline const ::PBGlobalEntityInfo& PBLobbyGateAddGlobalEntity::global_entities(int index) const {
  // @@protoc_insertion_point(field_get:PBLobbyGateAddGlobalEntity.global_entities)
  return _internal_global_entities(index);
}
inline ::PBGlobalEntityInfo* PBLobbyGateAddGlobalEntity::_internal_add_global_entities() {
  return _impl_.global_entities_.Add();
}
inline ::PBGlobalEntityInfo* PBLobbyGateAddGlobalEntity::add_global_entities() {
  ::PBGlobalEntityInfo* _add = _internal_add_global_entities();
  // @@protoc_insertion_point(field_add:PBLobbyGateAddGlobalEntity.global_entities)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PBGlobalEntityInfo >&
PBLobbyGateAddGlobalEntity::global_entities() const {
  // @@protoc_insertion_point(field_list:PBLobbyGateAddGlobalEntity.global_entities)
  return _impl_.global_entities_;
}

// -------------------------------------------------------------------

// PBLobbyGateForwardMsg2Entity

// optional .PBSystemCmd cmdID = 1;
inline bool PBLobbyGateForwardMsg2Entity::_internal_has_cmdid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.cmdid_ != nullptr);
  return value;
}
inline bool PBLobbyGateForwardMsg2Entity::has_cmdid() const {
  return _internal_has_cmdid();
}
inline void PBLobbyGateForwardMsg2Entity::clear_cmdid() {
  if (_impl_.cmdid_ != nullptr) _impl_.cmdid_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::PBSystemCmd& PBLobbyGateForwardMsg2Entity::_internal_cmdid() const {
  const ::PBSystemCmd* p = _impl_.cmdid_;
  return p != nullptr ? *p : reinterpret_cast<const ::PBSystemCmd&>(
      ::_PBSystemCmd_default_instance_);
}
inline const ::PBSystemCmd& PBLobbyGateForwardMsg2Entity::cmdid() const {
  // @@protoc_insertion_point(field_get:PBLobbyGateForwardMsg2Entity.cmdID)
  return _internal_cmdid();
}
inline void PBLobbyGateForwardMsg2Entity::unsafe_arena_set_allocated_cmdid(
    ::PBSystemCmd* cmdid) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.cmdid_);
  }
  _impl_.cmdid_ = cmdid;
  if (cmdid) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBLobbyGateForwardMsg2Entity.cmdID)
}
inline ::PBSystemCmd* PBLobbyGateForwardMsg2Entity::release_cmdid() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::PBSystemCmd* temp = _impl_.cmdid_;
  _impl_.cmdid_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PBSystemCmd* PBLobbyGateForwardMsg2Entity::unsafe_arena_release_cmdid() {
  // @@protoc_insertion_point(field_release:PBLobbyGateForwardMsg2Entity.cmdID)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::PBSystemCmd* temp = _impl_.cmdid_;
  _impl_.cmdid_ = nullptr;
  return temp;
}
inline ::PBSystemCmd* PBLobbyGateForwardMsg2Entity::_internal_mutable_cmdid() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.cmdid_ == nullptr) {
    auto* p = CreateMaybeMessage<::PBSystemCmd>(GetArenaForAllocation());
    _impl_.cmdid_ = p;
  }
  return _impl_.cmdid_;
}
inline ::PBSystemCmd* PBLobbyGateForwardMsg2Entity::mutable_cmdid() {
  ::PBSystemCmd* _msg = _internal_mutable_cmdid();
  // @@protoc_insertion_point(field_mutable:PBLobbyGateForwardMsg2Entity.cmdID)
  return _msg;
}
inline void PBLobbyGateForwardMsg2Entity::set_allocated_cmdid(::PBSystemCmd* cmdid) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.cmdid_;
  }
  if (cmdid) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(cmdid);
    if (message_arena != submessage_arena) {
      cmdid = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, cmdid, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.cmdid_ = cmdid;
  // @@protoc_insertion_point(field_set_allocated:PBLobbyGateForwardMsg2Entity.cmdID)
}

// optional .PBSystemCmdType param = 2 [default = PB_LOBBYGATE_SEND_MSG_2_PUBLIC_ENTITY];
inline bool PBLobbyGateForwardMsg2Entity::_internal_has_param() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool PBLobbyGateForwardMsg2Entity::has_param() const {
  return _internal_has_param();
}
inline void PBLobbyGateForwardMsg2Entity::clear_param() {
  _impl_.param_ = 4;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::PBSystemCmdType PBLobbyGateForwardMsg2Entity::_internal_param() const {
  return static_cast< ::PBSystemCmdType >(_impl_.param_);
}
inline ::PBSystemCmdType PBLobbyGateForwardMsg2Entity::param() const {
  // @@protoc_insertion_point(field_get:PBLobbyGateForwardMsg2Entity.param)
  return _internal_param();
}
inline void PBLobbyGateForwardMsg2Entity::_internal_set_param(::PBSystemCmdType value) {
  assert(::PBSystemCmdType_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.param_ = value;
}
inline void PBLobbyGateForwardMsg2Entity::set_param(::PBSystemCmdType value) {
  _internal_set_param(value);
  // @@protoc_insertion_point(field_set:PBLobbyGateForwardMsg2Entity.param)
}

// optional uint32 sub_CmdId = 3;
inline bool PBLobbyGateForwardMsg2Entity::_internal_has_sub_cmdid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool PBLobbyGateForwardMsg2Entity::has_sub_cmdid() const {
  return _internal_has_sub_cmdid();
}
inline void PBLobbyGateForwardMsg2Entity::clear_sub_cmdid() {
  _impl_.sub_cmdid_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t PBLobbyGateForwardMsg2Entity::_internal_sub_cmdid() const {
  return _impl_.sub_cmdid_;
}
inline uint32_t PBLobbyGateForwardMsg2Entity::sub_cmdid() const {
  // @@protoc_insertion_point(field_get:PBLobbyGateForwardMsg2Entity.sub_CmdId)
  return _internal_sub_cmdid();
}
inline void PBLobbyGateForwardMsg2Entity::_internal_set_sub_cmdid(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.sub_cmdid_ = value;
}
inline void PBLobbyGateForwardMsg2Entity::set_sub_cmdid(uint32_t value) {
  _internal_set_sub_cmdid(value);
  // @@protoc_insertion_point(field_set:PBLobbyGateForwardMsg2Entity.sub_CmdId)
}

// optional uint32 sub_Param = 4;
inline bool PBLobbyGateForwardMsg2Entity::_internal_has_sub_param() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool PBLobbyGateForwardMsg2Entity::has_sub_param() const {
  return _internal_has_sub_param();
}
inline void PBLobbyGateForwardMsg2Entity::clear_sub_param() {
  _impl_.sub_param_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline uint32_t PBLobbyGateForwardMsg2Entity::_internal_sub_param() const {
  return _impl_.sub_param_;
}
inline uint32_t PBLobbyGateForwardMsg2Entity::sub_param() const {
  // @@protoc_insertion_point(field_get:PBLobbyGateForwardMsg2Entity.sub_Param)
  return _internal_sub_param();
}
inline void PBLobbyGateForwardMsg2Entity::_internal_set_sub_param(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.sub_param_ = value;
}
inline void PBLobbyGateForwardMsg2Entity::set_sub_param(uint32_t value) {
  _internal_set_sub_param(value);
  // @@protoc_insertion_point(field_set:PBLobbyGateForwardMsg2Entity.sub_Param)
}

// optional bytes forward_data = 5;
inline bool PBLobbyGateForwardMsg2Entity::_internal_has_forward_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PBLobbyGateForwardMsg2Entity::has_forward_data() const {
  return _internal_has_forward_data();
}
inline void PBLobbyGateForwardMsg2Entity::clear_forward_data() {
  _impl_.forward_data_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& PBLobbyGateForwardMsg2Entity::forward_data() const {
  // @@protoc_insertion_point(field_get:PBLobbyGateForwardMsg2Entity.forward_data)
  return _internal_forward_data();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void PBLobbyGateForwardMsg2Entity::set_forward_data(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.forward_data_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:PBLobbyGateForwardMsg2Entity.forward_data)
}
inline std::string* PBLobbyGateForwardMsg2Entity::mutable_forward_data() {
  std::string* _s = _internal_mutable_forward_data();
  // @@protoc_insertion_point(field_mutable:PBLobbyGateForwardMsg2Entity.forward_data)
  return _s;
}
inline const std::string& PBLobbyGateForwardMsg2Entity::_internal_forward_data() const {
  return _impl_.forward_data_.Get();
}
inline void PBLobbyGateForwardMsg2Entity::_internal_set_forward_data(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.forward_data_.Set(value, GetArenaForAllocation());
}
inline std::string* PBLobbyGateForwardMsg2Entity::_internal_mutable_forward_data() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.forward_data_.Mutable(GetArenaForAllocation());
}
inline std::string* PBLobbyGateForwardMsg2Entity::release_forward_data() {
  // @@protoc_insertion_point(field_release:PBLobbyGateForwardMsg2Entity.forward_data)
  if (!_internal_has_forward_data()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.forward_data_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.forward_data_.IsDefault()) {
    _impl_.forward_data_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void PBLobbyGateForwardMsg2Entity::set_allocated_forward_data(std::string* forward_data) {
  if (forward_data != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.forward_data_.SetAllocated(forward_data, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.forward_data_.IsDefault()) {
    _impl_.forward_data_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:PBLobbyGateForwardMsg2Entity.forward_data)
}

// optional uint64 target_eid = 6;
inline bool PBLobbyGateForwardMsg2Entity::_internal_has_target_eid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool PBLobbyGateForwardMsg2Entity::has_target_eid() const {
  return _internal_has_target_eid();
}
inline void PBLobbyGateForwardMsg2Entity::clear_target_eid() {
  _impl_.target_eid_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline uint64_t PBLobbyGateForwardMsg2Entity::_internal_target_eid() const {
  return _impl_.target_eid_;
}
inline uint64_t PBLobbyGateForwardMsg2Entity::target_eid() const {
  // @@protoc_insertion_point(field_get:PBLobbyGateForwardMsg2Entity.target_eid)
  return _internal_target_eid();
}
inline void PBLobbyGateForwardMsg2Entity::_internal_set_target_eid(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.target_eid_ = value;
}
inline void PBLobbyGateForwardMsg2Entity::set_target_eid(uint64_t value) {
  _internal_set_target_eid(value);
  // @@protoc_insertion_point(field_set:PBLobbyGateForwardMsg2Entity.target_eid)
}

// optional .PBEntityMailbox sender_mb = 7;
inline bool PBLobbyGateForwardMsg2Entity::_internal_has_sender_mb() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.sender_mb_ != nullptr);
  return value;
}
inline bool PBLobbyGateForwardMsg2Entity::has_sender_mb() const {
  return _internal_has_sender_mb();
}
inline const ::PBEntityMailbox& PBLobbyGateForwardMsg2Entity::_internal_sender_mb() const {
  const ::PBEntityMailbox* p = _impl_.sender_mb_;
  return p != nullptr ? *p : reinterpret_cast<const ::PBEntityMailbox&>(
      ::_PBEntityMailbox_default_instance_);
}
inline const ::PBEntityMailbox& PBLobbyGateForwardMsg2Entity::sender_mb() const {
  // @@protoc_insertion_point(field_get:PBLobbyGateForwardMsg2Entity.sender_mb)
  return _internal_sender_mb();
}
inline void PBLobbyGateForwardMsg2Entity::unsafe_arena_set_allocated_sender_mb(
    ::PBEntityMailbox* sender_mb) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.sender_mb_);
  }
  _impl_.sender_mb_ = sender_mb;
  if (sender_mb) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBLobbyGateForwardMsg2Entity.sender_mb)
}
inline ::PBEntityMailbox* PBLobbyGateForwardMsg2Entity::release_sender_mb() {
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::PBEntityMailbox* temp = _impl_.sender_mb_;
  _impl_.sender_mb_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PBEntityMailbox* PBLobbyGateForwardMsg2Entity::unsafe_arena_release_sender_mb() {
  // @@protoc_insertion_point(field_release:PBLobbyGateForwardMsg2Entity.sender_mb)
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::PBEntityMailbox* temp = _impl_.sender_mb_;
  _impl_.sender_mb_ = nullptr;
  return temp;
}
inline ::PBEntityMailbox* PBLobbyGateForwardMsg2Entity::_internal_mutable_sender_mb() {
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.sender_mb_ == nullptr) {
    auto* p = CreateMaybeMessage<::PBEntityMailbox>(GetArenaForAllocation());
    _impl_.sender_mb_ = p;
  }
  return _impl_.sender_mb_;
}
inline ::PBEntityMailbox* PBLobbyGateForwardMsg2Entity::mutable_sender_mb() {
  ::PBEntityMailbox* _msg = _internal_mutable_sender_mb();
  // @@protoc_insertion_point(field_mutable:PBLobbyGateForwardMsg2Entity.sender_mb)
  return _msg;
}
inline void PBLobbyGateForwardMsg2Entity::set_allocated_sender_mb(::PBEntityMailbox* sender_mb) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.sender_mb_);
  }
  if (sender_mb) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sender_mb));
    if (message_arena != submessage_arena) {
      sender_mb = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sender_mb, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.sender_mb_ = sender_mb;
  // @@protoc_insertion_point(field_set_allocated:PBLobbyGateForwardMsg2Entity.sender_mb)
}

// optional bool send2Client = 8;
inline bool PBLobbyGateForwardMsg2Entity::_internal_has_send2client() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool PBLobbyGateForwardMsg2Entity::has_send2client() const {
  return _internal_has_send2client();
}
inline void PBLobbyGateForwardMsg2Entity::clear_send2client() {
  _impl_.send2client_ = false;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline bool PBLobbyGateForwardMsg2Entity::_internal_send2client() const {
  return _impl_.send2client_;
}
inline bool PBLobbyGateForwardMsg2Entity::send2client() const {
  // @@protoc_insertion_point(field_get:PBLobbyGateForwardMsg2Entity.send2Client)
  return _internal_send2client();
}
inline void PBLobbyGateForwardMsg2Entity::_internal_set_send2client(bool value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.send2client_ = value;
}
inline void PBLobbyGateForwardMsg2Entity::set_send2client(bool value) {
  _internal_set_send2client(value);
  // @@protoc_insertion_point(field_set:PBLobbyGateForwardMsg2Entity.send2Client)
}

// -------------------------------------------------------------------

// PBLobbyGateCreateEntityAnyWhere

// optional .PBSystemCmd cmdID = 1;
inline bool PBLobbyGateCreateEntityAnyWhere::_internal_has_cmdid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.cmdid_ != nullptr);
  return value;
}
inline bool PBLobbyGateCreateEntityAnyWhere::has_cmdid() const {
  return _internal_has_cmdid();
}
inline void PBLobbyGateCreateEntityAnyWhere::clear_cmdid() {
  if (_impl_.cmdid_ != nullptr) _impl_.cmdid_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::PBSystemCmd& PBLobbyGateCreateEntityAnyWhere::_internal_cmdid() const {
  const ::PBSystemCmd* p = _impl_.cmdid_;
  return p != nullptr ? *p : reinterpret_cast<const ::PBSystemCmd&>(
      ::_PBSystemCmd_default_instance_);
}
inline const ::PBSystemCmd& PBLobbyGateCreateEntityAnyWhere::cmdid() const {
  // @@protoc_insertion_point(field_get:PBLobbyGateCreateEntityAnyWhere.cmdID)
  return _internal_cmdid();
}
inline void PBLobbyGateCreateEntityAnyWhere::unsafe_arena_set_allocated_cmdid(
    ::PBSystemCmd* cmdid) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.cmdid_);
  }
  _impl_.cmdid_ = cmdid;
  if (cmdid) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBLobbyGateCreateEntityAnyWhere.cmdID)
}
inline ::PBSystemCmd* PBLobbyGateCreateEntityAnyWhere::release_cmdid() {
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::PBSystemCmd* temp = _impl_.cmdid_;
  _impl_.cmdid_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PBSystemCmd* PBLobbyGateCreateEntityAnyWhere::unsafe_arena_release_cmdid() {
  // @@protoc_insertion_point(field_release:PBLobbyGateCreateEntityAnyWhere.cmdID)
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::PBSystemCmd* temp = _impl_.cmdid_;
  _impl_.cmdid_ = nullptr;
  return temp;
}
inline ::PBSystemCmd* PBLobbyGateCreateEntityAnyWhere::_internal_mutable_cmdid() {
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.cmdid_ == nullptr) {
    auto* p = CreateMaybeMessage<::PBSystemCmd>(GetArenaForAllocation());
    _impl_.cmdid_ = p;
  }
  return _impl_.cmdid_;
}
inline ::PBSystemCmd* PBLobbyGateCreateEntityAnyWhere::mutable_cmdid() {
  ::PBSystemCmd* _msg = _internal_mutable_cmdid();
  // @@protoc_insertion_point(field_mutable:PBLobbyGateCreateEntityAnyWhere.cmdID)
  return _msg;
}
inline void PBLobbyGateCreateEntityAnyWhere::set_allocated_cmdid(::PBSystemCmd* cmdid) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.cmdid_;
  }
  if (cmdid) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(cmdid);
    if (message_arena != submessage_arena) {
      cmdid = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, cmdid, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.cmdid_ = cmdid;
  // @@protoc_insertion_point(field_set_allocated:PBLobbyGateCreateEntityAnyWhere.cmdID)
}

// optional .PBSystemCmdType param = 2 [default = PB_LOBBYGATE_CREATE_ENTITY_ANYWHERE_REQ];
inline bool PBLobbyGateCreateEntityAnyWhere::_internal_has_param() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool PBLobbyGateCreateEntityAnyWhere::has_param() const {
  return _internal_has_param();
}
inline void PBLobbyGateCreateEntityAnyWhere::clear_param() {
  _impl_.param_ = 5;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::PBSystemCmdType PBLobbyGateCreateEntityAnyWhere::_internal_param() const {
  return static_cast< ::PBSystemCmdType >(_impl_.param_);
}
inline ::PBSystemCmdType PBLobbyGateCreateEntityAnyWhere::param() const {
  // @@protoc_insertion_point(field_get:PBLobbyGateCreateEntityAnyWhere.param)
  return _internal_param();
}
inline void PBLobbyGateCreateEntityAnyWhere::_internal_set_param(::PBSystemCmdType value) {
  assert(::PBSystemCmdType_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.param_ = value;
}
inline void PBLobbyGateCreateEntityAnyWhere::set_param(::PBSystemCmdType value) {
  _internal_set_param(value);
  // @@protoc_insertion_point(field_set:PBLobbyGateCreateEntityAnyWhere.param)
}

// optional bytes entity_name = 3;
inline bool PBLobbyGateCreateEntityAnyWhere::_internal_has_entity_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PBLobbyGateCreateEntityAnyWhere::has_entity_name() const {
  return _internal_has_entity_name();
}
inline void PBLobbyGateCreateEntityAnyWhere::clear_entity_name() {
  _impl_.entity_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& PBLobbyGateCreateEntityAnyWhere::entity_name() const {
  // @@protoc_insertion_point(field_get:PBLobbyGateCreateEntityAnyWhere.entity_name)
  return _internal_entity_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void PBLobbyGateCreateEntityAnyWhere::set_entity_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.entity_name_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:PBLobbyGateCreateEntityAnyWhere.entity_name)
}
inline std::string* PBLobbyGateCreateEntityAnyWhere::mutable_entity_name() {
  std::string* _s = _internal_mutable_entity_name();
  // @@protoc_insertion_point(field_mutable:PBLobbyGateCreateEntityAnyWhere.entity_name)
  return _s;
}
inline const std::string& PBLobbyGateCreateEntityAnyWhere::_internal_entity_name() const {
  return _impl_.entity_name_.Get();
}
inline void PBLobbyGateCreateEntityAnyWhere::_internal_set_entity_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.entity_name_.Set(value, GetArenaForAllocation());
}
inline std::string* PBLobbyGateCreateEntityAnyWhere::_internal_mutable_entity_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.entity_name_.Mutable(GetArenaForAllocation());
}
inline std::string* PBLobbyGateCreateEntityAnyWhere::release_entity_name() {
  // @@protoc_insertion_point(field_release:PBLobbyGateCreateEntityAnyWhere.entity_name)
  if (!_internal_has_entity_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.entity_name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.entity_name_.IsDefault()) {
    _impl_.entity_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void PBLobbyGateCreateEntityAnyWhere::set_allocated_entity_name(std::string* entity_name) {
  if (entity_name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.entity_name_.SetAllocated(entity_name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.entity_name_.IsDefault()) {
    _impl_.entity_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:PBLobbyGateCreateEntityAnyWhere.entity_name)
}

// optional bytes entity_data = 4;
inline bool PBLobbyGateCreateEntityAnyWhere::_internal_has_entity_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool PBLobbyGateCreateEntityAnyWhere::has_entity_data() const {
  return _internal_has_entity_data();
}
inline void PBLobbyGateCreateEntityAnyWhere::clear_entity_data() {
  _impl_.entity_data_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& PBLobbyGateCreateEntityAnyWhere::entity_data() const {
  // @@protoc_insertion_point(field_get:PBLobbyGateCreateEntityAnyWhere.entity_data)
  return _internal_entity_data();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void PBLobbyGateCreateEntityAnyWhere::set_entity_data(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000002u;
 _impl_.entity_data_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:PBLobbyGateCreateEntityAnyWhere.entity_data)
}
inline std::string* PBLobbyGateCreateEntityAnyWhere::mutable_entity_data() {
  std::string* _s = _internal_mutable_entity_data();
  // @@protoc_insertion_point(field_mutable:PBLobbyGateCreateEntityAnyWhere.entity_data)
  return _s;
}
inline const std::string& PBLobbyGateCreateEntityAnyWhere::_internal_entity_data() const {
  return _impl_.entity_data_.Get();
}
inline void PBLobbyGateCreateEntityAnyWhere::_internal_set_entity_data(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.entity_data_.Set(value, GetArenaForAllocation());
}
inline std::string* PBLobbyGateCreateEntityAnyWhere::_internal_mutable_entity_data() {
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.entity_data_.Mutable(GetArenaForAllocation());
}
inline std::string* PBLobbyGateCreateEntityAnyWhere::release_entity_data() {
  // @@protoc_insertion_point(field_release:PBLobbyGateCreateEntityAnyWhere.entity_data)
  if (!_internal_has_entity_data()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* p = _impl_.entity_data_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.entity_data_.IsDefault()) {
    _impl_.entity_data_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void PBLobbyGateCreateEntityAnyWhere::set_allocated_entity_data(std::string* entity_data) {
  if (entity_data != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.entity_data_.SetAllocated(entity_data, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.entity_data_.IsDefault()) {
    _impl_.entity_data_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:PBLobbyGateCreateEntityAnyWhere.entity_data)
}

// -------------------------------------------------------------------

// PBLobbyGateCreateEntityFromCenter

// optional .PBSystemCmd cmdID = 1;
inline bool PBLobbyGateCreateEntityFromCenter::_internal_has_cmdid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.cmdid_ != nullptr);
  return value;
}
inline bool PBLobbyGateCreateEntityFromCenter::has_cmdid() const {
  return _internal_has_cmdid();
}
inline void PBLobbyGateCreateEntityFromCenter::clear_cmdid() {
  if (_impl_.cmdid_ != nullptr) _impl_.cmdid_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::PBSystemCmd& PBLobbyGateCreateEntityFromCenter::_internal_cmdid() const {
  const ::PBSystemCmd* p = _impl_.cmdid_;
  return p != nullptr ? *p : reinterpret_cast<const ::PBSystemCmd&>(
      ::_PBSystemCmd_default_instance_);
}
inline const ::PBSystemCmd& PBLobbyGateCreateEntityFromCenter::cmdid() const {
  // @@protoc_insertion_point(field_get:PBLobbyGateCreateEntityFromCenter.cmdID)
  return _internal_cmdid();
}
inline void PBLobbyGateCreateEntityFromCenter::unsafe_arena_set_allocated_cmdid(
    ::PBSystemCmd* cmdid) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.cmdid_);
  }
  _impl_.cmdid_ = cmdid;
  if (cmdid) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBLobbyGateCreateEntityFromCenter.cmdID)
}
inline ::PBSystemCmd* PBLobbyGateCreateEntityFromCenter::release_cmdid() {
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::PBSystemCmd* temp = _impl_.cmdid_;
  _impl_.cmdid_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PBSystemCmd* PBLobbyGateCreateEntityFromCenter::unsafe_arena_release_cmdid() {
  // @@protoc_insertion_point(field_release:PBLobbyGateCreateEntityFromCenter.cmdID)
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::PBSystemCmd* temp = _impl_.cmdid_;
  _impl_.cmdid_ = nullptr;
  return temp;
}
inline ::PBSystemCmd* PBLobbyGateCreateEntityFromCenter::_internal_mutable_cmdid() {
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.cmdid_ == nullptr) {
    auto* p = CreateMaybeMessage<::PBSystemCmd>(GetArenaForAllocation());
    _impl_.cmdid_ = p;
  }
  return _impl_.cmdid_;
}
inline ::PBSystemCmd* PBLobbyGateCreateEntityFromCenter::mutable_cmdid() {
  ::PBSystemCmd* _msg = _internal_mutable_cmdid();
  // @@protoc_insertion_point(field_mutable:PBLobbyGateCreateEntityFromCenter.cmdID)
  return _msg;
}
inline void PBLobbyGateCreateEntityFromCenter::set_allocated_cmdid(::PBSystemCmd* cmdid) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.cmdid_;
  }
  if (cmdid) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(cmdid);
    if (message_arena != submessage_arena) {
      cmdid = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, cmdid, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.cmdid_ = cmdid;
  // @@protoc_insertion_point(field_set_allocated:PBLobbyGateCreateEntityFromCenter.cmdID)
}

// optional .PBSystemCmdType param = 2 [default = PB_LOBBYGATE_CREATE_ENTITY_FROM_LOBBYCENTER];
inline bool PBLobbyGateCreateEntityFromCenter::_internal_has_param() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool PBLobbyGateCreateEntityFromCenter::has_param() const {
  return _internal_has_param();
}
inline void PBLobbyGateCreateEntityFromCenter::clear_param() {
  _impl_.param_ = 6;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::PBSystemCmdType PBLobbyGateCreateEntityFromCenter::_internal_param() const {
  return static_cast< ::PBSystemCmdType >(_impl_.param_);
}
inline ::PBSystemCmdType PBLobbyGateCreateEntityFromCenter::param() const {
  // @@protoc_insertion_point(field_get:PBLobbyGateCreateEntityFromCenter.param)
  return _internal_param();
}
inline void PBLobbyGateCreateEntityFromCenter::_internal_set_param(::PBSystemCmdType value) {
  assert(::PBSystemCmdType_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.param_ = value;
}
inline void PBLobbyGateCreateEntityFromCenter::set_param(::PBSystemCmdType value) {
  _internal_set_param(value);
  // @@protoc_insertion_point(field_set:PBLobbyGateCreateEntityFromCenter.param)
}

// optional bytes entity_name = 3;
inline bool PBLobbyGateCreateEntityFromCenter::_internal_has_entity_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PBLobbyGateCreateEntityFromCenter::has_entity_name() const {
  return _internal_has_entity_name();
}
inline void PBLobbyGateCreateEntityFromCenter::clear_entity_name() {
  _impl_.entity_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& PBLobbyGateCreateEntityFromCenter::entity_name() const {
  // @@protoc_insertion_point(field_get:PBLobbyGateCreateEntityFromCenter.entity_name)
  return _internal_entity_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void PBLobbyGateCreateEntityFromCenter::set_entity_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.entity_name_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:PBLobbyGateCreateEntityFromCenter.entity_name)
}
inline std::string* PBLobbyGateCreateEntityFromCenter::mutable_entity_name() {
  std::string* _s = _internal_mutable_entity_name();
  // @@protoc_insertion_point(field_mutable:PBLobbyGateCreateEntityFromCenter.entity_name)
  return _s;
}
inline const std::string& PBLobbyGateCreateEntityFromCenter::_internal_entity_name() const {
  return _impl_.entity_name_.Get();
}
inline void PBLobbyGateCreateEntityFromCenter::_internal_set_entity_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.entity_name_.Set(value, GetArenaForAllocation());
}
inline std::string* PBLobbyGateCreateEntityFromCenter::_internal_mutable_entity_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.entity_name_.Mutable(GetArenaForAllocation());
}
inline std::string* PBLobbyGateCreateEntityFromCenter::release_entity_name() {
  // @@protoc_insertion_point(field_release:PBLobbyGateCreateEntityFromCenter.entity_name)
  if (!_internal_has_entity_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.entity_name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.entity_name_.IsDefault()) {
    _impl_.entity_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void PBLobbyGateCreateEntityFromCenter::set_allocated_entity_name(std::string* entity_name) {
  if (entity_name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.entity_name_.SetAllocated(entity_name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.entity_name_.IsDefault()) {
    _impl_.entity_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:PBLobbyGateCreateEntityFromCenter.entity_name)
}

// optional bytes entity_data = 4;
inline bool PBLobbyGateCreateEntityFromCenter::_internal_has_entity_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool PBLobbyGateCreateEntityFromCenter::has_entity_data() const {
  return _internal_has_entity_data();
}
inline void PBLobbyGateCreateEntityFromCenter::clear_entity_data() {
  _impl_.entity_data_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& PBLobbyGateCreateEntityFromCenter::entity_data() const {
  // @@protoc_insertion_point(field_get:PBLobbyGateCreateEntityFromCenter.entity_data)
  return _internal_entity_data();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void PBLobbyGateCreateEntityFromCenter::set_entity_data(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000002u;
 _impl_.entity_data_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:PBLobbyGateCreateEntityFromCenter.entity_data)
}
inline std::string* PBLobbyGateCreateEntityFromCenter::mutable_entity_data() {
  std::string* _s = _internal_mutable_entity_data();
  // @@protoc_insertion_point(field_mutable:PBLobbyGateCreateEntityFromCenter.entity_data)
  return _s;
}
inline const std::string& PBLobbyGateCreateEntityFromCenter::_internal_entity_data() const {
  return _impl_.entity_data_.Get();
}
inline void PBLobbyGateCreateEntityFromCenter::_internal_set_entity_data(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.entity_data_.Set(value, GetArenaForAllocation());
}
inline std::string* PBLobbyGateCreateEntityFromCenter::_internal_mutable_entity_data() {
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.entity_data_.Mutable(GetArenaForAllocation());
}
inline std::string* PBLobbyGateCreateEntityFromCenter::release_entity_data() {
  // @@protoc_insertion_point(field_release:PBLobbyGateCreateEntityFromCenter.entity_data)
  if (!_internal_has_entity_data()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* p = _impl_.entity_data_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.entity_data_.IsDefault()) {
    _impl_.entity_data_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void PBLobbyGateCreateEntityFromCenter::set_allocated_entity_data(std::string* entity_data) {
  if (entity_data != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.entity_data_.SetAllocated(entity_data, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.entity_data_.IsDefault()) {
    _impl_.entity_data_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:PBLobbyGateCreateEntityFromCenter.entity_data)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::PBAllServerConnected_MsgID> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBAllServerConnected_MsgID>() {
  return ::PBAllServerConnected_MsgID_descriptor();
}
template <> struct is_proto_enum< ::PBAllServerStartNow_MsgID> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBAllServerStartNow_MsgID>() {
  return ::PBAllServerStartNow_MsgID_descriptor();
}
template <> struct is_proto_enum< ::PBLobbyGateRegisterGlobalEntityReq_MsgID> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBLobbyGateRegisterGlobalEntityReq_MsgID>() {
  return ::PBLobbyGateRegisterGlobalEntityReq_MsgID_descriptor();
}
template <> struct is_proto_enum< ::PBLobbyGateRegisterGlobalEntityRsp_MsgID> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBLobbyGateRegisterGlobalEntityRsp_MsgID>() {
  return ::PBLobbyGateRegisterGlobalEntityRsp_MsgID_descriptor();
}
template <> struct is_proto_enum< ::PBLobbyGateAddGlobalEntity_MsgID> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBLobbyGateAddGlobalEntity_MsgID>() {
  return ::PBLobbyGateAddGlobalEntity_MsgID_descriptor();
}
template <> struct is_proto_enum< ::PBLobbyGateForwardMsg2Entity_MsgID> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBLobbyGateForwardMsg2Entity_MsgID>() {
  return ::PBLobbyGateForwardMsg2Entity_MsgID_descriptor();
}
template <> struct is_proto_enum< ::PBLobbyGateCreateEntityAnyWhere_MsgID> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBLobbyGateCreateEntityAnyWhere_MsgID>() {
  return ::PBLobbyGateCreateEntityAnyWhere_MsgID_descriptor();
}
template <> struct is_proto_enum< ::PBLobbyGateCreateEntityFromCenter_MsgID> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBLobbyGateCreateEntityFromCenter_MsgID>() {
  return ::PBLobbyGateCreateEntityFromCenter_MsgID_descriptor();
}
template <> struct is_proto_enum< ::PBSystemCmdType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBSystemCmdType>() {
  return ::PBSystemCmdType_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_SystemInternalCmd_2eproto
