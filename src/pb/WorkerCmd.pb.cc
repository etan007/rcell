// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: WorkerCmd.proto

#include "WorkerCmd.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

PROTOBUF_CONSTEXPR PBWorkerCmd::PBWorkerCmd(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.cmd_)*/3} {}
struct PBWorkerCmdDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PBWorkerCmdDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PBWorkerCmdDefaultTypeInternal() {}
  union {
    PBWorkerCmd _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PBWorkerCmdDefaultTypeInternal _PBWorkerCmd_default_instance_;
PROTOBUF_CONSTEXPR PBWorkerDisconnectOp::PBWorkerDisconnectOp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.reason_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.connection_status_code_)*/0u} {}
struct PBWorkerDisconnectOpDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PBWorkerDisconnectOpDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PBWorkerDisconnectOpDefaultTypeInternal() {}
  union {
    PBWorkerDisconnectOp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PBWorkerDisconnectOpDefaultTypeInternal _PBWorkerDisconnectOp_default_instance_;
PROTOBUF_CONSTEXPR PBWorkerFlagUpdateOp::PBWorkerFlagUpdateOp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.value_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct PBWorkerFlagUpdateOpDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PBWorkerFlagUpdateOpDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PBWorkerFlagUpdateOpDefaultTypeInternal() {}
  union {
    PBWorkerFlagUpdateOp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PBWorkerFlagUpdateOpDefaultTypeInternal _PBWorkerFlagUpdateOp_default_instance_;
PROTOBUF_CONSTEXPR PBWorkerLogMessageOp::PBWorkerLogMessageOp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.level_)*/0} {}
struct PBWorkerLogMessageOpDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PBWorkerLogMessageOpDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PBWorkerLogMessageOpDefaultTypeInternal() {}
  union {
    PBWorkerLogMessageOp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PBWorkerLogMessageOpDefaultTypeInternal _PBWorkerLogMessageOp_default_instance_;
PROTOBUF_CONSTEXPR PBWorkerMetricsOp::PBWorkerMetricsOp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.metrics_)*/nullptr} {}
struct PBWorkerMetricsOpDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PBWorkerMetricsOpDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PBWorkerMetricsOpDefaultTypeInternal() {}
  union {
    PBWorkerMetricsOp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PBWorkerMetricsOpDefaultTypeInternal _PBWorkerMetricsOp_default_instance_;
PROTOBUF_CONSTEXPR PBWorkerCriticalSectionOp::PBWorkerCriticalSectionOp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.in_critical_section_)*/0u} {}
struct PBWorkerCriticalSectionOpDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PBWorkerCriticalSectionOpDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PBWorkerCriticalSectionOpDefaultTypeInternal() {}
  union {
    PBWorkerCriticalSectionOp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PBWorkerCriticalSectionOpDefaultTypeInternal _PBWorkerCriticalSectionOp_default_instance_;
PROTOBUF_CONSTEXPR PBWorkerAddEntityOp::PBWorkerAddEntityOp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.entity_id_)*/int64_t{0}} {}
struct PBWorkerAddEntityOpDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PBWorkerAddEntityOpDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PBWorkerAddEntityOpDefaultTypeInternal() {}
  union {
    PBWorkerAddEntityOp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PBWorkerAddEntityOpDefaultTypeInternal _PBWorkerAddEntityOp_default_instance_;
PROTOBUF_CONSTEXPR PBWorkerRemoveEntityOp::PBWorkerRemoveEntityOp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.entity_id_)*/int64_t{0}} {}
struct PBWorkerRemoveEntityOpDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PBWorkerRemoveEntityOpDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PBWorkerRemoveEntityOpDefaultTypeInternal() {}
  union {
    PBWorkerRemoveEntityOp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PBWorkerRemoveEntityOpDefaultTypeInternal _PBWorkerRemoveEntityOp_default_instance_;
PROTOBUF_CONSTEXPR PBWorkerReserveEntityIdsResponseOp::PBWorkerReserveEntityIdsResponseOp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.request_id_)*/int64_t{0}
  , /*decltype(_impl_.first_entity_id_)*/int64_t{0}
  , /*decltype(_impl_.number_of_entity_ids_)*/0u
  , /*decltype(_impl_.status_code_)*/1} {}
struct PBWorkerReserveEntityIdsResponseOpDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PBWorkerReserveEntityIdsResponseOpDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PBWorkerReserveEntityIdsResponseOpDefaultTypeInternal() {}
  union {
    PBWorkerReserveEntityIdsResponseOp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PBWorkerReserveEntityIdsResponseOpDefaultTypeInternal _PBWorkerReserveEntityIdsResponseOp_default_instance_;
PROTOBUF_CONSTEXPR PBWorkerCreateEntityResponseOp::PBWorkerCreateEntityResponseOp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.request_id_)*/int64_t{0}
  , /*decltype(_impl_.entity_id_)*/int64_t{0}
  , /*decltype(_impl_.status_code_)*/1} {}
struct PBWorkerCreateEntityResponseOpDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PBWorkerCreateEntityResponseOpDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PBWorkerCreateEntityResponseOpDefaultTypeInternal() {}
  union {
    PBWorkerCreateEntityResponseOp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PBWorkerCreateEntityResponseOpDefaultTypeInternal _PBWorkerCreateEntityResponseOp_default_instance_;
PROTOBUF_CONSTEXPR PBWorkerDeleteEntityResponseOp::PBWorkerDeleteEntityResponseOp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.request_id_)*/int64_t{0}
  , /*decltype(_impl_.entity_id_)*/int64_t{0}
  , /*decltype(_impl_.status_code_)*/1} {}
struct PBWorkerDeleteEntityResponseOpDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PBWorkerDeleteEntityResponseOpDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PBWorkerDeleteEntityResponseOpDefaultTypeInternal() {}
  union {
    PBWorkerDeleteEntityResponseOp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PBWorkerDeleteEntityResponseOpDefaultTypeInternal _PBWorkerDeleteEntityResponseOp_default_instance_;
PROTOBUF_CONSTEXPR PBWorkerEntityQueryResponseOp::PBWorkerEntityQueryResponseOp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.results_)*/{}
  , /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.request_id_)*/int64_t{0}
  , /*decltype(_impl_.result_count_)*/0u
  , /*decltype(_impl_.status_code_)*/1} {}
struct PBWorkerEntityQueryResponseOpDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PBWorkerEntityQueryResponseOpDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PBWorkerEntityQueryResponseOpDefaultTypeInternal() {}
  union {
    PBWorkerEntityQueryResponseOp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PBWorkerEntityQueryResponseOpDefaultTypeInternal _PBWorkerEntityQueryResponseOp_default_instance_;
PROTOBUF_CONSTEXPR PBWorkerAddComponentOp::PBWorkerAddComponentOp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.data_)*/nullptr
  , /*decltype(_impl_.entity_id_)*/int64_t{0}} {}
struct PBWorkerAddComponentOpDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PBWorkerAddComponentOpDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PBWorkerAddComponentOpDefaultTypeInternal() {}
  union {
    PBWorkerAddComponentOp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PBWorkerAddComponentOpDefaultTypeInternal _PBWorkerAddComponentOp_default_instance_;
PROTOBUF_CONSTEXPR PBWorkerRemoveComponentOp::PBWorkerRemoveComponentOp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.entity_id_)*/int64_t{0}
  , /*decltype(_impl_.component_id_)*/0u} {}
struct PBWorkerRemoveComponentOpDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PBWorkerRemoveComponentOpDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PBWorkerRemoveComponentOpDefaultTypeInternal() {}
  union {
    PBWorkerRemoveComponentOp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PBWorkerRemoveComponentOpDefaultTypeInternal _PBWorkerRemoveComponentOp_default_instance_;
PROTOBUF_CONSTEXPR PBWorkerAuthorityChangeOp::PBWorkerAuthorityChangeOp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.entity_id_)*/int64_t{0}
  , /*decltype(_impl_.component_id_)*/0u
  , /*decltype(_impl_.authority_)*/0} {}
struct PBWorkerAuthorityChangeOpDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PBWorkerAuthorityChangeOpDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PBWorkerAuthorityChangeOpDefaultTypeInternal() {}
  union {
    PBWorkerAuthorityChangeOp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PBWorkerAuthorityChangeOpDefaultTypeInternal _PBWorkerAuthorityChangeOp_default_instance_;
PROTOBUF_CONSTEXPR PBWorkerComponentUpdateOp::PBWorkerComponentUpdateOp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.update_)*/nullptr
  , /*decltype(_impl_.entity_id_)*/int64_t{0}} {}
struct PBWorkerComponentUpdateOpDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PBWorkerComponentUpdateOpDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PBWorkerComponentUpdateOpDefaultTypeInternal() {}
  union {
    PBWorkerComponentUpdateOp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PBWorkerComponentUpdateOpDefaultTypeInternal _PBWorkerComponentUpdateOp_default_instance_;
PROTOBUF_CONSTEXPR PBWorkerCommandRequestOp::PBWorkerCommandRequestOp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.caller_attribute_set_)*/nullptr
  , /*decltype(_impl_.request_)*/nullptr
  , /*decltype(_impl_.request_id_)*/int64_t{0}
  , /*decltype(_impl_.entity_id_)*/int64_t{0}
  , /*decltype(_impl_.timeout_millis_)*/0u
  , /*decltype(_impl_.caller_worker_id_)*/0u
  , /*decltype(_impl_.caller_worker_entity_id_)*/int64_t{0}} {}
struct PBWorkerCommandRequestOpDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PBWorkerCommandRequestOpDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PBWorkerCommandRequestOpDefaultTypeInternal() {}
  union {
    PBWorkerCommandRequestOp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PBWorkerCommandRequestOpDefaultTypeInternal _PBWorkerCommandRequestOp_default_instance_;
PROTOBUF_CONSTEXPR PBWorkerCommandResponseOp::PBWorkerCommandResponseOp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.response_)*/nullptr
  , /*decltype(_impl_.request_id_)*/int64_t{0}
  , /*decltype(_impl_.entity_id_)*/int64_t{0}
  , /*decltype(_impl_.status_code_)*/1} {}
struct PBWorkerCommandResponseOpDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PBWorkerCommandResponseOpDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PBWorkerCommandResponseOpDefaultTypeInternal() {}
  union {
    PBWorkerCommandResponseOp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PBWorkerCommandResponseOpDefaultTypeInternal _PBWorkerCommandResponseOp_default_instance_;
PROTOBUF_CONSTEXPR PBWorkerComponentSetAuthorityChangeOp::PBWorkerComponentSetAuthorityChangeOp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.entity_id_)*/int64_t{0}
  , /*decltype(_impl_.component_set_id_)*/0u
  , /*decltype(_impl_.authority_)*/0} {}
struct PBWorkerComponentSetAuthorityChangeOpDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PBWorkerComponentSetAuthorityChangeOpDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PBWorkerComponentSetAuthorityChangeOpDefaultTypeInternal() {}
  union {
    PBWorkerComponentSetAuthorityChangeOp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PBWorkerComponentSetAuthorityChangeOpDefaultTypeInternal _PBWorkerComponentSetAuthorityChangeOp_default_instance_;
PROTOBUF_CONSTEXPR PBWorkerOpUnion::PBWorkerOpUnion(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.disconnect_)*/nullptr
  , /*decltype(_impl_.flag_update_)*/nullptr
  , /*decltype(_impl_.log_message_)*/nullptr
  , /*decltype(_impl_.metrics_)*/nullptr
  , /*decltype(_impl_.critical_section_)*/nullptr
  , /*decltype(_impl_.add_entity_)*/nullptr
  , /*decltype(_impl_.remove_entity_)*/nullptr
  , /*decltype(_impl_.reserve_entity_ids_response_)*/nullptr
  , /*decltype(_impl_.create_entity_response_)*/nullptr
  , /*decltype(_impl_.delete_entity_response_)*/nullptr
  , /*decltype(_impl_.entity_query_response_)*/nullptr
  , /*decltype(_impl_.add_component_)*/nullptr
  , /*decltype(_impl_.remove_component_)*/nullptr
  , /*decltype(_impl_.authority_change_)*/nullptr
  , /*decltype(_impl_.component_update_)*/nullptr
  , /*decltype(_impl_.command_request_)*/nullptr
  , /*decltype(_impl_.command_response_)*/nullptr
  , /*decltype(_impl_.component_set_authority_change_)*/nullptr} {}
struct PBWorkerOpUnionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PBWorkerOpUnionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PBWorkerOpUnionDefaultTypeInternal() {}
  union {
    PBWorkerOpUnion _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PBWorkerOpUnionDefaultTypeInternal _PBWorkerOpUnion_default_instance_;
PROTOBUF_CONSTEXPR PBWorkerOp::PBWorkerOp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.op_)*/nullptr
  , /*decltype(_impl_.op_type_)*/1} {}
struct PBWorkerOpDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PBWorkerOpDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PBWorkerOpDefaultTypeInternal() {}
  union {
    PBWorkerOp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PBWorkerOpDefaultTypeInternal _PBWorkerOp_default_instance_;
static ::_pb::Metadata file_level_metadata_WorkerCmd_2eproto[21];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_WorkerCmd_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_WorkerCmd_2eproto = nullptr;

const uint32_t TableStruct_WorkerCmd_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::PBWorkerCmd, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerCmd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PBWorkerCmd, _impl_.cmd_),
  0,
  PROTOBUF_FIELD_OFFSET(::PBWorkerDisconnectOp, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerDisconnectOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PBWorkerDisconnectOp, _impl_.connection_status_code_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerDisconnectOp, _impl_.reason_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::PBWorkerFlagUpdateOp, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerFlagUpdateOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PBWorkerFlagUpdateOp, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerFlagUpdateOp, _impl_.value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::PBWorkerLogMessageOp, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerLogMessageOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PBWorkerLogMessageOp, _impl_.level_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerLogMessageOp, _impl_.message_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::PBWorkerMetricsOp, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerMetricsOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PBWorkerMetricsOp, _impl_.metrics_),
  0,
  PROTOBUF_FIELD_OFFSET(::PBWorkerCriticalSectionOp, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerCriticalSectionOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PBWorkerCriticalSectionOp, _impl_.in_critical_section_),
  0,
  PROTOBUF_FIELD_OFFSET(::PBWorkerAddEntityOp, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerAddEntityOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PBWorkerAddEntityOp, _impl_.entity_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::PBWorkerRemoveEntityOp, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerRemoveEntityOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PBWorkerRemoveEntityOp, _impl_.entity_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::PBWorkerReserveEntityIdsResponseOp, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerReserveEntityIdsResponseOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PBWorkerReserveEntityIdsResponseOp, _impl_.request_id_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerReserveEntityIdsResponseOp, _impl_.status_code_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerReserveEntityIdsResponseOp, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerReserveEntityIdsResponseOp, _impl_.first_entity_id_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerReserveEntityIdsResponseOp, _impl_.number_of_entity_ids_),
  1,
  4,
  0,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::PBWorkerCreateEntityResponseOp, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerCreateEntityResponseOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PBWorkerCreateEntityResponseOp, _impl_.request_id_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerCreateEntityResponseOp, _impl_.status_code_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerCreateEntityResponseOp, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerCreateEntityResponseOp, _impl_.entity_id_),
  1,
  3,
  0,
  2,
  PROTOBUF_FIELD_OFFSET(::PBWorkerDeleteEntityResponseOp, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerDeleteEntityResponseOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PBWorkerDeleteEntityResponseOp, _impl_.request_id_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerDeleteEntityResponseOp, _impl_.entity_id_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerDeleteEntityResponseOp, _impl_.status_code_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerDeleteEntityResponseOp, _impl_.message_),
  1,
  2,
  3,
  0,
  PROTOBUF_FIELD_OFFSET(::PBWorkerEntityQueryResponseOp, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerEntityQueryResponseOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PBWorkerEntityQueryResponseOp, _impl_.request_id_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerEntityQueryResponseOp, _impl_.status_code_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerEntityQueryResponseOp, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerEntityQueryResponseOp, _impl_.result_count_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerEntityQueryResponseOp, _impl_.results_),
  1,
  3,
  0,
  2,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::PBWorkerAddComponentOp, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerAddComponentOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PBWorkerAddComponentOp, _impl_.entity_id_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerAddComponentOp, _impl_.data_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::PBWorkerRemoveComponentOp, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerRemoveComponentOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PBWorkerRemoveComponentOp, _impl_.entity_id_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerRemoveComponentOp, _impl_.component_id_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::PBWorkerAuthorityChangeOp, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerAuthorityChangeOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PBWorkerAuthorityChangeOp, _impl_.entity_id_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerAuthorityChangeOp, _impl_.component_id_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerAuthorityChangeOp, _impl_.authority_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::PBWorkerComponentUpdateOp, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerComponentUpdateOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PBWorkerComponentUpdateOp, _impl_.entity_id_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerComponentUpdateOp, _impl_.update_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::PBWorkerCommandRequestOp, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerCommandRequestOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PBWorkerCommandRequestOp, _impl_.request_id_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerCommandRequestOp, _impl_.entity_id_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerCommandRequestOp, _impl_.timeout_millis_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerCommandRequestOp, _impl_.caller_worker_id_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerCommandRequestOp, _impl_.caller_worker_entity_id_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerCommandRequestOp, _impl_.caller_attribute_set_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerCommandRequestOp, _impl_.request_),
  2,
  3,
  4,
  5,
  6,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::PBWorkerCommandResponseOp, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerCommandResponseOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PBWorkerCommandResponseOp, _impl_.request_id_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerCommandResponseOp, _impl_.entity_id_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerCommandResponseOp, _impl_.status_code_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerCommandResponseOp, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerCommandResponseOp, _impl_.response_),
  2,
  3,
  4,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::PBWorkerComponentSetAuthorityChangeOp, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerComponentSetAuthorityChangeOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PBWorkerComponentSetAuthorityChangeOp, _impl_.entity_id_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerComponentSetAuthorityChangeOp, _impl_.component_set_id_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerComponentSetAuthorityChangeOp, _impl_.authority_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::PBWorkerOpUnion, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerOpUnion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PBWorkerOpUnion, _impl_.disconnect_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerOpUnion, _impl_.flag_update_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerOpUnion, _impl_.log_message_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerOpUnion, _impl_.metrics_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerOpUnion, _impl_.critical_section_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerOpUnion, _impl_.add_entity_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerOpUnion, _impl_.remove_entity_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerOpUnion, _impl_.reserve_entity_ids_response_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerOpUnion, _impl_.create_entity_response_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerOpUnion, _impl_.delete_entity_response_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerOpUnion, _impl_.entity_query_response_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerOpUnion, _impl_.add_component_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerOpUnion, _impl_.remove_component_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerOpUnion, _impl_.authority_change_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerOpUnion, _impl_.component_update_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerOpUnion, _impl_.command_request_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerOpUnion, _impl_.command_response_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerOpUnion, _impl_.component_set_authority_change_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  PROTOBUF_FIELD_OFFSET(::PBWorkerOp, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PBWorkerOp, _impl_.op_type_),
  PROTOBUF_FIELD_OFFSET(::PBWorkerOp, _impl_.op_),
  1,
  0,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, -1, sizeof(::PBWorkerCmd)},
  { 8, 16, -1, sizeof(::PBWorkerDisconnectOp)},
  { 18, 26, -1, sizeof(::PBWorkerFlagUpdateOp)},
  { 28, 36, -1, sizeof(::PBWorkerLogMessageOp)},
  { 38, 45, -1, sizeof(::PBWorkerMetricsOp)},
  { 46, 53, -1, sizeof(::PBWorkerCriticalSectionOp)},
  { 54, 61, -1, sizeof(::PBWorkerAddEntityOp)},
  { 62, 69, -1, sizeof(::PBWorkerRemoveEntityOp)},
  { 70, 81, -1, sizeof(::PBWorkerReserveEntityIdsResponseOp)},
  { 86, 96, -1, sizeof(::PBWorkerCreateEntityResponseOp)},
  { 100, 110, -1, sizeof(::PBWorkerDeleteEntityResponseOp)},
  { 114, 125, -1, sizeof(::PBWorkerEntityQueryResponseOp)},
  { 130, 138, -1, sizeof(::PBWorkerAddComponentOp)},
  { 140, 148, -1, sizeof(::PBWorkerRemoveComponentOp)},
  { 150, 159, -1, sizeof(::PBWorkerAuthorityChangeOp)},
  { 162, 170, -1, sizeof(::PBWorkerComponentUpdateOp)},
  { 172, 185, -1, sizeof(::PBWorkerCommandRequestOp)},
  { 192, 203, -1, sizeof(::PBWorkerCommandResponseOp)},
  { 208, 217, -1, sizeof(::PBWorkerComponentSetAuthorityChangeOp)},
  { 220, 244, -1, sizeof(::PBWorkerOpUnion)},
  { 262, 270, -1, sizeof(::PBWorkerOp)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::_PBWorkerCmd_default_instance_._instance,
  &::_PBWorkerDisconnectOp_default_instance_._instance,
  &::_PBWorkerFlagUpdateOp_default_instance_._instance,
  &::_PBWorkerLogMessageOp_default_instance_._instance,
  &::_PBWorkerMetricsOp_default_instance_._instance,
  &::_PBWorkerCriticalSectionOp_default_instance_._instance,
  &::_PBWorkerAddEntityOp_default_instance_._instance,
  &::_PBWorkerRemoveEntityOp_default_instance_._instance,
  &::_PBWorkerReserveEntityIdsResponseOp_default_instance_._instance,
  &::_PBWorkerCreateEntityResponseOp_default_instance_._instance,
  &::_PBWorkerDeleteEntityResponseOp_default_instance_._instance,
  &::_PBWorkerEntityQueryResponseOp_default_instance_._instance,
  &::_PBWorkerAddComponentOp_default_instance_._instance,
  &::_PBWorkerRemoveComponentOp_default_instance_._instance,
  &::_PBWorkerAuthorityChangeOp_default_instance_._instance,
  &::_PBWorkerComponentUpdateOp_default_instance_._instance,
  &::_PBWorkerCommandRequestOp_default_instance_._instance,
  &::_PBWorkerCommandResponseOp_default_instance_._instance,
  &::_PBWorkerComponentSetAuthorityChangeOp_default_instance_._instance,
  &::_PBWorkerOpUnion_default_instance_._instance,
  &::_PBWorkerOp_default_instance_._instance,
};

const char descriptor_table_protodef_WorkerCmd_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\017WorkerCmd.proto\032\016xCommond.proto\032\020Worke"
  "rData.proto\"1\n\013PBWorkerCmd\022\"\n\003cmd\030\001 \001(\0162"
  "\010.CmdType:\013PB_WORK_CMD\"F\n\024PBWorkerDiscon"
  "nectOp\022\036\n\026connection_status_code\030\001 \001(\r\022\016"
  "\n\006reason\030\002 \001(\t\"3\n\024PBWorkerFlagUpdateOp\022\014"
  "\n\004name\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\"6\n\024PBWorkerL"
  "ogMessageOp\022\r\n\005level\030\001 \001(\005\022\017\n\007message\030\002 "
  "\001(\t\"6\n\021PBWorkerMetricsOp\022!\n\007metrics\030\001 \001("
  "\0132\020.PBWorkerMetrics\"8\n\031PBWorkerCriticalS"
  "ectionOp\022\033\n\023in_critical_section\030\001 \001(\r\"(\n"
  "\023PBWorkerAddEntityOp\022\021\n\tentity_id\030\001 \001(\003\""
  "+\n\026PBWorkerRemoveEntityOp\022\021\n\tentity_id\030\001"
  " \001(\003\"\252\001\n\"PBWorkerReserveEntityIdsRespons"
  "eOp\022\022\n\nrequest_id\030\001 \001(\003\022(\n\013status_code\030\002"
  " \001(\0162\023.PBWorkerStatusCode\022\017\n\007message\030\003 \001"
  "(\t\022\027\n\017first_entity_id\030\004 \001(\003\022\034\n\024number_of"
  "_entity_ids\030\005 \001(\r\"\202\001\n\036PBWorkerCreateEnti"
  "tyResponseOp\022\022\n\nrequest_id\030\001 \001(\003\022(\n\013stat"
  "us_code\030\002 \001(\0162\023.PBWorkerStatusCode\022\017\n\007me"
  "ssage\030\003 \001(\t\022\021\n\tentity_id\030\004 \001(\003\"\202\001\n\036PBWor"
  "kerDeleteEntityResponseOp\022\022\n\nrequest_id\030"
  "\001 \001(\003\022\021\n\tentity_id\030\002 \001(\003\022(\n\013status_code\030"
  "\003 \001(\0162\023.PBWorkerStatusCode\022\017\n\007message\030\004 "
  "\001(\t\"\246\001\n\035PBWorkerEntityQueryResponseOp\022\022\n"
  "\nrequest_id\030\001 \001(\003\022(\n\013status_code\030\002 \001(\0162\023"
  ".PBWorkerStatusCode\022\017\n\007message\030\003 \001(\t\022\024\n\014"
  "result_count\030\004 \001(\r\022 \n\007results\030\005 \003(\0132\017.PB"
  "WorkerEntity\"Q\n\026PBWorkerAddComponentOp\022\021"
  "\n\tentity_id\030\001 \001(\003\022$\n\004data\030\002 \001(\0132\026.PBWork"
  "erComponentData\"D\n\031PBWorkerRemoveCompone"
  "ntOp\022\021\n\tentity_id\030\001 \001(\003\022\024\n\014component_id\030"
  "\002 \001(\r\"k\n\031PBWorkerAuthorityChangeOp\022\021\n\ten"
  "tity_id\030\001 \001(\003\022\024\n\014component_id\030\002 \001(\r\022%\n\ta"
  "uthority\030\003 \001(\0162\022.PBWorkerAuthority\"X\n\031PB"
  "WorkerComponentUpdateOp\022\021\n\tentity_id\030\001 \001"
  "(\003\022(\n\006update\030\002 \001(\0132\030.PBWorkerComponentUp"
  "date\"\367\001\n\030PBWorkerCommandRequestOp\022\022\n\nreq"
  "uest_id\030\001 \001(\003\022\021\n\tentity_id\030\002 \001(\003\022\026\n\016time"
  "out_millis\030\003 \001(\r\022\030\n\020caller_worker_id\030\004 \001"
  "(\r\022\037\n\027caller_worker_entity_id\030\005 \001(\003\0227\n\024c"
  "aller_attribute_set\030\006 \001(\0132\031.PBWorkerWork"
  "erAttributes\022(\n\007request\030\007 \001(\0132\027.PBWorker"
  "CommandRequest\"\251\001\n\031PBWorkerCommandRespon"
  "seOp\022\022\n\nrequest_id\030\001 \001(\003\022\021\n\tentity_id\030\002 "
  "\001(\003\022(\n\013status_code\030\003 \001(\0162\023.PBWorkerStatu"
  "sCode\022\017\n\007message\030\004 \001(\t\022*\n\010response\030\005 \001(\013"
  "2\030.PBWorkerCommandResponse\"{\n%PBWorkerCo"
  "mponentSetAuthorityChangeOp\022\021\n\tentity_id"
  "\030\001 \001(\003\022\030\n\020component_set_id\030\002 \001(\r\022%\n\tauth"
  "ority\030\003 \001(\0162\022.PBWorkerAuthority\"\340\007\n\017PBWo"
  "rkerOpUnion\022)\n\ndisconnect\030\001 \001(\0132\025.PBWork"
  "erDisconnectOp\022*\n\013flag_update\030\002 \001(\0132\025.PB"
  "WorkerFlagUpdateOp\022*\n\013log_message\030\003 \001(\0132"
  "\025.PBWorkerLogMessageOp\022#\n\007metrics\030\004 \001(\0132"
  "\022.PBWorkerMetricsOp\0224\n\020critical_section\030"
  "\005 \001(\0132\032.PBWorkerCriticalSectionOp\022(\n\nadd"
  "_entity\030\006 \001(\0132\024.PBWorkerAddEntityOp\022.\n\rr"
  "emove_entity\030\007 \001(\0132\027.PBWorkerRemoveEntit"
  "yOp\022H\n\033reserve_entity_ids_response\030\010 \001(\013"
  "2#.PBWorkerReserveEntityIdsResponseOp\022\?\n"
  "\026create_entity_response\030\t \001(\0132\037.PBWorker"
  "CreateEntityResponseOp\022\?\n\026delete_entity_"
  "response\030\n \001(\0132\037.PBWorkerDeleteEntityRes"
  "ponseOp\022=\n\025entity_query_response\030\013 \001(\0132\036"
  ".PBWorkerEntityQueryResponseOp\022.\n\radd_co"
  "mponent\030\014 \001(\0132\027.PBWorkerAddComponentOp\0224"
  "\n\020remove_component\030\r \001(\0132\032.PBWorkerRemov"
  "eComponentOp\0224\n\020authority_change\030\016 \001(\0132\032"
  ".PBWorkerAuthorityChangeOp\0224\n\020component_"
  "update\030\017 \001(\0132\032.PBWorkerComponentUpdateOp"
  "\0222\n\017command_request\030\020 \001(\0132\031.PBWorkerComm"
  "andRequestOp\0224\n\020command_response\030\021 \001(\0132\032"
  ".PBWorkerCommandResponseOp\022N\n\036component_"
  "set_authority_change\030\022 \001(\0132&.PBWorkerCom"
  "ponentSetAuthorityChangeOp\"L\n\nPBWorkerOp"
  "\022 \n\007op_type\030\001 \001(\0162\017.PBWorkerOpType\022\034\n\002op"
  "\030\002 \001(\0132\020.PBWorkerOpUnion*\256\005\n\016PBWorkerOpT"
  "ype\022\035\n\031WORKER_OP_TYPE_DISCONNECT\020\001\022\036\n\032WO"
  "RKER_OP_TYPE_FLAG_UPDATE\020\002\022\036\n\032WORKER_OP_"
  "TYPE_LOG_MESSAGE\020\003\022\032\n\026WORKER_OP_TYPE_MET"
  "RICS\020\004\022#\n\037WORKER_OP_TYPE_CRITICAL_SECTIO"
  "N\020\005\022\035\n\031WORKER_OP_TYPE_ADD_ENTITY\020\006\022 \n\034WO"
  "RKER_OP_TYPE_REMOVE_ENTITY\020\007\022.\n*WORKER_O"
  "P_TYPE_RESERVE_ENTITY_IDS_RESPONSE\020\010\022)\n%"
  "WORKER_OP_TYPE_CREATE_ENTITY_RESPONSE\020\t\022"
  ")\n%WORKER_OP_TYPE_DELETE_ENTITY_RESPONSE"
  "\020\n\022(\n$WORKER_OP_TYPE_ENTITY_QUERY_RESPON"
  "SE\020\013\022 \n\034WORKER_OP_TYPE_ADD_COMPONENT\020\014\022#"
  "\n\037WORKER_OP_TYPE_REMOVE_COMPONENT\020\r\022#\n\037W"
  "ORKER_OP_TYPE_AUTHORITY_CHANGE\020\016\022#\n\037WORK"
  "ER_OP_TYPE_COMPONENT_UPDATE\020\017\022\"\n\036WORKER_"
  "OP_TYPE_COMMAND_REQUEST\020\020\022#\n\037WORKER_OP_T"
  "YPE_COMMAND_RESPONSE\020\021\0221\n-WORKER_OP_TYPE"
  "_COMPONENT_SET_AUTHORITY_CHANGE\020\022"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_WorkerCmd_2eproto_deps[2] = {
  &::descriptor_table_WorkerData_2eproto,
  &::descriptor_table_xCommond_2eproto,
};
static ::_pbi::once_flag descriptor_table_WorkerCmd_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_WorkerCmd_2eproto = {
    false, false, 3753, descriptor_table_protodef_WorkerCmd_2eproto,
    "WorkerCmd.proto",
    &descriptor_table_WorkerCmd_2eproto_once, descriptor_table_WorkerCmd_2eproto_deps, 2, 21,
    schemas, file_default_instances, TableStruct_WorkerCmd_2eproto::offsets,
    file_level_metadata_WorkerCmd_2eproto, file_level_enum_descriptors_WorkerCmd_2eproto,
    file_level_service_descriptors_WorkerCmd_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_WorkerCmd_2eproto_getter() {
  return &descriptor_table_WorkerCmd_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_WorkerCmd_2eproto(&descriptor_table_WorkerCmd_2eproto);
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PBWorkerOpType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_WorkerCmd_2eproto);
  return file_level_enum_descriptors_WorkerCmd_2eproto[0];
}
bool PBWorkerOpType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class PBWorkerCmd::_Internal {
 public:
  using HasBits = decltype(std::declval<PBWorkerCmd>()._impl_._has_bits_);
  static void set_has_cmd(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

PBWorkerCmd::PBWorkerCmd(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:PBWorkerCmd)
}
PBWorkerCmd::PBWorkerCmd(const PBWorkerCmd& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PBWorkerCmd* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.cmd_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.cmd_ = from._impl_.cmd_;
  // @@protoc_insertion_point(copy_constructor:PBWorkerCmd)
}

inline void PBWorkerCmd::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.cmd_){3}
  };
}

PBWorkerCmd::~PBWorkerCmd() {
  // @@protoc_insertion_point(destructor:PBWorkerCmd)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PBWorkerCmd::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PBWorkerCmd::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PBWorkerCmd::Clear() {
// @@protoc_insertion_point(message_clear_start:PBWorkerCmd)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.cmd_ = 3;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PBWorkerCmd::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .CmdType cmd = 1 [default = PB_WORK_CMD];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CmdType_IsValid(val))) {
            _internal_set_cmd(static_cast<::CmdType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PBWorkerCmd::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBWorkerCmd)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CmdType cmd = 1 [default = PB_WORK_CMD];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_cmd(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBWorkerCmd)
  return target;
}

size_t PBWorkerCmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBWorkerCmd)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CmdType cmd = 1 [default = PB_WORK_CMD];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_cmd());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PBWorkerCmd::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PBWorkerCmd::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PBWorkerCmd::GetClassData() const { return &_class_data_; }


void PBWorkerCmd::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PBWorkerCmd*>(&to_msg);
  auto& from = static_cast<const PBWorkerCmd&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PBWorkerCmd)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_cmd()) {
    _this->_internal_set_cmd(from._internal_cmd());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PBWorkerCmd::CopyFrom(const PBWorkerCmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBWorkerCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBWorkerCmd::IsInitialized() const {
  return true;
}

void PBWorkerCmd::InternalSwap(PBWorkerCmd* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.cmd_, other->_impl_.cmd_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PBWorkerCmd::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_WorkerCmd_2eproto_getter, &descriptor_table_WorkerCmd_2eproto_once,
      file_level_metadata_WorkerCmd_2eproto[0]);
}

// ===================================================================

class PBWorkerDisconnectOp::_Internal {
 public:
  using HasBits = decltype(std::declval<PBWorkerDisconnectOp>()._impl_._has_bits_);
  static void set_has_connection_status_code(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_reason(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

PBWorkerDisconnectOp::PBWorkerDisconnectOp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:PBWorkerDisconnectOp)
}
PBWorkerDisconnectOp::PBWorkerDisconnectOp(const PBWorkerDisconnectOp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PBWorkerDisconnectOp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.reason_){}
    , decltype(_impl_.connection_status_code_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.reason_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.reason_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_reason()) {
    _this->_impl_.reason_.Set(from._internal_reason(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.connection_status_code_ = from._impl_.connection_status_code_;
  // @@protoc_insertion_point(copy_constructor:PBWorkerDisconnectOp)
}

inline void PBWorkerDisconnectOp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.reason_){}
    , decltype(_impl_.connection_status_code_){0u}
  };
  _impl_.reason_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.reason_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PBWorkerDisconnectOp::~PBWorkerDisconnectOp() {
  // @@protoc_insertion_point(destructor:PBWorkerDisconnectOp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PBWorkerDisconnectOp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.reason_.Destroy();
}

void PBWorkerDisconnectOp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PBWorkerDisconnectOp::Clear() {
// @@protoc_insertion_point(message_clear_start:PBWorkerDisconnectOp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.reason_.ClearNonDefaultToEmpty();
  }
  _impl_.connection_status_code_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PBWorkerDisconnectOp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 connection_status_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_connection_status_code(&has_bits);
          _impl_.connection_status_code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string reason = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_reason();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "PBWorkerDisconnectOp.reason");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PBWorkerDisconnectOp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBWorkerDisconnectOp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 connection_status_code = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_connection_status_code(), target);
  }

  // optional string reason = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_reason().data(), static_cast<int>(this->_internal_reason().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "PBWorkerDisconnectOp.reason");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_reason(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBWorkerDisconnectOp)
  return target;
}

size_t PBWorkerDisconnectOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBWorkerDisconnectOp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string reason = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_reason());
    }

    // optional uint32 connection_status_code = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_connection_status_code());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PBWorkerDisconnectOp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PBWorkerDisconnectOp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PBWorkerDisconnectOp::GetClassData() const { return &_class_data_; }


void PBWorkerDisconnectOp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PBWorkerDisconnectOp*>(&to_msg);
  auto& from = static_cast<const PBWorkerDisconnectOp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PBWorkerDisconnectOp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_reason(from._internal_reason());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.connection_status_code_ = from._impl_.connection_status_code_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PBWorkerDisconnectOp::CopyFrom(const PBWorkerDisconnectOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBWorkerDisconnectOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBWorkerDisconnectOp::IsInitialized() const {
  return true;
}

void PBWorkerDisconnectOp::InternalSwap(PBWorkerDisconnectOp* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.reason_, lhs_arena,
      &other->_impl_.reason_, rhs_arena
  );
  swap(_impl_.connection_status_code_, other->_impl_.connection_status_code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PBWorkerDisconnectOp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_WorkerCmd_2eproto_getter, &descriptor_table_WorkerCmd_2eproto_once,
      file_level_metadata_WorkerCmd_2eproto[1]);
}

// ===================================================================

class PBWorkerFlagUpdateOp::_Internal {
 public:
  using HasBits = decltype(std::declval<PBWorkerFlagUpdateOp>()._impl_._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

PBWorkerFlagUpdateOp::PBWorkerFlagUpdateOp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:PBWorkerFlagUpdateOp)
}
PBWorkerFlagUpdateOp::PBWorkerFlagUpdateOp(const PBWorkerFlagUpdateOp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PBWorkerFlagUpdateOp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_){}
    , decltype(_impl_.value_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_name()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.value_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_value()) {
    _this->_impl_.value_.Set(from._internal_value(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:PBWorkerFlagUpdateOp)
}

inline void PBWorkerFlagUpdateOp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_){}
    , decltype(_impl_.value_){}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.value_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PBWorkerFlagUpdateOp::~PBWorkerFlagUpdateOp() {
  // @@protoc_insertion_point(destructor:PBWorkerFlagUpdateOp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PBWorkerFlagUpdateOp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.value_.Destroy();
}

void PBWorkerFlagUpdateOp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PBWorkerFlagUpdateOp::Clear() {
// @@protoc_insertion_point(message_clear_start:PBWorkerFlagUpdateOp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.value_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PBWorkerFlagUpdateOp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "PBWorkerFlagUpdateOp.name");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_value();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "PBWorkerFlagUpdateOp.value");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PBWorkerFlagUpdateOp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBWorkerFlagUpdateOp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "PBWorkerFlagUpdateOp.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_value().data(), static_cast<int>(this->_internal_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "PBWorkerFlagUpdateOp.value");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBWorkerFlagUpdateOp)
  return target;
}

size_t PBWorkerFlagUpdateOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBWorkerFlagUpdateOp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_name());
    }

    // optional string value = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_value());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PBWorkerFlagUpdateOp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PBWorkerFlagUpdateOp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PBWorkerFlagUpdateOp::GetClassData() const { return &_class_data_; }


void PBWorkerFlagUpdateOp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PBWorkerFlagUpdateOp*>(&to_msg);
  auto& from = static_cast<const PBWorkerFlagUpdateOp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PBWorkerFlagUpdateOp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_value(from._internal_value());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PBWorkerFlagUpdateOp::CopyFrom(const PBWorkerFlagUpdateOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBWorkerFlagUpdateOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBWorkerFlagUpdateOp::IsInitialized() const {
  return true;
}

void PBWorkerFlagUpdateOp::InternalSwap(PBWorkerFlagUpdateOp* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.value_, lhs_arena,
      &other->_impl_.value_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata PBWorkerFlagUpdateOp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_WorkerCmd_2eproto_getter, &descriptor_table_WorkerCmd_2eproto_once,
      file_level_metadata_WorkerCmd_2eproto[2]);
}

// ===================================================================

class PBWorkerLogMessageOp::_Internal {
 public:
  using HasBits = decltype(std::declval<PBWorkerLogMessageOp>()._impl_._has_bits_);
  static void set_has_level(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_message(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

PBWorkerLogMessageOp::PBWorkerLogMessageOp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:PBWorkerLogMessageOp)
}
PBWorkerLogMessageOp::PBWorkerLogMessageOp(const PBWorkerLogMessageOp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PBWorkerLogMessageOp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.message_){}
    , decltype(_impl_.level_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_message()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.level_ = from._impl_.level_;
  // @@protoc_insertion_point(copy_constructor:PBWorkerLogMessageOp)
}

inline void PBWorkerLogMessageOp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.message_){}
    , decltype(_impl_.level_){0}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PBWorkerLogMessageOp::~PBWorkerLogMessageOp() {
  // @@protoc_insertion_point(destructor:PBWorkerLogMessageOp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PBWorkerLogMessageOp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
}

void PBWorkerLogMessageOp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PBWorkerLogMessageOp::Clear() {
// @@protoc_insertion_point(message_clear_start:PBWorkerLogMessageOp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.message_.ClearNonDefaultToEmpty();
  }
  _impl_.level_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PBWorkerLogMessageOp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int32 level = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_level(&has_bits);
          _impl_.level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "PBWorkerLogMessageOp.message");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PBWorkerLogMessageOp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBWorkerLogMessageOp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 level = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_level(), target);
  }

  // optional string message = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "PBWorkerLogMessageOp.message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBWorkerLogMessageOp)
  return target;
}

size_t PBWorkerLogMessageOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBWorkerLogMessageOp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string message = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_message());
    }

    // optional int32 level = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_level());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PBWorkerLogMessageOp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PBWorkerLogMessageOp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PBWorkerLogMessageOp::GetClassData() const { return &_class_data_; }


void PBWorkerLogMessageOp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PBWorkerLogMessageOp*>(&to_msg);
  auto& from = static_cast<const PBWorkerLogMessageOp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PBWorkerLogMessageOp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_message(from._internal_message());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.level_ = from._impl_.level_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PBWorkerLogMessageOp::CopyFrom(const PBWorkerLogMessageOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBWorkerLogMessageOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBWorkerLogMessageOp::IsInitialized() const {
  return true;
}

void PBWorkerLogMessageOp::InternalSwap(PBWorkerLogMessageOp* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  swap(_impl_.level_, other->_impl_.level_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PBWorkerLogMessageOp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_WorkerCmd_2eproto_getter, &descriptor_table_WorkerCmd_2eproto_once,
      file_level_metadata_WorkerCmd_2eproto[3]);
}

// ===================================================================

class PBWorkerMetricsOp::_Internal {
 public:
  using HasBits = decltype(std::declval<PBWorkerMetricsOp>()._impl_._has_bits_);
  static const ::PBWorkerMetrics& metrics(const PBWorkerMetricsOp* msg);
  static void set_has_metrics(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::PBWorkerMetrics&
PBWorkerMetricsOp::_Internal::metrics(const PBWorkerMetricsOp* msg) {
  return *msg->_impl_.metrics_;
}
void PBWorkerMetricsOp::clear_metrics() {
  if (_impl_.metrics_ != nullptr) _impl_.metrics_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
PBWorkerMetricsOp::PBWorkerMetricsOp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:PBWorkerMetricsOp)
}
PBWorkerMetricsOp::PBWorkerMetricsOp(const PBWorkerMetricsOp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PBWorkerMetricsOp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.metrics_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metrics()) {
    _this->_impl_.metrics_ = new ::PBWorkerMetrics(*from._impl_.metrics_);
  }
  // @@protoc_insertion_point(copy_constructor:PBWorkerMetricsOp)
}

inline void PBWorkerMetricsOp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.metrics_){nullptr}
  };
}

PBWorkerMetricsOp::~PBWorkerMetricsOp() {
  // @@protoc_insertion_point(destructor:PBWorkerMetricsOp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PBWorkerMetricsOp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metrics_;
}

void PBWorkerMetricsOp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PBWorkerMetricsOp::Clear() {
// @@protoc_insertion_point(message_clear_start:PBWorkerMetricsOp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.metrics_ != nullptr);
    _impl_.metrics_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PBWorkerMetricsOp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .PBWorkerMetrics metrics = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metrics(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PBWorkerMetricsOp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBWorkerMetricsOp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .PBWorkerMetrics metrics = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metrics(this),
        _Internal::metrics(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBWorkerMetricsOp)
  return target;
}

size_t PBWorkerMetricsOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBWorkerMetricsOp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .PBWorkerMetrics metrics = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metrics_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PBWorkerMetricsOp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PBWorkerMetricsOp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PBWorkerMetricsOp::GetClassData() const { return &_class_data_; }


void PBWorkerMetricsOp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PBWorkerMetricsOp*>(&to_msg);
  auto& from = static_cast<const PBWorkerMetricsOp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PBWorkerMetricsOp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metrics()) {
    _this->_internal_mutable_metrics()->::PBWorkerMetrics::MergeFrom(
        from._internal_metrics());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PBWorkerMetricsOp::CopyFrom(const PBWorkerMetricsOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBWorkerMetricsOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBWorkerMetricsOp::IsInitialized() const {
  return true;
}

void PBWorkerMetricsOp::InternalSwap(PBWorkerMetricsOp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.metrics_, other->_impl_.metrics_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PBWorkerMetricsOp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_WorkerCmd_2eproto_getter, &descriptor_table_WorkerCmd_2eproto_once,
      file_level_metadata_WorkerCmd_2eproto[4]);
}

// ===================================================================

class PBWorkerCriticalSectionOp::_Internal {
 public:
  using HasBits = decltype(std::declval<PBWorkerCriticalSectionOp>()._impl_._has_bits_);
  static void set_has_in_critical_section(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

PBWorkerCriticalSectionOp::PBWorkerCriticalSectionOp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:PBWorkerCriticalSectionOp)
}
PBWorkerCriticalSectionOp::PBWorkerCriticalSectionOp(const PBWorkerCriticalSectionOp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PBWorkerCriticalSectionOp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.in_critical_section_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.in_critical_section_ = from._impl_.in_critical_section_;
  // @@protoc_insertion_point(copy_constructor:PBWorkerCriticalSectionOp)
}

inline void PBWorkerCriticalSectionOp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.in_critical_section_){0u}
  };
}

PBWorkerCriticalSectionOp::~PBWorkerCriticalSectionOp() {
  // @@protoc_insertion_point(destructor:PBWorkerCriticalSectionOp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PBWorkerCriticalSectionOp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PBWorkerCriticalSectionOp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PBWorkerCriticalSectionOp::Clear() {
// @@protoc_insertion_point(message_clear_start:PBWorkerCriticalSectionOp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.in_critical_section_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PBWorkerCriticalSectionOp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 in_critical_section = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_in_critical_section(&has_bits);
          _impl_.in_critical_section_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PBWorkerCriticalSectionOp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBWorkerCriticalSectionOp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 in_critical_section = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_in_critical_section(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBWorkerCriticalSectionOp)
  return target;
}

size_t PBWorkerCriticalSectionOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBWorkerCriticalSectionOp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 in_critical_section = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_in_critical_section());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PBWorkerCriticalSectionOp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PBWorkerCriticalSectionOp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PBWorkerCriticalSectionOp::GetClassData() const { return &_class_data_; }


void PBWorkerCriticalSectionOp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PBWorkerCriticalSectionOp*>(&to_msg);
  auto& from = static_cast<const PBWorkerCriticalSectionOp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PBWorkerCriticalSectionOp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_in_critical_section()) {
    _this->_internal_set_in_critical_section(from._internal_in_critical_section());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PBWorkerCriticalSectionOp::CopyFrom(const PBWorkerCriticalSectionOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBWorkerCriticalSectionOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBWorkerCriticalSectionOp::IsInitialized() const {
  return true;
}

void PBWorkerCriticalSectionOp::InternalSwap(PBWorkerCriticalSectionOp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.in_critical_section_, other->_impl_.in_critical_section_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PBWorkerCriticalSectionOp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_WorkerCmd_2eproto_getter, &descriptor_table_WorkerCmd_2eproto_once,
      file_level_metadata_WorkerCmd_2eproto[5]);
}

// ===================================================================

class PBWorkerAddEntityOp::_Internal {
 public:
  using HasBits = decltype(std::declval<PBWorkerAddEntityOp>()._impl_._has_bits_);
  static void set_has_entity_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

PBWorkerAddEntityOp::PBWorkerAddEntityOp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:PBWorkerAddEntityOp)
}
PBWorkerAddEntityOp::PBWorkerAddEntityOp(const PBWorkerAddEntityOp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PBWorkerAddEntityOp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.entity_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.entity_id_ = from._impl_.entity_id_;
  // @@protoc_insertion_point(copy_constructor:PBWorkerAddEntityOp)
}

inline void PBWorkerAddEntityOp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.entity_id_){int64_t{0}}
  };
}

PBWorkerAddEntityOp::~PBWorkerAddEntityOp() {
  // @@protoc_insertion_point(destructor:PBWorkerAddEntityOp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PBWorkerAddEntityOp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PBWorkerAddEntityOp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PBWorkerAddEntityOp::Clear() {
// @@protoc_insertion_point(message_clear_start:PBWorkerAddEntityOp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entity_id_ = int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PBWorkerAddEntityOp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int64 entity_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_entity_id(&has_bits);
          _impl_.entity_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PBWorkerAddEntityOp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBWorkerAddEntityOp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 entity_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_entity_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBWorkerAddEntityOp)
  return target;
}

size_t PBWorkerAddEntityOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBWorkerAddEntityOp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int64 entity_id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_entity_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PBWorkerAddEntityOp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PBWorkerAddEntityOp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PBWorkerAddEntityOp::GetClassData() const { return &_class_data_; }


void PBWorkerAddEntityOp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PBWorkerAddEntityOp*>(&to_msg);
  auto& from = static_cast<const PBWorkerAddEntityOp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PBWorkerAddEntityOp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_entity_id()) {
    _this->_internal_set_entity_id(from._internal_entity_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PBWorkerAddEntityOp::CopyFrom(const PBWorkerAddEntityOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBWorkerAddEntityOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBWorkerAddEntityOp::IsInitialized() const {
  return true;
}

void PBWorkerAddEntityOp::InternalSwap(PBWorkerAddEntityOp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.entity_id_, other->_impl_.entity_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PBWorkerAddEntityOp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_WorkerCmd_2eproto_getter, &descriptor_table_WorkerCmd_2eproto_once,
      file_level_metadata_WorkerCmd_2eproto[6]);
}

// ===================================================================

class PBWorkerRemoveEntityOp::_Internal {
 public:
  using HasBits = decltype(std::declval<PBWorkerRemoveEntityOp>()._impl_._has_bits_);
  static void set_has_entity_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

PBWorkerRemoveEntityOp::PBWorkerRemoveEntityOp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:PBWorkerRemoveEntityOp)
}
PBWorkerRemoveEntityOp::PBWorkerRemoveEntityOp(const PBWorkerRemoveEntityOp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PBWorkerRemoveEntityOp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.entity_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.entity_id_ = from._impl_.entity_id_;
  // @@protoc_insertion_point(copy_constructor:PBWorkerRemoveEntityOp)
}

inline void PBWorkerRemoveEntityOp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.entity_id_){int64_t{0}}
  };
}

PBWorkerRemoveEntityOp::~PBWorkerRemoveEntityOp() {
  // @@protoc_insertion_point(destructor:PBWorkerRemoveEntityOp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PBWorkerRemoveEntityOp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PBWorkerRemoveEntityOp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PBWorkerRemoveEntityOp::Clear() {
// @@protoc_insertion_point(message_clear_start:PBWorkerRemoveEntityOp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entity_id_ = int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PBWorkerRemoveEntityOp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int64 entity_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_entity_id(&has_bits);
          _impl_.entity_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PBWorkerRemoveEntityOp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBWorkerRemoveEntityOp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 entity_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_entity_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBWorkerRemoveEntityOp)
  return target;
}

size_t PBWorkerRemoveEntityOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBWorkerRemoveEntityOp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int64 entity_id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_entity_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PBWorkerRemoveEntityOp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PBWorkerRemoveEntityOp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PBWorkerRemoveEntityOp::GetClassData() const { return &_class_data_; }


void PBWorkerRemoveEntityOp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PBWorkerRemoveEntityOp*>(&to_msg);
  auto& from = static_cast<const PBWorkerRemoveEntityOp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PBWorkerRemoveEntityOp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_entity_id()) {
    _this->_internal_set_entity_id(from._internal_entity_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PBWorkerRemoveEntityOp::CopyFrom(const PBWorkerRemoveEntityOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBWorkerRemoveEntityOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBWorkerRemoveEntityOp::IsInitialized() const {
  return true;
}

void PBWorkerRemoveEntityOp::InternalSwap(PBWorkerRemoveEntityOp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.entity_id_, other->_impl_.entity_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PBWorkerRemoveEntityOp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_WorkerCmd_2eproto_getter, &descriptor_table_WorkerCmd_2eproto_once,
      file_level_metadata_WorkerCmd_2eproto[7]);
}

// ===================================================================

class PBWorkerReserveEntityIdsResponseOp::_Internal {
 public:
  using HasBits = decltype(std::declval<PBWorkerReserveEntityIdsResponseOp>()._impl_._has_bits_);
  static void set_has_request_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_status_code(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_message(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_first_entity_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_number_of_entity_ids(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

PBWorkerReserveEntityIdsResponseOp::PBWorkerReserveEntityIdsResponseOp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:PBWorkerReserveEntityIdsResponseOp)
}
PBWorkerReserveEntityIdsResponseOp::PBWorkerReserveEntityIdsResponseOp(const PBWorkerReserveEntityIdsResponseOp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PBWorkerReserveEntityIdsResponseOp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.message_){}
    , decltype(_impl_.request_id_){}
    , decltype(_impl_.first_entity_id_){}
    , decltype(_impl_.number_of_entity_ids_){}
    , decltype(_impl_.status_code_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_message()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.request_id_, &from._impl_.request_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.status_code_) -
    reinterpret_cast<char*>(&_impl_.request_id_)) + sizeof(_impl_.status_code_));
  // @@protoc_insertion_point(copy_constructor:PBWorkerReserveEntityIdsResponseOp)
}

inline void PBWorkerReserveEntityIdsResponseOp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.message_){}
    , decltype(_impl_.request_id_){int64_t{0}}
    , decltype(_impl_.first_entity_id_){int64_t{0}}
    , decltype(_impl_.number_of_entity_ids_){0u}
    , decltype(_impl_.status_code_){1}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PBWorkerReserveEntityIdsResponseOp::~PBWorkerReserveEntityIdsResponseOp() {
  // @@protoc_insertion_point(destructor:PBWorkerReserveEntityIdsResponseOp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PBWorkerReserveEntityIdsResponseOp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
}

void PBWorkerReserveEntityIdsResponseOp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PBWorkerReserveEntityIdsResponseOp::Clear() {
// @@protoc_insertion_point(message_clear_start:PBWorkerReserveEntityIdsResponseOp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.message_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000001eu) {
    ::memset(&_impl_.request_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.number_of_entity_ids_) -
        reinterpret_cast<char*>(&_impl_.request_id_)) + sizeof(_impl_.number_of_entity_ids_));
    _impl_.status_code_ = 1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PBWorkerReserveEntityIdsResponseOp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int64 request_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_request_id(&has_bits);
          _impl_.request_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .PBWorkerStatusCode status_code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::PBWorkerStatusCode_IsValid(val))) {
            _internal_set_status_code(static_cast<::PBWorkerStatusCode>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional string message = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "PBWorkerReserveEntityIdsResponseOp.message");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional int64 first_entity_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_first_entity_id(&has_bits);
          _impl_.first_entity_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 number_of_entity_ids = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_number_of_entity_ids(&has_bits);
          _impl_.number_of_entity_ids_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PBWorkerReserveEntityIdsResponseOp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBWorkerReserveEntityIdsResponseOp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 request_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_request_id(), target);
  }

  // optional .PBWorkerStatusCode status_code = 2;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_status_code(), target);
  }

  // optional string message = 3;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "PBWorkerReserveEntityIdsResponseOp.message");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_message(), target);
  }

  // optional int64 first_entity_id = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(4, this->_internal_first_entity_id(), target);
  }

  // optional uint32 number_of_entity_ids = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(5, this->_internal_number_of_entity_ids(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBWorkerReserveEntityIdsResponseOp)
  return target;
}

size_t PBWorkerReserveEntityIdsResponseOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBWorkerReserveEntityIdsResponseOp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string message = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_message());
    }

    // optional int64 request_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_request_id());
    }

    // optional int64 first_entity_id = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_first_entity_id());
    }

    // optional uint32 number_of_entity_ids = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_number_of_entity_ids());
    }

    // optional .PBWorkerStatusCode status_code = 2;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_status_code());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PBWorkerReserveEntityIdsResponseOp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PBWorkerReserveEntityIdsResponseOp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PBWorkerReserveEntityIdsResponseOp::GetClassData() const { return &_class_data_; }


void PBWorkerReserveEntityIdsResponseOp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PBWorkerReserveEntityIdsResponseOp*>(&to_msg);
  auto& from = static_cast<const PBWorkerReserveEntityIdsResponseOp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PBWorkerReserveEntityIdsResponseOp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_message(from._internal_message());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.request_id_ = from._impl_.request_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.first_entity_id_ = from._impl_.first_entity_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.number_of_entity_ids_ = from._impl_.number_of_entity_ids_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.status_code_ = from._impl_.status_code_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PBWorkerReserveEntityIdsResponseOp::CopyFrom(const PBWorkerReserveEntityIdsResponseOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBWorkerReserveEntityIdsResponseOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBWorkerReserveEntityIdsResponseOp::IsInitialized() const {
  return true;
}

void PBWorkerReserveEntityIdsResponseOp::InternalSwap(PBWorkerReserveEntityIdsResponseOp* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PBWorkerReserveEntityIdsResponseOp, _impl_.number_of_entity_ids_)
      + sizeof(PBWorkerReserveEntityIdsResponseOp::_impl_.number_of_entity_ids_)
      - PROTOBUF_FIELD_OFFSET(PBWorkerReserveEntityIdsResponseOp, _impl_.request_id_)>(
          reinterpret_cast<char*>(&_impl_.request_id_),
          reinterpret_cast<char*>(&other->_impl_.request_id_));
  swap(_impl_.status_code_, other->_impl_.status_code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PBWorkerReserveEntityIdsResponseOp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_WorkerCmd_2eproto_getter, &descriptor_table_WorkerCmd_2eproto_once,
      file_level_metadata_WorkerCmd_2eproto[8]);
}

// ===================================================================

class PBWorkerCreateEntityResponseOp::_Internal {
 public:
  using HasBits = decltype(std::declval<PBWorkerCreateEntityResponseOp>()._impl_._has_bits_);
  static void set_has_request_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_status_code(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_message(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_entity_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

PBWorkerCreateEntityResponseOp::PBWorkerCreateEntityResponseOp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:PBWorkerCreateEntityResponseOp)
}
PBWorkerCreateEntityResponseOp::PBWorkerCreateEntityResponseOp(const PBWorkerCreateEntityResponseOp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PBWorkerCreateEntityResponseOp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.message_){}
    , decltype(_impl_.request_id_){}
    , decltype(_impl_.entity_id_){}
    , decltype(_impl_.status_code_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_message()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.request_id_, &from._impl_.request_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.status_code_) -
    reinterpret_cast<char*>(&_impl_.request_id_)) + sizeof(_impl_.status_code_));
  // @@protoc_insertion_point(copy_constructor:PBWorkerCreateEntityResponseOp)
}

inline void PBWorkerCreateEntityResponseOp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.message_){}
    , decltype(_impl_.request_id_){int64_t{0}}
    , decltype(_impl_.entity_id_){int64_t{0}}
    , decltype(_impl_.status_code_){1}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PBWorkerCreateEntityResponseOp::~PBWorkerCreateEntityResponseOp() {
  // @@protoc_insertion_point(destructor:PBWorkerCreateEntityResponseOp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PBWorkerCreateEntityResponseOp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
}

void PBWorkerCreateEntityResponseOp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PBWorkerCreateEntityResponseOp::Clear() {
// @@protoc_insertion_point(message_clear_start:PBWorkerCreateEntityResponseOp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.message_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&_impl_.request_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.entity_id_) -
        reinterpret_cast<char*>(&_impl_.request_id_)) + sizeof(_impl_.entity_id_));
    _impl_.status_code_ = 1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PBWorkerCreateEntityResponseOp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int64 request_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_request_id(&has_bits);
          _impl_.request_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .PBWorkerStatusCode status_code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::PBWorkerStatusCode_IsValid(val))) {
            _internal_set_status_code(static_cast<::PBWorkerStatusCode>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional string message = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "PBWorkerCreateEntityResponseOp.message");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional int64 entity_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_entity_id(&has_bits);
          _impl_.entity_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PBWorkerCreateEntityResponseOp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBWorkerCreateEntityResponseOp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 request_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_request_id(), target);
  }

  // optional .PBWorkerStatusCode status_code = 2;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_status_code(), target);
  }

  // optional string message = 3;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "PBWorkerCreateEntityResponseOp.message");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_message(), target);
  }

  // optional int64 entity_id = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(4, this->_internal_entity_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBWorkerCreateEntityResponseOp)
  return target;
}

size_t PBWorkerCreateEntityResponseOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBWorkerCreateEntityResponseOp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string message = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_message());
    }

    // optional int64 request_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_request_id());
    }

    // optional int64 entity_id = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_entity_id());
    }

    // optional .PBWorkerStatusCode status_code = 2;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_status_code());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PBWorkerCreateEntityResponseOp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PBWorkerCreateEntityResponseOp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PBWorkerCreateEntityResponseOp::GetClassData() const { return &_class_data_; }


void PBWorkerCreateEntityResponseOp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PBWorkerCreateEntityResponseOp*>(&to_msg);
  auto& from = static_cast<const PBWorkerCreateEntityResponseOp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PBWorkerCreateEntityResponseOp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_message(from._internal_message());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.request_id_ = from._impl_.request_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.entity_id_ = from._impl_.entity_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.status_code_ = from._impl_.status_code_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PBWorkerCreateEntityResponseOp::CopyFrom(const PBWorkerCreateEntityResponseOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBWorkerCreateEntityResponseOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBWorkerCreateEntityResponseOp::IsInitialized() const {
  return true;
}

void PBWorkerCreateEntityResponseOp::InternalSwap(PBWorkerCreateEntityResponseOp* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PBWorkerCreateEntityResponseOp, _impl_.entity_id_)
      + sizeof(PBWorkerCreateEntityResponseOp::_impl_.entity_id_)
      - PROTOBUF_FIELD_OFFSET(PBWorkerCreateEntityResponseOp, _impl_.request_id_)>(
          reinterpret_cast<char*>(&_impl_.request_id_),
          reinterpret_cast<char*>(&other->_impl_.request_id_));
  swap(_impl_.status_code_, other->_impl_.status_code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PBWorkerCreateEntityResponseOp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_WorkerCmd_2eproto_getter, &descriptor_table_WorkerCmd_2eproto_once,
      file_level_metadata_WorkerCmd_2eproto[9]);
}

// ===================================================================

class PBWorkerDeleteEntityResponseOp::_Internal {
 public:
  using HasBits = decltype(std::declval<PBWorkerDeleteEntityResponseOp>()._impl_._has_bits_);
  static void set_has_request_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_entity_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_status_code(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_message(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

PBWorkerDeleteEntityResponseOp::PBWorkerDeleteEntityResponseOp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:PBWorkerDeleteEntityResponseOp)
}
PBWorkerDeleteEntityResponseOp::PBWorkerDeleteEntityResponseOp(const PBWorkerDeleteEntityResponseOp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PBWorkerDeleteEntityResponseOp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.message_){}
    , decltype(_impl_.request_id_){}
    , decltype(_impl_.entity_id_){}
    , decltype(_impl_.status_code_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_message()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.request_id_, &from._impl_.request_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.status_code_) -
    reinterpret_cast<char*>(&_impl_.request_id_)) + sizeof(_impl_.status_code_));
  // @@protoc_insertion_point(copy_constructor:PBWorkerDeleteEntityResponseOp)
}

inline void PBWorkerDeleteEntityResponseOp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.message_){}
    , decltype(_impl_.request_id_){int64_t{0}}
    , decltype(_impl_.entity_id_){int64_t{0}}
    , decltype(_impl_.status_code_){1}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PBWorkerDeleteEntityResponseOp::~PBWorkerDeleteEntityResponseOp() {
  // @@protoc_insertion_point(destructor:PBWorkerDeleteEntityResponseOp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PBWorkerDeleteEntityResponseOp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
}

void PBWorkerDeleteEntityResponseOp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PBWorkerDeleteEntityResponseOp::Clear() {
// @@protoc_insertion_point(message_clear_start:PBWorkerDeleteEntityResponseOp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.message_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&_impl_.request_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.entity_id_) -
        reinterpret_cast<char*>(&_impl_.request_id_)) + sizeof(_impl_.entity_id_));
    _impl_.status_code_ = 1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PBWorkerDeleteEntityResponseOp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int64 request_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_request_id(&has_bits);
          _impl_.request_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 entity_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_entity_id(&has_bits);
          _impl_.entity_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .PBWorkerStatusCode status_code = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::PBWorkerStatusCode_IsValid(val))) {
            _internal_set_status_code(static_cast<::PBWorkerStatusCode>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional string message = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "PBWorkerDeleteEntityResponseOp.message");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PBWorkerDeleteEntityResponseOp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBWorkerDeleteEntityResponseOp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 request_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_request_id(), target);
  }

  // optional int64 entity_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_entity_id(), target);
  }

  // optional .PBWorkerStatusCode status_code = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_status_code(), target);
  }

  // optional string message = 4;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "PBWorkerDeleteEntityResponseOp.message");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBWorkerDeleteEntityResponseOp)
  return target;
}

size_t PBWorkerDeleteEntityResponseOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBWorkerDeleteEntityResponseOp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string message = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_message());
    }

    // optional int64 request_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_request_id());
    }

    // optional int64 entity_id = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_entity_id());
    }

    // optional .PBWorkerStatusCode status_code = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_status_code());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PBWorkerDeleteEntityResponseOp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PBWorkerDeleteEntityResponseOp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PBWorkerDeleteEntityResponseOp::GetClassData() const { return &_class_data_; }


void PBWorkerDeleteEntityResponseOp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PBWorkerDeleteEntityResponseOp*>(&to_msg);
  auto& from = static_cast<const PBWorkerDeleteEntityResponseOp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PBWorkerDeleteEntityResponseOp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_message(from._internal_message());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.request_id_ = from._impl_.request_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.entity_id_ = from._impl_.entity_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.status_code_ = from._impl_.status_code_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PBWorkerDeleteEntityResponseOp::CopyFrom(const PBWorkerDeleteEntityResponseOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBWorkerDeleteEntityResponseOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBWorkerDeleteEntityResponseOp::IsInitialized() const {
  return true;
}

void PBWorkerDeleteEntityResponseOp::InternalSwap(PBWorkerDeleteEntityResponseOp* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PBWorkerDeleteEntityResponseOp, _impl_.entity_id_)
      + sizeof(PBWorkerDeleteEntityResponseOp::_impl_.entity_id_)
      - PROTOBUF_FIELD_OFFSET(PBWorkerDeleteEntityResponseOp, _impl_.request_id_)>(
          reinterpret_cast<char*>(&_impl_.request_id_),
          reinterpret_cast<char*>(&other->_impl_.request_id_));
  swap(_impl_.status_code_, other->_impl_.status_code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PBWorkerDeleteEntityResponseOp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_WorkerCmd_2eproto_getter, &descriptor_table_WorkerCmd_2eproto_once,
      file_level_metadata_WorkerCmd_2eproto[10]);
}

// ===================================================================

class PBWorkerEntityQueryResponseOp::_Internal {
 public:
  using HasBits = decltype(std::declval<PBWorkerEntityQueryResponseOp>()._impl_._has_bits_);
  static void set_has_request_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_status_code(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_message(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_result_count(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

void PBWorkerEntityQueryResponseOp::clear_results() {
  _impl_.results_.Clear();
}
PBWorkerEntityQueryResponseOp::PBWorkerEntityQueryResponseOp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:PBWorkerEntityQueryResponseOp)
}
PBWorkerEntityQueryResponseOp::PBWorkerEntityQueryResponseOp(const PBWorkerEntityQueryResponseOp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PBWorkerEntityQueryResponseOp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.results_){from._impl_.results_}
    , decltype(_impl_.message_){}
    , decltype(_impl_.request_id_){}
    , decltype(_impl_.result_count_){}
    , decltype(_impl_.status_code_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_message()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.request_id_, &from._impl_.request_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.status_code_) -
    reinterpret_cast<char*>(&_impl_.request_id_)) + sizeof(_impl_.status_code_));
  // @@protoc_insertion_point(copy_constructor:PBWorkerEntityQueryResponseOp)
}

inline void PBWorkerEntityQueryResponseOp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.results_){arena}
    , decltype(_impl_.message_){}
    , decltype(_impl_.request_id_){int64_t{0}}
    , decltype(_impl_.result_count_){0u}
    , decltype(_impl_.status_code_){1}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PBWorkerEntityQueryResponseOp::~PBWorkerEntityQueryResponseOp() {
  // @@protoc_insertion_point(destructor:PBWorkerEntityQueryResponseOp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PBWorkerEntityQueryResponseOp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.results_.~RepeatedPtrField();
  _impl_.message_.Destroy();
}

void PBWorkerEntityQueryResponseOp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PBWorkerEntityQueryResponseOp::Clear() {
// @@protoc_insertion_point(message_clear_start:PBWorkerEntityQueryResponseOp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.results_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.message_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&_impl_.request_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.result_count_) -
        reinterpret_cast<char*>(&_impl_.request_id_)) + sizeof(_impl_.result_count_));
    _impl_.status_code_ = 1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PBWorkerEntityQueryResponseOp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int64 request_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_request_id(&has_bits);
          _impl_.request_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .PBWorkerStatusCode status_code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::PBWorkerStatusCode_IsValid(val))) {
            _internal_set_status_code(static_cast<::PBWorkerStatusCode>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional string message = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "PBWorkerEntityQueryResponseOp.message");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional uint32 result_count = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_result_count(&has_bits);
          _impl_.result_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .PBWorkerEntity results = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_results(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PBWorkerEntityQueryResponseOp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBWorkerEntityQueryResponseOp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 request_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_request_id(), target);
  }

  // optional .PBWorkerStatusCode status_code = 2;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_status_code(), target);
  }

  // optional string message = 3;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "PBWorkerEntityQueryResponseOp.message");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_message(), target);
  }

  // optional uint32 result_count = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_result_count(), target);
  }

  // repeated .PBWorkerEntity results = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_results_size()); i < n; i++) {
    const auto& repfield = this->_internal_results(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBWorkerEntityQueryResponseOp)
  return target;
}

size_t PBWorkerEntityQueryResponseOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBWorkerEntityQueryResponseOp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PBWorkerEntity results = 5;
  total_size += 1UL * this->_internal_results_size();
  for (const auto& msg : this->_impl_.results_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string message = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_message());
    }

    // optional int64 request_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_request_id());
    }

    // optional uint32 result_count = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_result_count());
    }

    // optional .PBWorkerStatusCode status_code = 2;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_status_code());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PBWorkerEntityQueryResponseOp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PBWorkerEntityQueryResponseOp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PBWorkerEntityQueryResponseOp::GetClassData() const { return &_class_data_; }


void PBWorkerEntityQueryResponseOp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PBWorkerEntityQueryResponseOp*>(&to_msg);
  auto& from = static_cast<const PBWorkerEntityQueryResponseOp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PBWorkerEntityQueryResponseOp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.results_.MergeFrom(from._impl_.results_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_message(from._internal_message());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.request_id_ = from._impl_.request_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.result_count_ = from._impl_.result_count_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.status_code_ = from._impl_.status_code_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PBWorkerEntityQueryResponseOp::CopyFrom(const PBWorkerEntityQueryResponseOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBWorkerEntityQueryResponseOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBWorkerEntityQueryResponseOp::IsInitialized() const {
  return true;
}

void PBWorkerEntityQueryResponseOp::InternalSwap(PBWorkerEntityQueryResponseOp* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.results_.InternalSwap(&other->_impl_.results_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PBWorkerEntityQueryResponseOp, _impl_.result_count_)
      + sizeof(PBWorkerEntityQueryResponseOp::_impl_.result_count_)
      - PROTOBUF_FIELD_OFFSET(PBWorkerEntityQueryResponseOp, _impl_.request_id_)>(
          reinterpret_cast<char*>(&_impl_.request_id_),
          reinterpret_cast<char*>(&other->_impl_.request_id_));
  swap(_impl_.status_code_, other->_impl_.status_code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PBWorkerEntityQueryResponseOp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_WorkerCmd_2eproto_getter, &descriptor_table_WorkerCmd_2eproto_once,
      file_level_metadata_WorkerCmd_2eproto[11]);
}

// ===================================================================

class PBWorkerAddComponentOp::_Internal {
 public:
  using HasBits = decltype(std::declval<PBWorkerAddComponentOp>()._impl_._has_bits_);
  static void set_has_entity_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::PBWorkerComponentData& data(const PBWorkerAddComponentOp* msg);
  static void set_has_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::PBWorkerComponentData&
PBWorkerAddComponentOp::_Internal::data(const PBWorkerAddComponentOp* msg) {
  return *msg->_impl_.data_;
}
void PBWorkerAddComponentOp::clear_data() {
  if (_impl_.data_ != nullptr) _impl_.data_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
PBWorkerAddComponentOp::PBWorkerAddComponentOp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:PBWorkerAddComponentOp)
}
PBWorkerAddComponentOp::PBWorkerAddComponentOp(const PBWorkerAddComponentOp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PBWorkerAddComponentOp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.data_){nullptr}
    , decltype(_impl_.entity_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    _this->_impl_.data_ = new ::PBWorkerComponentData(*from._impl_.data_);
  }
  _this->_impl_.entity_id_ = from._impl_.entity_id_;
  // @@protoc_insertion_point(copy_constructor:PBWorkerAddComponentOp)
}

inline void PBWorkerAddComponentOp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.data_){nullptr}
    , decltype(_impl_.entity_id_){int64_t{0}}
  };
}

PBWorkerAddComponentOp::~PBWorkerAddComponentOp() {
  // @@protoc_insertion_point(destructor:PBWorkerAddComponentOp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PBWorkerAddComponentOp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.data_;
}

void PBWorkerAddComponentOp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PBWorkerAddComponentOp::Clear() {
// @@protoc_insertion_point(message_clear_start:PBWorkerAddComponentOp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.data_ != nullptr);
    _impl_.data_->Clear();
  }
  _impl_.entity_id_ = int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PBWorkerAddComponentOp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int64 entity_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_entity_id(&has_bits);
          _impl_.entity_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .PBWorkerComponentData data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PBWorkerAddComponentOp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBWorkerAddComponentOp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 entity_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_entity_id(), target);
  }

  // optional .PBWorkerComponentData data = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBWorkerAddComponentOp)
  return target;
}

size_t PBWorkerAddComponentOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBWorkerAddComponentOp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .PBWorkerComponentData data = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.data_);
    }

    // optional int64 entity_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_entity_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PBWorkerAddComponentOp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PBWorkerAddComponentOp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PBWorkerAddComponentOp::GetClassData() const { return &_class_data_; }


void PBWorkerAddComponentOp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PBWorkerAddComponentOp*>(&to_msg);
  auto& from = static_cast<const PBWorkerAddComponentOp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PBWorkerAddComponentOp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_data()->::PBWorkerComponentData::MergeFrom(
          from._internal_data());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.entity_id_ = from._impl_.entity_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PBWorkerAddComponentOp::CopyFrom(const PBWorkerAddComponentOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBWorkerAddComponentOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBWorkerAddComponentOp::IsInitialized() const {
  return true;
}

void PBWorkerAddComponentOp::InternalSwap(PBWorkerAddComponentOp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PBWorkerAddComponentOp, _impl_.entity_id_)
      + sizeof(PBWorkerAddComponentOp::_impl_.entity_id_)
      - PROTOBUF_FIELD_OFFSET(PBWorkerAddComponentOp, _impl_.data_)>(
          reinterpret_cast<char*>(&_impl_.data_),
          reinterpret_cast<char*>(&other->_impl_.data_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PBWorkerAddComponentOp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_WorkerCmd_2eproto_getter, &descriptor_table_WorkerCmd_2eproto_once,
      file_level_metadata_WorkerCmd_2eproto[12]);
}

// ===================================================================

class PBWorkerRemoveComponentOp::_Internal {
 public:
  using HasBits = decltype(std::declval<PBWorkerRemoveComponentOp>()._impl_._has_bits_);
  static void set_has_entity_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_component_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

PBWorkerRemoveComponentOp::PBWorkerRemoveComponentOp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:PBWorkerRemoveComponentOp)
}
PBWorkerRemoveComponentOp::PBWorkerRemoveComponentOp(const PBWorkerRemoveComponentOp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PBWorkerRemoveComponentOp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.entity_id_){}
    , decltype(_impl_.component_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.entity_id_, &from._impl_.entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.component_id_) -
    reinterpret_cast<char*>(&_impl_.entity_id_)) + sizeof(_impl_.component_id_));
  // @@protoc_insertion_point(copy_constructor:PBWorkerRemoveComponentOp)
}

inline void PBWorkerRemoveComponentOp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.entity_id_){int64_t{0}}
    , decltype(_impl_.component_id_){0u}
  };
}

PBWorkerRemoveComponentOp::~PBWorkerRemoveComponentOp() {
  // @@protoc_insertion_point(destructor:PBWorkerRemoveComponentOp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PBWorkerRemoveComponentOp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PBWorkerRemoveComponentOp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PBWorkerRemoveComponentOp::Clear() {
// @@protoc_insertion_point(message_clear_start:PBWorkerRemoveComponentOp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.entity_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.component_id_) -
        reinterpret_cast<char*>(&_impl_.entity_id_)) + sizeof(_impl_.component_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PBWorkerRemoveComponentOp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int64 entity_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_entity_id(&has_bits);
          _impl_.entity_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 component_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_component_id(&has_bits);
          _impl_.component_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PBWorkerRemoveComponentOp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBWorkerRemoveComponentOp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 entity_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_entity_id(), target);
  }

  // optional uint32 component_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_component_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBWorkerRemoveComponentOp)
  return target;
}

size_t PBWorkerRemoveComponentOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBWorkerRemoveComponentOp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int64 entity_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_entity_id());
    }

    // optional uint32 component_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_component_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PBWorkerRemoveComponentOp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PBWorkerRemoveComponentOp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PBWorkerRemoveComponentOp::GetClassData() const { return &_class_data_; }


void PBWorkerRemoveComponentOp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PBWorkerRemoveComponentOp*>(&to_msg);
  auto& from = static_cast<const PBWorkerRemoveComponentOp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PBWorkerRemoveComponentOp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.entity_id_ = from._impl_.entity_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.component_id_ = from._impl_.component_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PBWorkerRemoveComponentOp::CopyFrom(const PBWorkerRemoveComponentOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBWorkerRemoveComponentOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBWorkerRemoveComponentOp::IsInitialized() const {
  return true;
}

void PBWorkerRemoveComponentOp::InternalSwap(PBWorkerRemoveComponentOp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PBWorkerRemoveComponentOp, _impl_.component_id_)
      + sizeof(PBWorkerRemoveComponentOp::_impl_.component_id_)
      - PROTOBUF_FIELD_OFFSET(PBWorkerRemoveComponentOp, _impl_.entity_id_)>(
          reinterpret_cast<char*>(&_impl_.entity_id_),
          reinterpret_cast<char*>(&other->_impl_.entity_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PBWorkerRemoveComponentOp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_WorkerCmd_2eproto_getter, &descriptor_table_WorkerCmd_2eproto_once,
      file_level_metadata_WorkerCmd_2eproto[13]);
}

// ===================================================================

class PBWorkerAuthorityChangeOp::_Internal {
 public:
  using HasBits = decltype(std::declval<PBWorkerAuthorityChangeOp>()._impl_._has_bits_);
  static void set_has_entity_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_component_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_authority(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

PBWorkerAuthorityChangeOp::PBWorkerAuthorityChangeOp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:PBWorkerAuthorityChangeOp)
}
PBWorkerAuthorityChangeOp::PBWorkerAuthorityChangeOp(const PBWorkerAuthorityChangeOp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PBWorkerAuthorityChangeOp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.entity_id_){}
    , decltype(_impl_.component_id_){}
    , decltype(_impl_.authority_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.entity_id_, &from._impl_.entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.authority_) -
    reinterpret_cast<char*>(&_impl_.entity_id_)) + sizeof(_impl_.authority_));
  // @@protoc_insertion_point(copy_constructor:PBWorkerAuthorityChangeOp)
}

inline void PBWorkerAuthorityChangeOp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.entity_id_){int64_t{0}}
    , decltype(_impl_.component_id_){0u}
    , decltype(_impl_.authority_){0}
  };
}

PBWorkerAuthorityChangeOp::~PBWorkerAuthorityChangeOp() {
  // @@protoc_insertion_point(destructor:PBWorkerAuthorityChangeOp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PBWorkerAuthorityChangeOp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PBWorkerAuthorityChangeOp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PBWorkerAuthorityChangeOp::Clear() {
// @@protoc_insertion_point(message_clear_start:PBWorkerAuthorityChangeOp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.entity_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.authority_) -
        reinterpret_cast<char*>(&_impl_.entity_id_)) + sizeof(_impl_.authority_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PBWorkerAuthorityChangeOp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int64 entity_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_entity_id(&has_bits);
          _impl_.entity_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 component_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_component_id(&has_bits);
          _impl_.component_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .PBWorkerAuthority authority = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::PBWorkerAuthority_IsValid(val))) {
            _internal_set_authority(static_cast<::PBWorkerAuthority>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PBWorkerAuthorityChangeOp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBWorkerAuthorityChangeOp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 entity_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_entity_id(), target);
  }

  // optional uint32 component_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_component_id(), target);
  }

  // optional .PBWorkerAuthority authority = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_authority(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBWorkerAuthorityChangeOp)
  return target;
}

size_t PBWorkerAuthorityChangeOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBWorkerAuthorityChangeOp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional int64 entity_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_entity_id());
    }

    // optional uint32 component_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_component_id());
    }

    // optional .PBWorkerAuthority authority = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_authority());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PBWorkerAuthorityChangeOp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PBWorkerAuthorityChangeOp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PBWorkerAuthorityChangeOp::GetClassData() const { return &_class_data_; }


void PBWorkerAuthorityChangeOp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PBWorkerAuthorityChangeOp*>(&to_msg);
  auto& from = static_cast<const PBWorkerAuthorityChangeOp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PBWorkerAuthorityChangeOp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.entity_id_ = from._impl_.entity_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.component_id_ = from._impl_.component_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.authority_ = from._impl_.authority_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PBWorkerAuthorityChangeOp::CopyFrom(const PBWorkerAuthorityChangeOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBWorkerAuthorityChangeOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBWorkerAuthorityChangeOp::IsInitialized() const {
  return true;
}

void PBWorkerAuthorityChangeOp::InternalSwap(PBWorkerAuthorityChangeOp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PBWorkerAuthorityChangeOp, _impl_.authority_)
      + sizeof(PBWorkerAuthorityChangeOp::_impl_.authority_)
      - PROTOBUF_FIELD_OFFSET(PBWorkerAuthorityChangeOp, _impl_.entity_id_)>(
          reinterpret_cast<char*>(&_impl_.entity_id_),
          reinterpret_cast<char*>(&other->_impl_.entity_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PBWorkerAuthorityChangeOp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_WorkerCmd_2eproto_getter, &descriptor_table_WorkerCmd_2eproto_once,
      file_level_metadata_WorkerCmd_2eproto[14]);
}

// ===================================================================

class PBWorkerComponentUpdateOp::_Internal {
 public:
  using HasBits = decltype(std::declval<PBWorkerComponentUpdateOp>()._impl_._has_bits_);
  static void set_has_entity_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::PBWorkerComponentUpdate& update(const PBWorkerComponentUpdateOp* msg);
  static void set_has_update(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::PBWorkerComponentUpdate&
PBWorkerComponentUpdateOp::_Internal::update(const PBWorkerComponentUpdateOp* msg) {
  return *msg->_impl_.update_;
}
void PBWorkerComponentUpdateOp::clear_update() {
  if (_impl_.update_ != nullptr) _impl_.update_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
PBWorkerComponentUpdateOp::PBWorkerComponentUpdateOp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:PBWorkerComponentUpdateOp)
}
PBWorkerComponentUpdateOp::PBWorkerComponentUpdateOp(const PBWorkerComponentUpdateOp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PBWorkerComponentUpdateOp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.update_){nullptr}
    , decltype(_impl_.entity_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_update()) {
    _this->_impl_.update_ = new ::PBWorkerComponentUpdate(*from._impl_.update_);
  }
  _this->_impl_.entity_id_ = from._impl_.entity_id_;
  // @@protoc_insertion_point(copy_constructor:PBWorkerComponentUpdateOp)
}

inline void PBWorkerComponentUpdateOp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.update_){nullptr}
    , decltype(_impl_.entity_id_){int64_t{0}}
  };
}

PBWorkerComponentUpdateOp::~PBWorkerComponentUpdateOp() {
  // @@protoc_insertion_point(destructor:PBWorkerComponentUpdateOp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PBWorkerComponentUpdateOp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.update_;
}

void PBWorkerComponentUpdateOp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PBWorkerComponentUpdateOp::Clear() {
// @@protoc_insertion_point(message_clear_start:PBWorkerComponentUpdateOp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.update_ != nullptr);
    _impl_.update_->Clear();
  }
  _impl_.entity_id_ = int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PBWorkerComponentUpdateOp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int64 entity_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_entity_id(&has_bits);
          _impl_.entity_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .PBWorkerComponentUpdate update = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_update(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PBWorkerComponentUpdateOp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBWorkerComponentUpdateOp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 entity_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_entity_id(), target);
  }

  // optional .PBWorkerComponentUpdate update = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::update(this),
        _Internal::update(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBWorkerComponentUpdateOp)
  return target;
}

size_t PBWorkerComponentUpdateOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBWorkerComponentUpdateOp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .PBWorkerComponentUpdate update = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.update_);
    }

    // optional int64 entity_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_entity_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PBWorkerComponentUpdateOp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PBWorkerComponentUpdateOp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PBWorkerComponentUpdateOp::GetClassData() const { return &_class_data_; }


void PBWorkerComponentUpdateOp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PBWorkerComponentUpdateOp*>(&to_msg);
  auto& from = static_cast<const PBWorkerComponentUpdateOp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PBWorkerComponentUpdateOp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_update()->::PBWorkerComponentUpdate::MergeFrom(
          from._internal_update());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.entity_id_ = from._impl_.entity_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PBWorkerComponentUpdateOp::CopyFrom(const PBWorkerComponentUpdateOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBWorkerComponentUpdateOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBWorkerComponentUpdateOp::IsInitialized() const {
  return true;
}

void PBWorkerComponentUpdateOp::InternalSwap(PBWorkerComponentUpdateOp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PBWorkerComponentUpdateOp, _impl_.entity_id_)
      + sizeof(PBWorkerComponentUpdateOp::_impl_.entity_id_)
      - PROTOBUF_FIELD_OFFSET(PBWorkerComponentUpdateOp, _impl_.update_)>(
          reinterpret_cast<char*>(&_impl_.update_),
          reinterpret_cast<char*>(&other->_impl_.update_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PBWorkerComponentUpdateOp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_WorkerCmd_2eproto_getter, &descriptor_table_WorkerCmd_2eproto_once,
      file_level_metadata_WorkerCmd_2eproto[15]);
}

// ===================================================================

class PBWorkerCommandRequestOp::_Internal {
 public:
  using HasBits = decltype(std::declval<PBWorkerCommandRequestOp>()._impl_._has_bits_);
  static void set_has_request_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_entity_id(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_timeout_millis(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_caller_worker_id(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_caller_worker_entity_id(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::PBWorkerWorkerAttributes& caller_attribute_set(const PBWorkerCommandRequestOp* msg);
  static void set_has_caller_attribute_set(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::PBWorkerCommandRequest& request(const PBWorkerCommandRequestOp* msg);
  static void set_has_request(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::PBWorkerWorkerAttributes&
PBWorkerCommandRequestOp::_Internal::caller_attribute_set(const PBWorkerCommandRequestOp* msg) {
  return *msg->_impl_.caller_attribute_set_;
}
const ::PBWorkerCommandRequest&
PBWorkerCommandRequestOp::_Internal::request(const PBWorkerCommandRequestOp* msg) {
  return *msg->_impl_.request_;
}
void PBWorkerCommandRequestOp::clear_caller_attribute_set() {
  if (_impl_.caller_attribute_set_ != nullptr) _impl_.caller_attribute_set_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void PBWorkerCommandRequestOp::clear_request() {
  if (_impl_.request_ != nullptr) _impl_.request_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
PBWorkerCommandRequestOp::PBWorkerCommandRequestOp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:PBWorkerCommandRequestOp)
}
PBWorkerCommandRequestOp::PBWorkerCommandRequestOp(const PBWorkerCommandRequestOp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PBWorkerCommandRequestOp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.caller_attribute_set_){nullptr}
    , decltype(_impl_.request_){nullptr}
    , decltype(_impl_.request_id_){}
    , decltype(_impl_.entity_id_){}
    , decltype(_impl_.timeout_millis_){}
    , decltype(_impl_.caller_worker_id_){}
    , decltype(_impl_.caller_worker_entity_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_caller_attribute_set()) {
    _this->_impl_.caller_attribute_set_ = new ::PBWorkerWorkerAttributes(*from._impl_.caller_attribute_set_);
  }
  if (from._internal_has_request()) {
    _this->_impl_.request_ = new ::PBWorkerCommandRequest(*from._impl_.request_);
  }
  ::memcpy(&_impl_.request_id_, &from._impl_.request_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.caller_worker_entity_id_) -
    reinterpret_cast<char*>(&_impl_.request_id_)) + sizeof(_impl_.caller_worker_entity_id_));
  // @@protoc_insertion_point(copy_constructor:PBWorkerCommandRequestOp)
}

inline void PBWorkerCommandRequestOp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.caller_attribute_set_){nullptr}
    , decltype(_impl_.request_){nullptr}
    , decltype(_impl_.request_id_){int64_t{0}}
    , decltype(_impl_.entity_id_){int64_t{0}}
    , decltype(_impl_.timeout_millis_){0u}
    , decltype(_impl_.caller_worker_id_){0u}
    , decltype(_impl_.caller_worker_entity_id_){int64_t{0}}
  };
}

PBWorkerCommandRequestOp::~PBWorkerCommandRequestOp() {
  // @@protoc_insertion_point(destructor:PBWorkerCommandRequestOp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PBWorkerCommandRequestOp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.caller_attribute_set_;
  if (this != internal_default_instance()) delete _impl_.request_;
}

void PBWorkerCommandRequestOp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PBWorkerCommandRequestOp::Clear() {
// @@protoc_insertion_point(message_clear_start:PBWorkerCommandRequestOp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.caller_attribute_set_ != nullptr);
      _impl_.caller_attribute_set_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.request_ != nullptr);
      _impl_.request_->Clear();
    }
  }
  if (cached_has_bits & 0x0000007cu) {
    ::memset(&_impl_.request_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.caller_worker_entity_id_) -
        reinterpret_cast<char*>(&_impl_.request_id_)) + sizeof(_impl_.caller_worker_entity_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PBWorkerCommandRequestOp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int64 request_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_request_id(&has_bits);
          _impl_.request_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 entity_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_entity_id(&has_bits);
          _impl_.entity_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 timeout_millis = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_timeout_millis(&has_bits);
          _impl_.timeout_millis_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 caller_worker_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_caller_worker_id(&has_bits);
          _impl_.caller_worker_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 caller_worker_entity_id = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_caller_worker_entity_id(&has_bits);
          _impl_.caller_worker_entity_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .PBWorkerWorkerAttributes caller_attribute_set = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_caller_attribute_set(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .PBWorkerCommandRequest request = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_request(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PBWorkerCommandRequestOp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBWorkerCommandRequestOp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 request_id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_request_id(), target);
  }

  // optional int64 entity_id = 2;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_entity_id(), target);
  }

  // optional uint32 timeout_millis = 3;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_timeout_millis(), target);
  }

  // optional uint32 caller_worker_id = 4;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_caller_worker_id(), target);
  }

  // optional int64 caller_worker_entity_id = 5;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(5, this->_internal_caller_worker_entity_id(), target);
  }

  // optional .PBWorkerWorkerAttributes caller_attribute_set = 6;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::caller_attribute_set(this),
        _Internal::caller_attribute_set(this).GetCachedSize(), target, stream);
  }

  // optional .PBWorkerCommandRequest request = 7;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::request(this),
        _Internal::request(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBWorkerCommandRequestOp)
  return target;
}

size_t PBWorkerCommandRequestOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBWorkerCommandRequestOp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional .PBWorkerWorkerAttributes caller_attribute_set = 6;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.caller_attribute_set_);
    }

    // optional .PBWorkerCommandRequest request = 7;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.request_);
    }

    // optional int64 request_id = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_request_id());
    }

    // optional int64 entity_id = 2;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_entity_id());
    }

    // optional uint32 timeout_millis = 3;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_timeout_millis());
    }

    // optional uint32 caller_worker_id = 4;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_caller_worker_id());
    }

    // optional int64 caller_worker_entity_id = 5;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_caller_worker_entity_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PBWorkerCommandRequestOp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PBWorkerCommandRequestOp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PBWorkerCommandRequestOp::GetClassData() const { return &_class_data_; }


void PBWorkerCommandRequestOp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PBWorkerCommandRequestOp*>(&to_msg);
  auto& from = static_cast<const PBWorkerCommandRequestOp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PBWorkerCommandRequestOp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_caller_attribute_set()->::PBWorkerWorkerAttributes::MergeFrom(
          from._internal_caller_attribute_set());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_request()->::PBWorkerCommandRequest::MergeFrom(
          from._internal_request());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.request_id_ = from._impl_.request_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.entity_id_ = from._impl_.entity_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.timeout_millis_ = from._impl_.timeout_millis_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.caller_worker_id_ = from._impl_.caller_worker_id_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.caller_worker_entity_id_ = from._impl_.caller_worker_entity_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PBWorkerCommandRequestOp::CopyFrom(const PBWorkerCommandRequestOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBWorkerCommandRequestOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBWorkerCommandRequestOp::IsInitialized() const {
  return true;
}

void PBWorkerCommandRequestOp::InternalSwap(PBWorkerCommandRequestOp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PBWorkerCommandRequestOp, _impl_.caller_worker_entity_id_)
      + sizeof(PBWorkerCommandRequestOp::_impl_.caller_worker_entity_id_)
      - PROTOBUF_FIELD_OFFSET(PBWorkerCommandRequestOp, _impl_.caller_attribute_set_)>(
          reinterpret_cast<char*>(&_impl_.caller_attribute_set_),
          reinterpret_cast<char*>(&other->_impl_.caller_attribute_set_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PBWorkerCommandRequestOp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_WorkerCmd_2eproto_getter, &descriptor_table_WorkerCmd_2eproto_once,
      file_level_metadata_WorkerCmd_2eproto[16]);
}

// ===================================================================

class PBWorkerCommandResponseOp::_Internal {
 public:
  using HasBits = decltype(std::declval<PBWorkerCommandResponseOp>()._impl_._has_bits_);
  static void set_has_request_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_entity_id(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_status_code(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_message(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::PBWorkerCommandResponse& response(const PBWorkerCommandResponseOp* msg);
  static void set_has_response(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::PBWorkerCommandResponse&
PBWorkerCommandResponseOp::_Internal::response(const PBWorkerCommandResponseOp* msg) {
  return *msg->_impl_.response_;
}
void PBWorkerCommandResponseOp::clear_response() {
  if (_impl_.response_ != nullptr) _impl_.response_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
PBWorkerCommandResponseOp::PBWorkerCommandResponseOp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:PBWorkerCommandResponseOp)
}
PBWorkerCommandResponseOp::PBWorkerCommandResponseOp(const PBWorkerCommandResponseOp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PBWorkerCommandResponseOp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.message_){}
    , decltype(_impl_.response_){nullptr}
    , decltype(_impl_.request_id_){}
    , decltype(_impl_.entity_id_){}
    , decltype(_impl_.status_code_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_message()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_response()) {
    _this->_impl_.response_ = new ::PBWorkerCommandResponse(*from._impl_.response_);
  }
  ::memcpy(&_impl_.request_id_, &from._impl_.request_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.status_code_) -
    reinterpret_cast<char*>(&_impl_.request_id_)) + sizeof(_impl_.status_code_));
  // @@protoc_insertion_point(copy_constructor:PBWorkerCommandResponseOp)
}

inline void PBWorkerCommandResponseOp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.message_){}
    , decltype(_impl_.response_){nullptr}
    , decltype(_impl_.request_id_){int64_t{0}}
    , decltype(_impl_.entity_id_){int64_t{0}}
    , decltype(_impl_.status_code_){1}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PBWorkerCommandResponseOp::~PBWorkerCommandResponseOp() {
  // @@protoc_insertion_point(destructor:PBWorkerCommandResponseOp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PBWorkerCommandResponseOp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
  if (this != internal_default_instance()) delete _impl_.response_;
}

void PBWorkerCommandResponseOp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PBWorkerCommandResponseOp::Clear() {
// @@protoc_insertion_point(message_clear_start:PBWorkerCommandResponseOp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.message_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.response_ != nullptr);
      _impl_.response_->Clear();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&_impl_.request_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.entity_id_) -
        reinterpret_cast<char*>(&_impl_.request_id_)) + sizeof(_impl_.entity_id_));
    _impl_.status_code_ = 1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PBWorkerCommandResponseOp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int64 request_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_request_id(&has_bits);
          _impl_.request_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 entity_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_entity_id(&has_bits);
          _impl_.entity_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .PBWorkerStatusCode status_code = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::PBWorkerStatusCode_IsValid(val))) {
            _internal_set_status_code(static_cast<::PBWorkerStatusCode>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional string message = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "PBWorkerCommandResponseOp.message");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional .PBWorkerCommandResponse response = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_response(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PBWorkerCommandResponseOp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBWorkerCommandResponseOp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 request_id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_request_id(), target);
  }

  // optional int64 entity_id = 2;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_entity_id(), target);
  }

  // optional .PBWorkerStatusCode status_code = 3;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_status_code(), target);
  }

  // optional string message = 4;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "PBWorkerCommandResponseOp.message");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_message(), target);
  }

  // optional .PBWorkerCommandResponse response = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::response(this),
        _Internal::response(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBWorkerCommandResponseOp)
  return target;
}

size_t PBWorkerCommandResponseOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBWorkerCommandResponseOp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string message = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_message());
    }

    // optional .PBWorkerCommandResponse response = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.response_);
    }

    // optional int64 request_id = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_request_id());
    }

    // optional int64 entity_id = 2;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_entity_id());
    }

    // optional .PBWorkerStatusCode status_code = 3;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_status_code());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PBWorkerCommandResponseOp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PBWorkerCommandResponseOp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PBWorkerCommandResponseOp::GetClassData() const { return &_class_data_; }


void PBWorkerCommandResponseOp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PBWorkerCommandResponseOp*>(&to_msg);
  auto& from = static_cast<const PBWorkerCommandResponseOp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PBWorkerCommandResponseOp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_message(from._internal_message());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_response()->::PBWorkerCommandResponse::MergeFrom(
          from._internal_response());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.request_id_ = from._impl_.request_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.entity_id_ = from._impl_.entity_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.status_code_ = from._impl_.status_code_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PBWorkerCommandResponseOp::CopyFrom(const PBWorkerCommandResponseOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBWorkerCommandResponseOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBWorkerCommandResponseOp::IsInitialized() const {
  return true;
}

void PBWorkerCommandResponseOp::InternalSwap(PBWorkerCommandResponseOp* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PBWorkerCommandResponseOp, _impl_.entity_id_)
      + sizeof(PBWorkerCommandResponseOp::_impl_.entity_id_)
      - PROTOBUF_FIELD_OFFSET(PBWorkerCommandResponseOp, _impl_.response_)>(
          reinterpret_cast<char*>(&_impl_.response_),
          reinterpret_cast<char*>(&other->_impl_.response_));
  swap(_impl_.status_code_, other->_impl_.status_code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PBWorkerCommandResponseOp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_WorkerCmd_2eproto_getter, &descriptor_table_WorkerCmd_2eproto_once,
      file_level_metadata_WorkerCmd_2eproto[17]);
}

// ===================================================================

class PBWorkerComponentSetAuthorityChangeOp::_Internal {
 public:
  using HasBits = decltype(std::declval<PBWorkerComponentSetAuthorityChangeOp>()._impl_._has_bits_);
  static void set_has_entity_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_component_set_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_authority(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

PBWorkerComponentSetAuthorityChangeOp::PBWorkerComponentSetAuthorityChangeOp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:PBWorkerComponentSetAuthorityChangeOp)
}
PBWorkerComponentSetAuthorityChangeOp::PBWorkerComponentSetAuthorityChangeOp(const PBWorkerComponentSetAuthorityChangeOp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PBWorkerComponentSetAuthorityChangeOp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.entity_id_){}
    , decltype(_impl_.component_set_id_){}
    , decltype(_impl_.authority_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.entity_id_, &from._impl_.entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.authority_) -
    reinterpret_cast<char*>(&_impl_.entity_id_)) + sizeof(_impl_.authority_));
  // @@protoc_insertion_point(copy_constructor:PBWorkerComponentSetAuthorityChangeOp)
}

inline void PBWorkerComponentSetAuthorityChangeOp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.entity_id_){int64_t{0}}
    , decltype(_impl_.component_set_id_){0u}
    , decltype(_impl_.authority_){0}
  };
}

PBWorkerComponentSetAuthorityChangeOp::~PBWorkerComponentSetAuthorityChangeOp() {
  // @@protoc_insertion_point(destructor:PBWorkerComponentSetAuthorityChangeOp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PBWorkerComponentSetAuthorityChangeOp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PBWorkerComponentSetAuthorityChangeOp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PBWorkerComponentSetAuthorityChangeOp::Clear() {
// @@protoc_insertion_point(message_clear_start:PBWorkerComponentSetAuthorityChangeOp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.entity_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.authority_) -
        reinterpret_cast<char*>(&_impl_.entity_id_)) + sizeof(_impl_.authority_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PBWorkerComponentSetAuthorityChangeOp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int64 entity_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_entity_id(&has_bits);
          _impl_.entity_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 component_set_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_component_set_id(&has_bits);
          _impl_.component_set_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .PBWorkerAuthority authority = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::PBWorkerAuthority_IsValid(val))) {
            _internal_set_authority(static_cast<::PBWorkerAuthority>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PBWorkerComponentSetAuthorityChangeOp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBWorkerComponentSetAuthorityChangeOp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 entity_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_entity_id(), target);
  }

  // optional uint32 component_set_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_component_set_id(), target);
  }

  // optional .PBWorkerAuthority authority = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_authority(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBWorkerComponentSetAuthorityChangeOp)
  return target;
}

size_t PBWorkerComponentSetAuthorityChangeOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBWorkerComponentSetAuthorityChangeOp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional int64 entity_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_entity_id());
    }

    // optional uint32 component_set_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_component_set_id());
    }

    // optional .PBWorkerAuthority authority = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_authority());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PBWorkerComponentSetAuthorityChangeOp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PBWorkerComponentSetAuthorityChangeOp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PBWorkerComponentSetAuthorityChangeOp::GetClassData() const { return &_class_data_; }


void PBWorkerComponentSetAuthorityChangeOp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PBWorkerComponentSetAuthorityChangeOp*>(&to_msg);
  auto& from = static_cast<const PBWorkerComponentSetAuthorityChangeOp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PBWorkerComponentSetAuthorityChangeOp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.entity_id_ = from._impl_.entity_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.component_set_id_ = from._impl_.component_set_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.authority_ = from._impl_.authority_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PBWorkerComponentSetAuthorityChangeOp::CopyFrom(const PBWorkerComponentSetAuthorityChangeOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBWorkerComponentSetAuthorityChangeOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBWorkerComponentSetAuthorityChangeOp::IsInitialized() const {
  return true;
}

void PBWorkerComponentSetAuthorityChangeOp::InternalSwap(PBWorkerComponentSetAuthorityChangeOp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PBWorkerComponentSetAuthorityChangeOp, _impl_.authority_)
      + sizeof(PBWorkerComponentSetAuthorityChangeOp::_impl_.authority_)
      - PROTOBUF_FIELD_OFFSET(PBWorkerComponentSetAuthorityChangeOp, _impl_.entity_id_)>(
          reinterpret_cast<char*>(&_impl_.entity_id_),
          reinterpret_cast<char*>(&other->_impl_.entity_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PBWorkerComponentSetAuthorityChangeOp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_WorkerCmd_2eproto_getter, &descriptor_table_WorkerCmd_2eproto_once,
      file_level_metadata_WorkerCmd_2eproto[18]);
}

// ===================================================================

class PBWorkerOpUnion::_Internal {
 public:
  using HasBits = decltype(std::declval<PBWorkerOpUnion>()._impl_._has_bits_);
  static const ::PBWorkerDisconnectOp& disconnect(const PBWorkerOpUnion* msg);
  static void set_has_disconnect(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::PBWorkerFlagUpdateOp& flag_update(const PBWorkerOpUnion* msg);
  static void set_has_flag_update(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::PBWorkerLogMessageOp& log_message(const PBWorkerOpUnion* msg);
  static void set_has_log_message(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::PBWorkerMetricsOp& metrics(const PBWorkerOpUnion* msg);
  static void set_has_metrics(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::PBWorkerCriticalSectionOp& critical_section(const PBWorkerOpUnion* msg);
  static void set_has_critical_section(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::PBWorkerAddEntityOp& add_entity(const PBWorkerOpUnion* msg);
  static void set_has_add_entity(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::PBWorkerRemoveEntityOp& remove_entity(const PBWorkerOpUnion* msg);
  static void set_has_remove_entity(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::PBWorkerReserveEntityIdsResponseOp& reserve_entity_ids_response(const PBWorkerOpUnion* msg);
  static void set_has_reserve_entity_ids_response(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::PBWorkerCreateEntityResponseOp& create_entity_response(const PBWorkerOpUnion* msg);
  static void set_has_create_entity_response(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static const ::PBWorkerDeleteEntityResponseOp& delete_entity_response(const PBWorkerOpUnion* msg);
  static void set_has_delete_entity_response(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static const ::PBWorkerEntityQueryResponseOp& entity_query_response(const PBWorkerOpUnion* msg);
  static void set_has_entity_query_response(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static const ::PBWorkerAddComponentOp& add_component(const PBWorkerOpUnion* msg);
  static void set_has_add_component(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static const ::PBWorkerRemoveComponentOp& remove_component(const PBWorkerOpUnion* msg);
  static void set_has_remove_component(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static const ::PBWorkerAuthorityChangeOp& authority_change(const PBWorkerOpUnion* msg);
  static void set_has_authority_change(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static const ::PBWorkerComponentUpdateOp& component_update(const PBWorkerOpUnion* msg);
  static void set_has_component_update(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static const ::PBWorkerCommandRequestOp& command_request(const PBWorkerOpUnion* msg);
  static void set_has_command_request(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static const ::PBWorkerCommandResponseOp& command_response(const PBWorkerOpUnion* msg);
  static void set_has_command_response(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static const ::PBWorkerComponentSetAuthorityChangeOp& component_set_authority_change(const PBWorkerOpUnion* msg);
  static void set_has_component_set_authority_change(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
};

const ::PBWorkerDisconnectOp&
PBWorkerOpUnion::_Internal::disconnect(const PBWorkerOpUnion* msg) {
  return *msg->_impl_.disconnect_;
}
const ::PBWorkerFlagUpdateOp&
PBWorkerOpUnion::_Internal::flag_update(const PBWorkerOpUnion* msg) {
  return *msg->_impl_.flag_update_;
}
const ::PBWorkerLogMessageOp&
PBWorkerOpUnion::_Internal::log_message(const PBWorkerOpUnion* msg) {
  return *msg->_impl_.log_message_;
}
const ::PBWorkerMetricsOp&
PBWorkerOpUnion::_Internal::metrics(const PBWorkerOpUnion* msg) {
  return *msg->_impl_.metrics_;
}
const ::PBWorkerCriticalSectionOp&
PBWorkerOpUnion::_Internal::critical_section(const PBWorkerOpUnion* msg) {
  return *msg->_impl_.critical_section_;
}
const ::PBWorkerAddEntityOp&
PBWorkerOpUnion::_Internal::add_entity(const PBWorkerOpUnion* msg) {
  return *msg->_impl_.add_entity_;
}
const ::PBWorkerRemoveEntityOp&
PBWorkerOpUnion::_Internal::remove_entity(const PBWorkerOpUnion* msg) {
  return *msg->_impl_.remove_entity_;
}
const ::PBWorkerReserveEntityIdsResponseOp&
PBWorkerOpUnion::_Internal::reserve_entity_ids_response(const PBWorkerOpUnion* msg) {
  return *msg->_impl_.reserve_entity_ids_response_;
}
const ::PBWorkerCreateEntityResponseOp&
PBWorkerOpUnion::_Internal::create_entity_response(const PBWorkerOpUnion* msg) {
  return *msg->_impl_.create_entity_response_;
}
const ::PBWorkerDeleteEntityResponseOp&
PBWorkerOpUnion::_Internal::delete_entity_response(const PBWorkerOpUnion* msg) {
  return *msg->_impl_.delete_entity_response_;
}
const ::PBWorkerEntityQueryResponseOp&
PBWorkerOpUnion::_Internal::entity_query_response(const PBWorkerOpUnion* msg) {
  return *msg->_impl_.entity_query_response_;
}
const ::PBWorkerAddComponentOp&
PBWorkerOpUnion::_Internal::add_component(const PBWorkerOpUnion* msg) {
  return *msg->_impl_.add_component_;
}
const ::PBWorkerRemoveComponentOp&
PBWorkerOpUnion::_Internal::remove_component(const PBWorkerOpUnion* msg) {
  return *msg->_impl_.remove_component_;
}
const ::PBWorkerAuthorityChangeOp&
PBWorkerOpUnion::_Internal::authority_change(const PBWorkerOpUnion* msg) {
  return *msg->_impl_.authority_change_;
}
const ::PBWorkerComponentUpdateOp&
PBWorkerOpUnion::_Internal::component_update(const PBWorkerOpUnion* msg) {
  return *msg->_impl_.component_update_;
}
const ::PBWorkerCommandRequestOp&
PBWorkerOpUnion::_Internal::command_request(const PBWorkerOpUnion* msg) {
  return *msg->_impl_.command_request_;
}
const ::PBWorkerCommandResponseOp&
PBWorkerOpUnion::_Internal::command_response(const PBWorkerOpUnion* msg) {
  return *msg->_impl_.command_response_;
}
const ::PBWorkerComponentSetAuthorityChangeOp&
PBWorkerOpUnion::_Internal::component_set_authority_change(const PBWorkerOpUnion* msg) {
  return *msg->_impl_.component_set_authority_change_;
}
PBWorkerOpUnion::PBWorkerOpUnion(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:PBWorkerOpUnion)
}
PBWorkerOpUnion::PBWorkerOpUnion(const PBWorkerOpUnion& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PBWorkerOpUnion* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.disconnect_){nullptr}
    , decltype(_impl_.flag_update_){nullptr}
    , decltype(_impl_.log_message_){nullptr}
    , decltype(_impl_.metrics_){nullptr}
    , decltype(_impl_.critical_section_){nullptr}
    , decltype(_impl_.add_entity_){nullptr}
    , decltype(_impl_.remove_entity_){nullptr}
    , decltype(_impl_.reserve_entity_ids_response_){nullptr}
    , decltype(_impl_.create_entity_response_){nullptr}
    , decltype(_impl_.delete_entity_response_){nullptr}
    , decltype(_impl_.entity_query_response_){nullptr}
    , decltype(_impl_.add_component_){nullptr}
    , decltype(_impl_.remove_component_){nullptr}
    , decltype(_impl_.authority_change_){nullptr}
    , decltype(_impl_.component_update_){nullptr}
    , decltype(_impl_.command_request_){nullptr}
    , decltype(_impl_.command_response_){nullptr}
    , decltype(_impl_.component_set_authority_change_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_disconnect()) {
    _this->_impl_.disconnect_ = new ::PBWorkerDisconnectOp(*from._impl_.disconnect_);
  }
  if (from._internal_has_flag_update()) {
    _this->_impl_.flag_update_ = new ::PBWorkerFlagUpdateOp(*from._impl_.flag_update_);
  }
  if (from._internal_has_log_message()) {
    _this->_impl_.log_message_ = new ::PBWorkerLogMessageOp(*from._impl_.log_message_);
  }
  if (from._internal_has_metrics()) {
    _this->_impl_.metrics_ = new ::PBWorkerMetricsOp(*from._impl_.metrics_);
  }
  if (from._internal_has_critical_section()) {
    _this->_impl_.critical_section_ = new ::PBWorkerCriticalSectionOp(*from._impl_.critical_section_);
  }
  if (from._internal_has_add_entity()) {
    _this->_impl_.add_entity_ = new ::PBWorkerAddEntityOp(*from._impl_.add_entity_);
  }
  if (from._internal_has_remove_entity()) {
    _this->_impl_.remove_entity_ = new ::PBWorkerRemoveEntityOp(*from._impl_.remove_entity_);
  }
  if (from._internal_has_reserve_entity_ids_response()) {
    _this->_impl_.reserve_entity_ids_response_ = new ::PBWorkerReserveEntityIdsResponseOp(*from._impl_.reserve_entity_ids_response_);
  }
  if (from._internal_has_create_entity_response()) {
    _this->_impl_.create_entity_response_ = new ::PBWorkerCreateEntityResponseOp(*from._impl_.create_entity_response_);
  }
  if (from._internal_has_delete_entity_response()) {
    _this->_impl_.delete_entity_response_ = new ::PBWorkerDeleteEntityResponseOp(*from._impl_.delete_entity_response_);
  }
  if (from._internal_has_entity_query_response()) {
    _this->_impl_.entity_query_response_ = new ::PBWorkerEntityQueryResponseOp(*from._impl_.entity_query_response_);
  }
  if (from._internal_has_add_component()) {
    _this->_impl_.add_component_ = new ::PBWorkerAddComponentOp(*from._impl_.add_component_);
  }
  if (from._internal_has_remove_component()) {
    _this->_impl_.remove_component_ = new ::PBWorkerRemoveComponentOp(*from._impl_.remove_component_);
  }
  if (from._internal_has_authority_change()) {
    _this->_impl_.authority_change_ = new ::PBWorkerAuthorityChangeOp(*from._impl_.authority_change_);
  }
  if (from._internal_has_component_update()) {
    _this->_impl_.component_update_ = new ::PBWorkerComponentUpdateOp(*from._impl_.component_update_);
  }
  if (from._internal_has_command_request()) {
    _this->_impl_.command_request_ = new ::PBWorkerCommandRequestOp(*from._impl_.command_request_);
  }
  if (from._internal_has_command_response()) {
    _this->_impl_.command_response_ = new ::PBWorkerCommandResponseOp(*from._impl_.command_response_);
  }
  if (from._internal_has_component_set_authority_change()) {
    _this->_impl_.component_set_authority_change_ = new ::PBWorkerComponentSetAuthorityChangeOp(*from._impl_.component_set_authority_change_);
  }
  // @@protoc_insertion_point(copy_constructor:PBWorkerOpUnion)
}

inline void PBWorkerOpUnion::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.disconnect_){nullptr}
    , decltype(_impl_.flag_update_){nullptr}
    , decltype(_impl_.log_message_){nullptr}
    , decltype(_impl_.metrics_){nullptr}
    , decltype(_impl_.critical_section_){nullptr}
    , decltype(_impl_.add_entity_){nullptr}
    , decltype(_impl_.remove_entity_){nullptr}
    , decltype(_impl_.reserve_entity_ids_response_){nullptr}
    , decltype(_impl_.create_entity_response_){nullptr}
    , decltype(_impl_.delete_entity_response_){nullptr}
    , decltype(_impl_.entity_query_response_){nullptr}
    , decltype(_impl_.add_component_){nullptr}
    , decltype(_impl_.remove_component_){nullptr}
    , decltype(_impl_.authority_change_){nullptr}
    , decltype(_impl_.component_update_){nullptr}
    , decltype(_impl_.command_request_){nullptr}
    , decltype(_impl_.command_response_){nullptr}
    , decltype(_impl_.component_set_authority_change_){nullptr}
  };
}

PBWorkerOpUnion::~PBWorkerOpUnion() {
  // @@protoc_insertion_point(destructor:PBWorkerOpUnion)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PBWorkerOpUnion::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.disconnect_;
  if (this != internal_default_instance()) delete _impl_.flag_update_;
  if (this != internal_default_instance()) delete _impl_.log_message_;
  if (this != internal_default_instance()) delete _impl_.metrics_;
  if (this != internal_default_instance()) delete _impl_.critical_section_;
  if (this != internal_default_instance()) delete _impl_.add_entity_;
  if (this != internal_default_instance()) delete _impl_.remove_entity_;
  if (this != internal_default_instance()) delete _impl_.reserve_entity_ids_response_;
  if (this != internal_default_instance()) delete _impl_.create_entity_response_;
  if (this != internal_default_instance()) delete _impl_.delete_entity_response_;
  if (this != internal_default_instance()) delete _impl_.entity_query_response_;
  if (this != internal_default_instance()) delete _impl_.add_component_;
  if (this != internal_default_instance()) delete _impl_.remove_component_;
  if (this != internal_default_instance()) delete _impl_.authority_change_;
  if (this != internal_default_instance()) delete _impl_.component_update_;
  if (this != internal_default_instance()) delete _impl_.command_request_;
  if (this != internal_default_instance()) delete _impl_.command_response_;
  if (this != internal_default_instance()) delete _impl_.component_set_authority_change_;
}

void PBWorkerOpUnion::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PBWorkerOpUnion::Clear() {
// @@protoc_insertion_point(message_clear_start:PBWorkerOpUnion)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.disconnect_ != nullptr);
      _impl_.disconnect_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.flag_update_ != nullptr);
      _impl_.flag_update_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.log_message_ != nullptr);
      _impl_.log_message_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.metrics_ != nullptr);
      _impl_.metrics_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.critical_section_ != nullptr);
      _impl_.critical_section_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(_impl_.add_entity_ != nullptr);
      _impl_.add_entity_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(_impl_.remove_entity_ != nullptr);
      _impl_.remove_entity_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(_impl_.reserve_entity_ids_response_ != nullptr);
      _impl_.reserve_entity_ids_response_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(_impl_.create_entity_response_ != nullptr);
      _impl_.create_entity_response_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(_impl_.delete_entity_response_ != nullptr);
      _impl_.delete_entity_response_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(_impl_.entity_query_response_ != nullptr);
      _impl_.entity_query_response_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(_impl_.add_component_ != nullptr);
      _impl_.add_component_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(_impl_.remove_component_ != nullptr);
      _impl_.remove_component_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(_impl_.authority_change_ != nullptr);
      _impl_.authority_change_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(_impl_.component_update_ != nullptr);
      _impl_.component_update_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(_impl_.command_request_ != nullptr);
      _impl_.command_request_->Clear();
    }
  }
  if (cached_has_bits & 0x00030000u) {
    if (cached_has_bits & 0x00010000u) {
      GOOGLE_DCHECK(_impl_.command_response_ != nullptr);
      _impl_.command_response_->Clear();
    }
    if (cached_has_bits & 0x00020000u) {
      GOOGLE_DCHECK(_impl_.component_set_authority_change_ != nullptr);
      _impl_.component_set_authority_change_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PBWorkerOpUnion::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .PBWorkerDisconnectOp disconnect = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_disconnect(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .PBWorkerFlagUpdateOp flag_update = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_flag_update(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .PBWorkerLogMessageOp log_message = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_log_message(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .PBWorkerMetricsOp metrics = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_metrics(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .PBWorkerCriticalSectionOp critical_section = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_critical_section(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .PBWorkerAddEntityOp add_entity = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_add_entity(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .PBWorkerRemoveEntityOp remove_entity = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_remove_entity(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .PBWorkerReserveEntityIdsResponseOp reserve_entity_ids_response = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_reserve_entity_ids_response(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .PBWorkerCreateEntityResponseOp create_entity_response = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_create_entity_response(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .PBWorkerDeleteEntityResponseOp delete_entity_response = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_delete_entity_response(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .PBWorkerEntityQueryResponseOp entity_query_response = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_entity_query_response(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .PBWorkerAddComponentOp add_component = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_add_component(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .PBWorkerRemoveComponentOp remove_component = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_remove_component(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .PBWorkerAuthorityChangeOp authority_change = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_authority_change(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .PBWorkerComponentUpdateOp component_update = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_component_update(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .PBWorkerCommandRequestOp command_request = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 130)) {
          ptr = ctx->ParseMessage(_internal_mutable_command_request(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .PBWorkerCommandResponseOp command_response = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_command_response(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .PBWorkerComponentSetAuthorityChangeOp component_set_authority_change = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 146)) {
          ptr = ctx->ParseMessage(_internal_mutable_component_set_authority_change(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PBWorkerOpUnion::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBWorkerOpUnion)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .PBWorkerDisconnectOp disconnect = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::disconnect(this),
        _Internal::disconnect(this).GetCachedSize(), target, stream);
  }

  // optional .PBWorkerFlagUpdateOp flag_update = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::flag_update(this),
        _Internal::flag_update(this).GetCachedSize(), target, stream);
  }

  // optional .PBWorkerLogMessageOp log_message = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::log_message(this),
        _Internal::log_message(this).GetCachedSize(), target, stream);
  }

  // optional .PBWorkerMetricsOp metrics = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::metrics(this),
        _Internal::metrics(this).GetCachedSize(), target, stream);
  }

  // optional .PBWorkerCriticalSectionOp critical_section = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::critical_section(this),
        _Internal::critical_section(this).GetCachedSize(), target, stream);
  }

  // optional .PBWorkerAddEntityOp add_entity = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::add_entity(this),
        _Internal::add_entity(this).GetCachedSize(), target, stream);
  }

  // optional .PBWorkerRemoveEntityOp remove_entity = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::remove_entity(this),
        _Internal::remove_entity(this).GetCachedSize(), target, stream);
  }

  // optional .PBWorkerReserveEntityIdsResponseOp reserve_entity_ids_response = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::reserve_entity_ids_response(this),
        _Internal::reserve_entity_ids_response(this).GetCachedSize(), target, stream);
  }

  // optional .PBWorkerCreateEntityResponseOp create_entity_response = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::create_entity_response(this),
        _Internal::create_entity_response(this).GetCachedSize(), target, stream);
  }

  // optional .PBWorkerDeleteEntityResponseOp delete_entity_response = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::delete_entity_response(this),
        _Internal::delete_entity_response(this).GetCachedSize(), target, stream);
  }

  // optional .PBWorkerEntityQueryResponseOp entity_query_response = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::entity_query_response(this),
        _Internal::entity_query_response(this).GetCachedSize(), target, stream);
  }

  // optional .PBWorkerAddComponentOp add_component = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(12, _Internal::add_component(this),
        _Internal::add_component(this).GetCachedSize(), target, stream);
  }

  // optional .PBWorkerRemoveComponentOp remove_component = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(13, _Internal::remove_component(this),
        _Internal::remove_component(this).GetCachedSize(), target, stream);
  }

  // optional .PBWorkerAuthorityChangeOp authority_change = 14;
  if (cached_has_bits & 0x00002000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(14, _Internal::authority_change(this),
        _Internal::authority_change(this).GetCachedSize(), target, stream);
  }

  // optional .PBWorkerComponentUpdateOp component_update = 15;
  if (cached_has_bits & 0x00004000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(15, _Internal::component_update(this),
        _Internal::component_update(this).GetCachedSize(), target, stream);
  }

  // optional .PBWorkerCommandRequestOp command_request = 16;
  if (cached_has_bits & 0x00008000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(16, _Internal::command_request(this),
        _Internal::command_request(this).GetCachedSize(), target, stream);
  }

  // optional .PBWorkerCommandResponseOp command_response = 17;
  if (cached_has_bits & 0x00010000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(17, _Internal::command_response(this),
        _Internal::command_response(this).GetCachedSize(), target, stream);
  }

  // optional .PBWorkerComponentSetAuthorityChangeOp component_set_authority_change = 18;
  if (cached_has_bits & 0x00020000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(18, _Internal::component_set_authority_change(this),
        _Internal::component_set_authority_change(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBWorkerOpUnion)
  return target;
}

size_t PBWorkerOpUnion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBWorkerOpUnion)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .PBWorkerDisconnectOp disconnect = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.disconnect_);
    }

    // optional .PBWorkerFlagUpdateOp flag_update = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.flag_update_);
    }

    // optional .PBWorkerLogMessageOp log_message = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.log_message_);
    }

    // optional .PBWorkerMetricsOp metrics = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.metrics_);
    }

    // optional .PBWorkerCriticalSectionOp critical_section = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.critical_section_);
    }

    // optional .PBWorkerAddEntityOp add_entity = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.add_entity_);
    }

    // optional .PBWorkerRemoveEntityOp remove_entity = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.remove_entity_);
    }

    // optional .PBWorkerReserveEntityIdsResponseOp reserve_entity_ids_response = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.reserve_entity_ids_response_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .PBWorkerCreateEntityResponseOp create_entity_response = 9;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.create_entity_response_);
    }

    // optional .PBWorkerDeleteEntityResponseOp delete_entity_response = 10;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.delete_entity_response_);
    }

    // optional .PBWorkerEntityQueryResponseOp entity_query_response = 11;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.entity_query_response_);
    }

    // optional .PBWorkerAddComponentOp add_component = 12;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.add_component_);
    }

    // optional .PBWorkerRemoveComponentOp remove_component = 13;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.remove_component_);
    }

    // optional .PBWorkerAuthorityChangeOp authority_change = 14;
    if (cached_has_bits & 0x00002000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.authority_change_);
    }

    // optional .PBWorkerComponentUpdateOp component_update = 15;
    if (cached_has_bits & 0x00004000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.component_update_);
    }

    // optional .PBWorkerCommandRequestOp command_request = 16;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.command_request_);
    }

  }
  if (cached_has_bits & 0x00030000u) {
    // optional .PBWorkerCommandResponseOp command_response = 17;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.command_response_);
    }

    // optional .PBWorkerComponentSetAuthorityChangeOp component_set_authority_change = 18;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.component_set_authority_change_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PBWorkerOpUnion::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PBWorkerOpUnion::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PBWorkerOpUnion::GetClassData() const { return &_class_data_; }


void PBWorkerOpUnion::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PBWorkerOpUnion*>(&to_msg);
  auto& from = static_cast<const PBWorkerOpUnion&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PBWorkerOpUnion)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_disconnect()->::PBWorkerDisconnectOp::MergeFrom(
          from._internal_disconnect());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_flag_update()->::PBWorkerFlagUpdateOp::MergeFrom(
          from._internal_flag_update());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_log_message()->::PBWorkerLogMessageOp::MergeFrom(
          from._internal_log_message());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_metrics()->::PBWorkerMetricsOp::MergeFrom(
          from._internal_metrics());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_critical_section()->::PBWorkerCriticalSectionOp::MergeFrom(
          from._internal_critical_section());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_add_entity()->::PBWorkerAddEntityOp::MergeFrom(
          from._internal_add_entity());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_remove_entity()->::PBWorkerRemoveEntityOp::MergeFrom(
          from._internal_remove_entity());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_mutable_reserve_entity_ids_response()->::PBWorkerReserveEntityIdsResponseOp::MergeFrom(
          from._internal_reserve_entity_ids_response());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_internal_mutable_create_entity_response()->::PBWorkerCreateEntityResponseOp::MergeFrom(
          from._internal_create_entity_response());
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_internal_mutable_delete_entity_response()->::PBWorkerDeleteEntityResponseOp::MergeFrom(
          from._internal_delete_entity_response());
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_internal_mutable_entity_query_response()->::PBWorkerEntityQueryResponseOp::MergeFrom(
          from._internal_entity_query_response());
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_internal_mutable_add_component()->::PBWorkerAddComponentOp::MergeFrom(
          from._internal_add_component());
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_internal_mutable_remove_component()->::PBWorkerRemoveComponentOp::MergeFrom(
          from._internal_remove_component());
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_internal_mutable_authority_change()->::PBWorkerAuthorityChangeOp::MergeFrom(
          from._internal_authority_change());
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_internal_mutable_component_update()->::PBWorkerComponentUpdateOp::MergeFrom(
          from._internal_component_update());
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_internal_mutable_command_request()->::PBWorkerCommandRequestOp::MergeFrom(
          from._internal_command_request());
    }
  }
  if (cached_has_bits & 0x00030000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_internal_mutable_command_response()->::PBWorkerCommandResponseOp::MergeFrom(
          from._internal_command_response());
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_internal_mutable_component_set_authority_change()->::PBWorkerComponentSetAuthorityChangeOp::MergeFrom(
          from._internal_component_set_authority_change());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PBWorkerOpUnion::CopyFrom(const PBWorkerOpUnion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBWorkerOpUnion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBWorkerOpUnion::IsInitialized() const {
  return true;
}

void PBWorkerOpUnion::InternalSwap(PBWorkerOpUnion* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PBWorkerOpUnion, _impl_.component_set_authority_change_)
      + sizeof(PBWorkerOpUnion::_impl_.component_set_authority_change_)
      - PROTOBUF_FIELD_OFFSET(PBWorkerOpUnion, _impl_.disconnect_)>(
          reinterpret_cast<char*>(&_impl_.disconnect_),
          reinterpret_cast<char*>(&other->_impl_.disconnect_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PBWorkerOpUnion::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_WorkerCmd_2eproto_getter, &descriptor_table_WorkerCmd_2eproto_once,
      file_level_metadata_WorkerCmd_2eproto[19]);
}

// ===================================================================

class PBWorkerOp::_Internal {
 public:
  using HasBits = decltype(std::declval<PBWorkerOp>()._impl_._has_bits_);
  static void set_has_op_type(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::PBWorkerOpUnion& op(const PBWorkerOp* msg);
  static void set_has_op(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::PBWorkerOpUnion&
PBWorkerOp::_Internal::op(const PBWorkerOp* msg) {
  return *msg->_impl_.op_;
}
PBWorkerOp::PBWorkerOp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:PBWorkerOp)
}
PBWorkerOp::PBWorkerOp(const PBWorkerOp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PBWorkerOp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.op_){nullptr}
    , decltype(_impl_.op_type_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_op()) {
    _this->_impl_.op_ = new ::PBWorkerOpUnion(*from._impl_.op_);
  }
  _this->_impl_.op_type_ = from._impl_.op_type_;
  // @@protoc_insertion_point(copy_constructor:PBWorkerOp)
}

inline void PBWorkerOp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.op_){nullptr}
    , decltype(_impl_.op_type_){1}
  };
}

PBWorkerOp::~PBWorkerOp() {
  // @@protoc_insertion_point(destructor:PBWorkerOp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PBWorkerOp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.op_;
}

void PBWorkerOp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PBWorkerOp::Clear() {
// @@protoc_insertion_point(message_clear_start:PBWorkerOp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.op_ != nullptr);
      _impl_.op_->Clear();
    }
    _impl_.op_type_ = 1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PBWorkerOp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .PBWorkerOpType op_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::PBWorkerOpType_IsValid(val))) {
            _internal_set_op_type(static_cast<::PBWorkerOpType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional .PBWorkerOpUnion op = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_op(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PBWorkerOp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBWorkerOp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .PBWorkerOpType op_type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_op_type(), target);
  }

  // optional .PBWorkerOpUnion op = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::op(this),
        _Internal::op(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBWorkerOp)
  return target;
}

size_t PBWorkerOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBWorkerOp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .PBWorkerOpUnion op = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.op_);
    }

    // optional .PBWorkerOpType op_type = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_op_type());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PBWorkerOp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PBWorkerOp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PBWorkerOp::GetClassData() const { return &_class_data_; }


void PBWorkerOp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PBWorkerOp*>(&to_msg);
  auto& from = static_cast<const PBWorkerOp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PBWorkerOp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_op()->::PBWorkerOpUnion::MergeFrom(
          from._internal_op());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.op_type_ = from._impl_.op_type_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PBWorkerOp::CopyFrom(const PBWorkerOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBWorkerOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBWorkerOp::IsInitialized() const {
  return true;
}

void PBWorkerOp::InternalSwap(PBWorkerOp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.op_, other->_impl_.op_);
  swap(_impl_.op_type_, other->_impl_.op_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PBWorkerOp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_WorkerCmd_2eproto_getter, &descriptor_table_WorkerCmd_2eproto_once,
      file_level_metadata_WorkerCmd_2eproto[20]);
}

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::PBWorkerCmd*
Arena::CreateMaybeMessage< ::PBWorkerCmd >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PBWorkerCmd >(arena);
}
template<> PROTOBUF_NOINLINE ::PBWorkerDisconnectOp*
Arena::CreateMaybeMessage< ::PBWorkerDisconnectOp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PBWorkerDisconnectOp >(arena);
}
template<> PROTOBUF_NOINLINE ::PBWorkerFlagUpdateOp*
Arena::CreateMaybeMessage< ::PBWorkerFlagUpdateOp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PBWorkerFlagUpdateOp >(arena);
}
template<> PROTOBUF_NOINLINE ::PBWorkerLogMessageOp*
Arena::CreateMaybeMessage< ::PBWorkerLogMessageOp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PBWorkerLogMessageOp >(arena);
}
template<> PROTOBUF_NOINLINE ::PBWorkerMetricsOp*
Arena::CreateMaybeMessage< ::PBWorkerMetricsOp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PBWorkerMetricsOp >(arena);
}
template<> PROTOBUF_NOINLINE ::PBWorkerCriticalSectionOp*
Arena::CreateMaybeMessage< ::PBWorkerCriticalSectionOp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PBWorkerCriticalSectionOp >(arena);
}
template<> PROTOBUF_NOINLINE ::PBWorkerAddEntityOp*
Arena::CreateMaybeMessage< ::PBWorkerAddEntityOp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PBWorkerAddEntityOp >(arena);
}
template<> PROTOBUF_NOINLINE ::PBWorkerRemoveEntityOp*
Arena::CreateMaybeMessage< ::PBWorkerRemoveEntityOp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PBWorkerRemoveEntityOp >(arena);
}
template<> PROTOBUF_NOINLINE ::PBWorkerReserveEntityIdsResponseOp*
Arena::CreateMaybeMessage< ::PBWorkerReserveEntityIdsResponseOp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PBWorkerReserveEntityIdsResponseOp >(arena);
}
template<> PROTOBUF_NOINLINE ::PBWorkerCreateEntityResponseOp*
Arena::CreateMaybeMessage< ::PBWorkerCreateEntityResponseOp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PBWorkerCreateEntityResponseOp >(arena);
}
template<> PROTOBUF_NOINLINE ::PBWorkerDeleteEntityResponseOp*
Arena::CreateMaybeMessage< ::PBWorkerDeleteEntityResponseOp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PBWorkerDeleteEntityResponseOp >(arena);
}
template<> PROTOBUF_NOINLINE ::PBWorkerEntityQueryResponseOp*
Arena::CreateMaybeMessage< ::PBWorkerEntityQueryResponseOp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PBWorkerEntityQueryResponseOp >(arena);
}
template<> PROTOBUF_NOINLINE ::PBWorkerAddComponentOp*
Arena::CreateMaybeMessage< ::PBWorkerAddComponentOp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PBWorkerAddComponentOp >(arena);
}
template<> PROTOBUF_NOINLINE ::PBWorkerRemoveComponentOp*
Arena::CreateMaybeMessage< ::PBWorkerRemoveComponentOp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PBWorkerRemoveComponentOp >(arena);
}
template<> PROTOBUF_NOINLINE ::PBWorkerAuthorityChangeOp*
Arena::CreateMaybeMessage< ::PBWorkerAuthorityChangeOp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PBWorkerAuthorityChangeOp >(arena);
}
template<> PROTOBUF_NOINLINE ::PBWorkerComponentUpdateOp*
Arena::CreateMaybeMessage< ::PBWorkerComponentUpdateOp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PBWorkerComponentUpdateOp >(arena);
}
template<> PROTOBUF_NOINLINE ::PBWorkerCommandRequestOp*
Arena::CreateMaybeMessage< ::PBWorkerCommandRequestOp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PBWorkerCommandRequestOp >(arena);
}
template<> PROTOBUF_NOINLINE ::PBWorkerCommandResponseOp*
Arena::CreateMaybeMessage< ::PBWorkerCommandResponseOp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PBWorkerCommandResponseOp >(arena);
}
template<> PROTOBUF_NOINLINE ::PBWorkerComponentSetAuthorityChangeOp*
Arena::CreateMaybeMessage< ::PBWorkerComponentSetAuthorityChangeOp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PBWorkerComponentSetAuthorityChangeOp >(arena);
}
template<> PROTOBUF_NOINLINE ::PBWorkerOpUnion*
Arena::CreateMaybeMessage< ::PBWorkerOpUnion >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PBWorkerOpUnion >(arena);
}
template<> PROTOBUF_NOINLINE ::PBWorkerOp*
Arena::CreateMaybeMessage< ::PBWorkerOp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PBWorkerOp >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
