// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: WorkerCmd.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_WorkerCmd_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_WorkerCmd_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "xCommond.pb.h"
#include "WorkerData.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_WorkerCmd_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_WorkerCmd_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_WorkerCmd_2eproto;
class PBWorkerAddComponentOp;
struct PBWorkerAddComponentOpDefaultTypeInternal;
extern PBWorkerAddComponentOpDefaultTypeInternal _PBWorkerAddComponentOp_default_instance_;
class PBWorkerAddEntityOp;
struct PBWorkerAddEntityOpDefaultTypeInternal;
extern PBWorkerAddEntityOpDefaultTypeInternal _PBWorkerAddEntityOp_default_instance_;
class PBWorkerAuthorityChangeOp;
struct PBWorkerAuthorityChangeOpDefaultTypeInternal;
extern PBWorkerAuthorityChangeOpDefaultTypeInternal _PBWorkerAuthorityChangeOp_default_instance_;
class PBWorkerCmd;
struct PBWorkerCmdDefaultTypeInternal;
extern PBWorkerCmdDefaultTypeInternal _PBWorkerCmd_default_instance_;
class PBWorkerCommandRequestOp;
struct PBWorkerCommandRequestOpDefaultTypeInternal;
extern PBWorkerCommandRequestOpDefaultTypeInternal _PBWorkerCommandRequestOp_default_instance_;
class PBWorkerCommandResponseOp;
struct PBWorkerCommandResponseOpDefaultTypeInternal;
extern PBWorkerCommandResponseOpDefaultTypeInternal _PBWorkerCommandResponseOp_default_instance_;
class PBWorkerComponentSetAuthorityChangeOp;
struct PBWorkerComponentSetAuthorityChangeOpDefaultTypeInternal;
extern PBWorkerComponentSetAuthorityChangeOpDefaultTypeInternal _PBWorkerComponentSetAuthorityChangeOp_default_instance_;
class PBWorkerComponentUpdateOp;
struct PBWorkerComponentUpdateOpDefaultTypeInternal;
extern PBWorkerComponentUpdateOpDefaultTypeInternal _PBWorkerComponentUpdateOp_default_instance_;
class PBWorkerCreateEntityResponseOp;
struct PBWorkerCreateEntityResponseOpDefaultTypeInternal;
extern PBWorkerCreateEntityResponseOpDefaultTypeInternal _PBWorkerCreateEntityResponseOp_default_instance_;
class PBWorkerCriticalSectionOp;
struct PBWorkerCriticalSectionOpDefaultTypeInternal;
extern PBWorkerCriticalSectionOpDefaultTypeInternal _PBWorkerCriticalSectionOp_default_instance_;
class PBWorkerDeleteEntityResponseOp;
struct PBWorkerDeleteEntityResponseOpDefaultTypeInternal;
extern PBWorkerDeleteEntityResponseOpDefaultTypeInternal _PBWorkerDeleteEntityResponseOp_default_instance_;
class PBWorkerDisconnectOp;
struct PBWorkerDisconnectOpDefaultTypeInternal;
extern PBWorkerDisconnectOpDefaultTypeInternal _PBWorkerDisconnectOp_default_instance_;
class PBWorkerEntityQueryResponseOp;
struct PBWorkerEntityQueryResponseOpDefaultTypeInternal;
extern PBWorkerEntityQueryResponseOpDefaultTypeInternal _PBWorkerEntityQueryResponseOp_default_instance_;
class PBWorkerFlagUpdateOp;
struct PBWorkerFlagUpdateOpDefaultTypeInternal;
extern PBWorkerFlagUpdateOpDefaultTypeInternal _PBWorkerFlagUpdateOp_default_instance_;
class PBWorkerLogMessageOp;
struct PBWorkerLogMessageOpDefaultTypeInternal;
extern PBWorkerLogMessageOpDefaultTypeInternal _PBWorkerLogMessageOp_default_instance_;
class PBWorkerMetricsOp;
struct PBWorkerMetricsOpDefaultTypeInternal;
extern PBWorkerMetricsOpDefaultTypeInternal _PBWorkerMetricsOp_default_instance_;
class PBWorkerOp;
struct PBWorkerOpDefaultTypeInternal;
extern PBWorkerOpDefaultTypeInternal _PBWorkerOp_default_instance_;
class PBWorkerOpUnion;
struct PBWorkerOpUnionDefaultTypeInternal;
extern PBWorkerOpUnionDefaultTypeInternal _PBWorkerOpUnion_default_instance_;
class PBWorkerRemoveComponentOp;
struct PBWorkerRemoveComponentOpDefaultTypeInternal;
extern PBWorkerRemoveComponentOpDefaultTypeInternal _PBWorkerRemoveComponentOp_default_instance_;
class PBWorkerRemoveEntityOp;
struct PBWorkerRemoveEntityOpDefaultTypeInternal;
extern PBWorkerRemoveEntityOpDefaultTypeInternal _PBWorkerRemoveEntityOp_default_instance_;
class PBWorkerReserveEntityIdsResponseOp;
struct PBWorkerReserveEntityIdsResponseOpDefaultTypeInternal;
extern PBWorkerReserveEntityIdsResponseOpDefaultTypeInternal _PBWorkerReserveEntityIdsResponseOp_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::PBWorkerAddComponentOp* Arena::CreateMaybeMessage<::PBWorkerAddComponentOp>(Arena*);
template<> ::PBWorkerAddEntityOp* Arena::CreateMaybeMessage<::PBWorkerAddEntityOp>(Arena*);
template<> ::PBWorkerAuthorityChangeOp* Arena::CreateMaybeMessage<::PBWorkerAuthorityChangeOp>(Arena*);
template<> ::PBWorkerCmd* Arena::CreateMaybeMessage<::PBWorkerCmd>(Arena*);
template<> ::PBWorkerCommandRequestOp* Arena::CreateMaybeMessage<::PBWorkerCommandRequestOp>(Arena*);
template<> ::PBWorkerCommandResponseOp* Arena::CreateMaybeMessage<::PBWorkerCommandResponseOp>(Arena*);
template<> ::PBWorkerComponentSetAuthorityChangeOp* Arena::CreateMaybeMessage<::PBWorkerComponentSetAuthorityChangeOp>(Arena*);
template<> ::PBWorkerComponentUpdateOp* Arena::CreateMaybeMessage<::PBWorkerComponentUpdateOp>(Arena*);
template<> ::PBWorkerCreateEntityResponseOp* Arena::CreateMaybeMessage<::PBWorkerCreateEntityResponseOp>(Arena*);
template<> ::PBWorkerCriticalSectionOp* Arena::CreateMaybeMessage<::PBWorkerCriticalSectionOp>(Arena*);
template<> ::PBWorkerDeleteEntityResponseOp* Arena::CreateMaybeMessage<::PBWorkerDeleteEntityResponseOp>(Arena*);
template<> ::PBWorkerDisconnectOp* Arena::CreateMaybeMessage<::PBWorkerDisconnectOp>(Arena*);
template<> ::PBWorkerEntityQueryResponseOp* Arena::CreateMaybeMessage<::PBWorkerEntityQueryResponseOp>(Arena*);
template<> ::PBWorkerFlagUpdateOp* Arena::CreateMaybeMessage<::PBWorkerFlagUpdateOp>(Arena*);
template<> ::PBWorkerLogMessageOp* Arena::CreateMaybeMessage<::PBWorkerLogMessageOp>(Arena*);
template<> ::PBWorkerMetricsOp* Arena::CreateMaybeMessage<::PBWorkerMetricsOp>(Arena*);
template<> ::PBWorkerOp* Arena::CreateMaybeMessage<::PBWorkerOp>(Arena*);
template<> ::PBWorkerOpUnion* Arena::CreateMaybeMessage<::PBWorkerOpUnion>(Arena*);
template<> ::PBWorkerRemoveComponentOp* Arena::CreateMaybeMessage<::PBWorkerRemoveComponentOp>(Arena*);
template<> ::PBWorkerRemoveEntityOp* Arena::CreateMaybeMessage<::PBWorkerRemoveEntityOp>(Arena*);
template<> ::PBWorkerReserveEntityIdsResponseOp* Arena::CreateMaybeMessage<::PBWorkerReserveEntityIdsResponseOp>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

enum PBWorkerOpType : int {
  WORKER_OP_TYPE_DISCONNECT = 1,
  WORKER_OP_TYPE_FLAG_UPDATE = 2,
  WORKER_OP_TYPE_LOG_MESSAGE = 3,
  WORKER_OP_TYPE_METRICS = 4,
  WORKER_OP_TYPE_CRITICAL_SECTION = 5,
  WORKER_OP_TYPE_ADD_ENTITY = 6,
  WORKER_OP_TYPE_REMOVE_ENTITY = 7,
  WORKER_OP_TYPE_RESERVE_ENTITY_IDS_RESPONSE = 8,
  WORKER_OP_TYPE_CREATE_ENTITY_RESPONSE = 9,
  WORKER_OP_TYPE_DELETE_ENTITY_RESPONSE = 10,
  WORKER_OP_TYPE_ENTITY_QUERY_RESPONSE = 11,
  WORKER_OP_TYPE_ADD_COMPONENT = 12,
  WORKER_OP_TYPE_REMOVE_COMPONENT = 13,
  WORKER_OP_TYPE_AUTHORITY_CHANGE = 14,
  WORKER_OP_TYPE_COMPONENT_UPDATE = 15,
  WORKER_OP_TYPE_COMMAND_REQUEST = 16,
  WORKER_OP_TYPE_COMMAND_RESPONSE = 17,
  WORKER_OP_TYPE_COMPONENT_SET_AUTHORITY_CHANGE = 18
};
bool PBWorkerOpType_IsValid(int value);
constexpr PBWorkerOpType PBWorkerOpType_MIN = WORKER_OP_TYPE_DISCONNECT;
constexpr PBWorkerOpType PBWorkerOpType_MAX = WORKER_OP_TYPE_COMPONENT_SET_AUTHORITY_CHANGE;
constexpr int PBWorkerOpType_ARRAYSIZE = PBWorkerOpType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PBWorkerOpType_descriptor();
template<typename T>
inline const std::string& PBWorkerOpType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, PBWorkerOpType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function PBWorkerOpType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    PBWorkerOpType_descriptor(), enum_t_value);
}
inline bool PBWorkerOpType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, PBWorkerOpType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<PBWorkerOpType>(
    PBWorkerOpType_descriptor(), name, value);
}
// ===================================================================

class PBWorkerCmd final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PBWorkerCmd) */ {
 public:
  inline PBWorkerCmd() : PBWorkerCmd(nullptr) {}
  ~PBWorkerCmd() override;
  explicit PROTOBUF_CONSTEXPR PBWorkerCmd(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PBWorkerCmd(const PBWorkerCmd& from);
  PBWorkerCmd(PBWorkerCmd&& from) noexcept
    : PBWorkerCmd() {
    *this = ::std::move(from);
  }

  inline PBWorkerCmd& operator=(const PBWorkerCmd& from) {
    CopyFrom(from);
    return *this;
  }
  inline PBWorkerCmd& operator=(PBWorkerCmd&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PBWorkerCmd& default_instance() {
    return *internal_default_instance();
  }
  static inline const PBWorkerCmd* internal_default_instance() {
    return reinterpret_cast<const PBWorkerCmd*>(
               &_PBWorkerCmd_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(PBWorkerCmd& a, PBWorkerCmd& b) {
    a.Swap(&b);
  }
  inline void Swap(PBWorkerCmd* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PBWorkerCmd* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PBWorkerCmd* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PBWorkerCmd>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PBWorkerCmd& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PBWorkerCmd& from) {
    PBWorkerCmd::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBWorkerCmd* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PBWorkerCmd";
  }
  protected:
  explicit PBWorkerCmd(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCmdFieldNumber = 1,
  };
  // optional .CmdType cmd = 1 [default = PB_WORK_CMD];
  bool has_cmd() const;
  private:
  bool _internal_has_cmd() const;
  public:
  void clear_cmd();
  ::CmdType cmd() const;
  void set_cmd(::CmdType value);
  private:
  ::CmdType _internal_cmd() const;
  void _internal_set_cmd(::CmdType value);
  public:

  // @@protoc_insertion_point(class_scope:PBWorkerCmd)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int cmd_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_WorkerCmd_2eproto;
};
// -------------------------------------------------------------------

class PBWorkerDisconnectOp final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PBWorkerDisconnectOp) */ {
 public:
  inline PBWorkerDisconnectOp() : PBWorkerDisconnectOp(nullptr) {}
  ~PBWorkerDisconnectOp() override;
  explicit PROTOBUF_CONSTEXPR PBWorkerDisconnectOp(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PBWorkerDisconnectOp(const PBWorkerDisconnectOp& from);
  PBWorkerDisconnectOp(PBWorkerDisconnectOp&& from) noexcept
    : PBWorkerDisconnectOp() {
    *this = ::std::move(from);
  }

  inline PBWorkerDisconnectOp& operator=(const PBWorkerDisconnectOp& from) {
    CopyFrom(from);
    return *this;
  }
  inline PBWorkerDisconnectOp& operator=(PBWorkerDisconnectOp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PBWorkerDisconnectOp& default_instance() {
    return *internal_default_instance();
  }
  static inline const PBWorkerDisconnectOp* internal_default_instance() {
    return reinterpret_cast<const PBWorkerDisconnectOp*>(
               &_PBWorkerDisconnectOp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(PBWorkerDisconnectOp& a, PBWorkerDisconnectOp& b) {
    a.Swap(&b);
  }
  inline void Swap(PBWorkerDisconnectOp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PBWorkerDisconnectOp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PBWorkerDisconnectOp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PBWorkerDisconnectOp>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PBWorkerDisconnectOp& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PBWorkerDisconnectOp& from) {
    PBWorkerDisconnectOp::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBWorkerDisconnectOp* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PBWorkerDisconnectOp";
  }
  protected:
  explicit PBWorkerDisconnectOp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReasonFieldNumber = 2,
    kConnectionStatusCodeFieldNumber = 1,
  };
  // optional string reason = 2;
  bool has_reason() const;
  private:
  bool _internal_has_reason() const;
  public:
  void clear_reason();
  const std::string& reason() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_reason(ArgT0&& arg0, ArgT... args);
  std::string* mutable_reason();
  PROTOBUF_NODISCARD std::string* release_reason();
  void set_allocated_reason(std::string* reason);
  private:
  const std::string& _internal_reason() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_reason(const std::string& value);
  std::string* _internal_mutable_reason();
  public:

  // optional uint32 connection_status_code = 1;
  bool has_connection_status_code() const;
  private:
  bool _internal_has_connection_status_code() const;
  public:
  void clear_connection_status_code();
  uint32_t connection_status_code() const;
  void set_connection_status_code(uint32_t value);
  private:
  uint32_t _internal_connection_status_code() const;
  void _internal_set_connection_status_code(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:PBWorkerDisconnectOp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr reason_;
    uint32_t connection_status_code_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_WorkerCmd_2eproto;
};
// -------------------------------------------------------------------

class PBWorkerFlagUpdateOp final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PBWorkerFlagUpdateOp) */ {
 public:
  inline PBWorkerFlagUpdateOp() : PBWorkerFlagUpdateOp(nullptr) {}
  ~PBWorkerFlagUpdateOp() override;
  explicit PROTOBUF_CONSTEXPR PBWorkerFlagUpdateOp(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PBWorkerFlagUpdateOp(const PBWorkerFlagUpdateOp& from);
  PBWorkerFlagUpdateOp(PBWorkerFlagUpdateOp&& from) noexcept
    : PBWorkerFlagUpdateOp() {
    *this = ::std::move(from);
  }

  inline PBWorkerFlagUpdateOp& operator=(const PBWorkerFlagUpdateOp& from) {
    CopyFrom(from);
    return *this;
  }
  inline PBWorkerFlagUpdateOp& operator=(PBWorkerFlagUpdateOp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PBWorkerFlagUpdateOp& default_instance() {
    return *internal_default_instance();
  }
  static inline const PBWorkerFlagUpdateOp* internal_default_instance() {
    return reinterpret_cast<const PBWorkerFlagUpdateOp*>(
               &_PBWorkerFlagUpdateOp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(PBWorkerFlagUpdateOp& a, PBWorkerFlagUpdateOp& b) {
    a.Swap(&b);
  }
  inline void Swap(PBWorkerFlagUpdateOp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PBWorkerFlagUpdateOp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PBWorkerFlagUpdateOp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PBWorkerFlagUpdateOp>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PBWorkerFlagUpdateOp& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PBWorkerFlagUpdateOp& from) {
    PBWorkerFlagUpdateOp::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBWorkerFlagUpdateOp* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PBWorkerFlagUpdateOp";
  }
  protected:
  explicit PBWorkerFlagUpdateOp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // optional string name = 1;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional string value = 2;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  const std::string& value() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_value(ArgT0&& arg0, ArgT... args);
  std::string* mutable_value();
  PROTOBUF_NODISCARD std::string* release_value();
  void set_allocated_value(std::string* value);
  private:
  const std::string& _internal_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value(const std::string& value);
  std::string* _internal_mutable_value();
  public:

  // @@protoc_insertion_point(class_scope:PBWorkerFlagUpdateOp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr value_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_WorkerCmd_2eproto;
};
// -------------------------------------------------------------------

class PBWorkerLogMessageOp final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PBWorkerLogMessageOp) */ {
 public:
  inline PBWorkerLogMessageOp() : PBWorkerLogMessageOp(nullptr) {}
  ~PBWorkerLogMessageOp() override;
  explicit PROTOBUF_CONSTEXPR PBWorkerLogMessageOp(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PBWorkerLogMessageOp(const PBWorkerLogMessageOp& from);
  PBWorkerLogMessageOp(PBWorkerLogMessageOp&& from) noexcept
    : PBWorkerLogMessageOp() {
    *this = ::std::move(from);
  }

  inline PBWorkerLogMessageOp& operator=(const PBWorkerLogMessageOp& from) {
    CopyFrom(from);
    return *this;
  }
  inline PBWorkerLogMessageOp& operator=(PBWorkerLogMessageOp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PBWorkerLogMessageOp& default_instance() {
    return *internal_default_instance();
  }
  static inline const PBWorkerLogMessageOp* internal_default_instance() {
    return reinterpret_cast<const PBWorkerLogMessageOp*>(
               &_PBWorkerLogMessageOp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(PBWorkerLogMessageOp& a, PBWorkerLogMessageOp& b) {
    a.Swap(&b);
  }
  inline void Swap(PBWorkerLogMessageOp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PBWorkerLogMessageOp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PBWorkerLogMessageOp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PBWorkerLogMessageOp>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PBWorkerLogMessageOp& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PBWorkerLogMessageOp& from) {
    PBWorkerLogMessageOp::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBWorkerLogMessageOp* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PBWorkerLogMessageOp";
  }
  protected:
  explicit PBWorkerLogMessageOp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessageFieldNumber = 2,
    kLevelFieldNumber = 1,
  };
  // optional string message = 2;
  bool has_message() const;
  private:
  bool _internal_has_message() const;
  public:
  void clear_message();
  const std::string& message() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_message(ArgT0&& arg0, ArgT... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* message);
  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(const std::string& value);
  std::string* _internal_mutable_message();
  public:

  // optional int32 level = 1;
  bool has_level() const;
  private:
  bool _internal_has_level() const;
  public:
  void clear_level();
  int32_t level() const;
  void set_level(int32_t value);
  private:
  int32_t _internal_level() const;
  void _internal_set_level(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:PBWorkerLogMessageOp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr message_;
    int32_t level_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_WorkerCmd_2eproto;
};
// -------------------------------------------------------------------

class PBWorkerMetricsOp final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PBWorkerMetricsOp) */ {
 public:
  inline PBWorkerMetricsOp() : PBWorkerMetricsOp(nullptr) {}
  ~PBWorkerMetricsOp() override;
  explicit PROTOBUF_CONSTEXPR PBWorkerMetricsOp(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PBWorkerMetricsOp(const PBWorkerMetricsOp& from);
  PBWorkerMetricsOp(PBWorkerMetricsOp&& from) noexcept
    : PBWorkerMetricsOp() {
    *this = ::std::move(from);
  }

  inline PBWorkerMetricsOp& operator=(const PBWorkerMetricsOp& from) {
    CopyFrom(from);
    return *this;
  }
  inline PBWorkerMetricsOp& operator=(PBWorkerMetricsOp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PBWorkerMetricsOp& default_instance() {
    return *internal_default_instance();
  }
  static inline const PBWorkerMetricsOp* internal_default_instance() {
    return reinterpret_cast<const PBWorkerMetricsOp*>(
               &_PBWorkerMetricsOp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(PBWorkerMetricsOp& a, PBWorkerMetricsOp& b) {
    a.Swap(&b);
  }
  inline void Swap(PBWorkerMetricsOp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PBWorkerMetricsOp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PBWorkerMetricsOp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PBWorkerMetricsOp>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PBWorkerMetricsOp& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PBWorkerMetricsOp& from) {
    PBWorkerMetricsOp::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBWorkerMetricsOp* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PBWorkerMetricsOp";
  }
  protected:
  explicit PBWorkerMetricsOp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMetricsFieldNumber = 1,
  };
  // optional .PBWorkerMetrics metrics = 1;
  bool has_metrics() const;
  private:
  bool _internal_has_metrics() const;
  public:
  void clear_metrics();
  const ::PBWorkerMetrics& metrics() const;
  PROTOBUF_NODISCARD ::PBWorkerMetrics* release_metrics();
  ::PBWorkerMetrics* mutable_metrics();
  void set_allocated_metrics(::PBWorkerMetrics* metrics);
  private:
  const ::PBWorkerMetrics& _internal_metrics() const;
  ::PBWorkerMetrics* _internal_mutable_metrics();
  public:
  void unsafe_arena_set_allocated_metrics(
      ::PBWorkerMetrics* metrics);
  ::PBWorkerMetrics* unsafe_arena_release_metrics();

  // @@protoc_insertion_point(class_scope:PBWorkerMetricsOp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PBWorkerMetrics* metrics_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_WorkerCmd_2eproto;
};
// -------------------------------------------------------------------

class PBWorkerCriticalSectionOp final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PBWorkerCriticalSectionOp) */ {
 public:
  inline PBWorkerCriticalSectionOp() : PBWorkerCriticalSectionOp(nullptr) {}
  ~PBWorkerCriticalSectionOp() override;
  explicit PROTOBUF_CONSTEXPR PBWorkerCriticalSectionOp(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PBWorkerCriticalSectionOp(const PBWorkerCriticalSectionOp& from);
  PBWorkerCriticalSectionOp(PBWorkerCriticalSectionOp&& from) noexcept
    : PBWorkerCriticalSectionOp() {
    *this = ::std::move(from);
  }

  inline PBWorkerCriticalSectionOp& operator=(const PBWorkerCriticalSectionOp& from) {
    CopyFrom(from);
    return *this;
  }
  inline PBWorkerCriticalSectionOp& operator=(PBWorkerCriticalSectionOp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PBWorkerCriticalSectionOp& default_instance() {
    return *internal_default_instance();
  }
  static inline const PBWorkerCriticalSectionOp* internal_default_instance() {
    return reinterpret_cast<const PBWorkerCriticalSectionOp*>(
               &_PBWorkerCriticalSectionOp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(PBWorkerCriticalSectionOp& a, PBWorkerCriticalSectionOp& b) {
    a.Swap(&b);
  }
  inline void Swap(PBWorkerCriticalSectionOp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PBWorkerCriticalSectionOp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PBWorkerCriticalSectionOp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PBWorkerCriticalSectionOp>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PBWorkerCriticalSectionOp& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PBWorkerCriticalSectionOp& from) {
    PBWorkerCriticalSectionOp::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBWorkerCriticalSectionOp* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PBWorkerCriticalSectionOp";
  }
  protected:
  explicit PBWorkerCriticalSectionOp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInCriticalSectionFieldNumber = 1,
  };
  // optional uint32 in_critical_section = 1;
  bool has_in_critical_section() const;
  private:
  bool _internal_has_in_critical_section() const;
  public:
  void clear_in_critical_section();
  uint32_t in_critical_section() const;
  void set_in_critical_section(uint32_t value);
  private:
  uint32_t _internal_in_critical_section() const;
  void _internal_set_in_critical_section(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:PBWorkerCriticalSectionOp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t in_critical_section_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_WorkerCmd_2eproto;
};
// -------------------------------------------------------------------

class PBWorkerAddEntityOp final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PBWorkerAddEntityOp) */ {
 public:
  inline PBWorkerAddEntityOp() : PBWorkerAddEntityOp(nullptr) {}
  ~PBWorkerAddEntityOp() override;
  explicit PROTOBUF_CONSTEXPR PBWorkerAddEntityOp(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PBWorkerAddEntityOp(const PBWorkerAddEntityOp& from);
  PBWorkerAddEntityOp(PBWorkerAddEntityOp&& from) noexcept
    : PBWorkerAddEntityOp() {
    *this = ::std::move(from);
  }

  inline PBWorkerAddEntityOp& operator=(const PBWorkerAddEntityOp& from) {
    CopyFrom(from);
    return *this;
  }
  inline PBWorkerAddEntityOp& operator=(PBWorkerAddEntityOp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PBWorkerAddEntityOp& default_instance() {
    return *internal_default_instance();
  }
  static inline const PBWorkerAddEntityOp* internal_default_instance() {
    return reinterpret_cast<const PBWorkerAddEntityOp*>(
               &_PBWorkerAddEntityOp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(PBWorkerAddEntityOp& a, PBWorkerAddEntityOp& b) {
    a.Swap(&b);
  }
  inline void Swap(PBWorkerAddEntityOp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PBWorkerAddEntityOp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PBWorkerAddEntityOp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PBWorkerAddEntityOp>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PBWorkerAddEntityOp& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PBWorkerAddEntityOp& from) {
    PBWorkerAddEntityOp::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBWorkerAddEntityOp* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PBWorkerAddEntityOp";
  }
  protected:
  explicit PBWorkerAddEntityOp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEntityIdFieldNumber = 1,
  };
  // optional int64 entity_id = 1;
  bool has_entity_id() const;
  private:
  bool _internal_has_entity_id() const;
  public:
  void clear_entity_id();
  int64_t entity_id() const;
  void set_entity_id(int64_t value);
  private:
  int64_t _internal_entity_id() const;
  void _internal_set_entity_id(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:PBWorkerAddEntityOp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int64_t entity_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_WorkerCmd_2eproto;
};
// -------------------------------------------------------------------

class PBWorkerRemoveEntityOp final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PBWorkerRemoveEntityOp) */ {
 public:
  inline PBWorkerRemoveEntityOp() : PBWorkerRemoveEntityOp(nullptr) {}
  ~PBWorkerRemoveEntityOp() override;
  explicit PROTOBUF_CONSTEXPR PBWorkerRemoveEntityOp(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PBWorkerRemoveEntityOp(const PBWorkerRemoveEntityOp& from);
  PBWorkerRemoveEntityOp(PBWorkerRemoveEntityOp&& from) noexcept
    : PBWorkerRemoveEntityOp() {
    *this = ::std::move(from);
  }

  inline PBWorkerRemoveEntityOp& operator=(const PBWorkerRemoveEntityOp& from) {
    CopyFrom(from);
    return *this;
  }
  inline PBWorkerRemoveEntityOp& operator=(PBWorkerRemoveEntityOp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PBWorkerRemoveEntityOp& default_instance() {
    return *internal_default_instance();
  }
  static inline const PBWorkerRemoveEntityOp* internal_default_instance() {
    return reinterpret_cast<const PBWorkerRemoveEntityOp*>(
               &_PBWorkerRemoveEntityOp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(PBWorkerRemoveEntityOp& a, PBWorkerRemoveEntityOp& b) {
    a.Swap(&b);
  }
  inline void Swap(PBWorkerRemoveEntityOp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PBWorkerRemoveEntityOp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PBWorkerRemoveEntityOp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PBWorkerRemoveEntityOp>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PBWorkerRemoveEntityOp& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PBWorkerRemoveEntityOp& from) {
    PBWorkerRemoveEntityOp::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBWorkerRemoveEntityOp* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PBWorkerRemoveEntityOp";
  }
  protected:
  explicit PBWorkerRemoveEntityOp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEntityIdFieldNumber = 1,
  };
  // optional int64 entity_id = 1;
  bool has_entity_id() const;
  private:
  bool _internal_has_entity_id() const;
  public:
  void clear_entity_id();
  int64_t entity_id() const;
  void set_entity_id(int64_t value);
  private:
  int64_t _internal_entity_id() const;
  void _internal_set_entity_id(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:PBWorkerRemoveEntityOp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int64_t entity_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_WorkerCmd_2eproto;
};
// -------------------------------------------------------------------

class PBWorkerReserveEntityIdsResponseOp final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PBWorkerReserveEntityIdsResponseOp) */ {
 public:
  inline PBWorkerReserveEntityIdsResponseOp() : PBWorkerReserveEntityIdsResponseOp(nullptr) {}
  ~PBWorkerReserveEntityIdsResponseOp() override;
  explicit PROTOBUF_CONSTEXPR PBWorkerReserveEntityIdsResponseOp(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PBWorkerReserveEntityIdsResponseOp(const PBWorkerReserveEntityIdsResponseOp& from);
  PBWorkerReserveEntityIdsResponseOp(PBWorkerReserveEntityIdsResponseOp&& from) noexcept
    : PBWorkerReserveEntityIdsResponseOp() {
    *this = ::std::move(from);
  }

  inline PBWorkerReserveEntityIdsResponseOp& operator=(const PBWorkerReserveEntityIdsResponseOp& from) {
    CopyFrom(from);
    return *this;
  }
  inline PBWorkerReserveEntityIdsResponseOp& operator=(PBWorkerReserveEntityIdsResponseOp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PBWorkerReserveEntityIdsResponseOp& default_instance() {
    return *internal_default_instance();
  }
  static inline const PBWorkerReserveEntityIdsResponseOp* internal_default_instance() {
    return reinterpret_cast<const PBWorkerReserveEntityIdsResponseOp*>(
               &_PBWorkerReserveEntityIdsResponseOp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(PBWorkerReserveEntityIdsResponseOp& a, PBWorkerReserveEntityIdsResponseOp& b) {
    a.Swap(&b);
  }
  inline void Swap(PBWorkerReserveEntityIdsResponseOp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PBWorkerReserveEntityIdsResponseOp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PBWorkerReserveEntityIdsResponseOp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PBWorkerReserveEntityIdsResponseOp>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PBWorkerReserveEntityIdsResponseOp& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PBWorkerReserveEntityIdsResponseOp& from) {
    PBWorkerReserveEntityIdsResponseOp::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBWorkerReserveEntityIdsResponseOp* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PBWorkerReserveEntityIdsResponseOp";
  }
  protected:
  explicit PBWorkerReserveEntityIdsResponseOp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessageFieldNumber = 3,
    kRequestIdFieldNumber = 1,
    kFirstEntityIdFieldNumber = 4,
    kNumberOfEntityIdsFieldNumber = 5,
    kStatusCodeFieldNumber = 2,
  };
  // optional string message = 3;
  bool has_message() const;
  private:
  bool _internal_has_message() const;
  public:
  void clear_message();
  const std::string& message() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_message(ArgT0&& arg0, ArgT... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* message);
  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(const std::string& value);
  std::string* _internal_mutable_message();
  public:

  // optional int64 request_id = 1;
  bool has_request_id() const;
  private:
  bool _internal_has_request_id() const;
  public:
  void clear_request_id();
  int64_t request_id() const;
  void set_request_id(int64_t value);
  private:
  int64_t _internal_request_id() const;
  void _internal_set_request_id(int64_t value);
  public:

  // optional int64 first_entity_id = 4;
  bool has_first_entity_id() const;
  private:
  bool _internal_has_first_entity_id() const;
  public:
  void clear_first_entity_id();
  int64_t first_entity_id() const;
  void set_first_entity_id(int64_t value);
  private:
  int64_t _internal_first_entity_id() const;
  void _internal_set_first_entity_id(int64_t value);
  public:

  // optional uint32 number_of_entity_ids = 5;
  bool has_number_of_entity_ids() const;
  private:
  bool _internal_has_number_of_entity_ids() const;
  public:
  void clear_number_of_entity_ids();
  uint32_t number_of_entity_ids() const;
  void set_number_of_entity_ids(uint32_t value);
  private:
  uint32_t _internal_number_of_entity_ids() const;
  void _internal_set_number_of_entity_ids(uint32_t value);
  public:

  // optional .PBWorkerStatusCode status_code = 2;
  bool has_status_code() const;
  private:
  bool _internal_has_status_code() const;
  public:
  void clear_status_code();
  ::PBWorkerStatusCode status_code() const;
  void set_status_code(::PBWorkerStatusCode value);
  private:
  ::PBWorkerStatusCode _internal_status_code() const;
  void _internal_set_status_code(::PBWorkerStatusCode value);
  public:

  // @@protoc_insertion_point(class_scope:PBWorkerReserveEntityIdsResponseOp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr message_;
    int64_t request_id_;
    int64_t first_entity_id_;
    uint32_t number_of_entity_ids_;
    int status_code_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_WorkerCmd_2eproto;
};
// -------------------------------------------------------------------

class PBWorkerCreateEntityResponseOp final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PBWorkerCreateEntityResponseOp) */ {
 public:
  inline PBWorkerCreateEntityResponseOp() : PBWorkerCreateEntityResponseOp(nullptr) {}
  ~PBWorkerCreateEntityResponseOp() override;
  explicit PROTOBUF_CONSTEXPR PBWorkerCreateEntityResponseOp(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PBWorkerCreateEntityResponseOp(const PBWorkerCreateEntityResponseOp& from);
  PBWorkerCreateEntityResponseOp(PBWorkerCreateEntityResponseOp&& from) noexcept
    : PBWorkerCreateEntityResponseOp() {
    *this = ::std::move(from);
  }

  inline PBWorkerCreateEntityResponseOp& operator=(const PBWorkerCreateEntityResponseOp& from) {
    CopyFrom(from);
    return *this;
  }
  inline PBWorkerCreateEntityResponseOp& operator=(PBWorkerCreateEntityResponseOp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PBWorkerCreateEntityResponseOp& default_instance() {
    return *internal_default_instance();
  }
  static inline const PBWorkerCreateEntityResponseOp* internal_default_instance() {
    return reinterpret_cast<const PBWorkerCreateEntityResponseOp*>(
               &_PBWorkerCreateEntityResponseOp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(PBWorkerCreateEntityResponseOp& a, PBWorkerCreateEntityResponseOp& b) {
    a.Swap(&b);
  }
  inline void Swap(PBWorkerCreateEntityResponseOp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PBWorkerCreateEntityResponseOp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PBWorkerCreateEntityResponseOp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PBWorkerCreateEntityResponseOp>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PBWorkerCreateEntityResponseOp& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PBWorkerCreateEntityResponseOp& from) {
    PBWorkerCreateEntityResponseOp::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBWorkerCreateEntityResponseOp* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PBWorkerCreateEntityResponseOp";
  }
  protected:
  explicit PBWorkerCreateEntityResponseOp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessageFieldNumber = 3,
    kRequestIdFieldNumber = 1,
    kEntityIdFieldNumber = 4,
    kStatusCodeFieldNumber = 2,
  };
  // optional string message = 3;
  bool has_message() const;
  private:
  bool _internal_has_message() const;
  public:
  void clear_message();
  const std::string& message() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_message(ArgT0&& arg0, ArgT... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* message);
  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(const std::string& value);
  std::string* _internal_mutable_message();
  public:

  // optional int64 request_id = 1;
  bool has_request_id() const;
  private:
  bool _internal_has_request_id() const;
  public:
  void clear_request_id();
  int64_t request_id() const;
  void set_request_id(int64_t value);
  private:
  int64_t _internal_request_id() const;
  void _internal_set_request_id(int64_t value);
  public:

  // optional int64 entity_id = 4;
  bool has_entity_id() const;
  private:
  bool _internal_has_entity_id() const;
  public:
  void clear_entity_id();
  int64_t entity_id() const;
  void set_entity_id(int64_t value);
  private:
  int64_t _internal_entity_id() const;
  void _internal_set_entity_id(int64_t value);
  public:

  // optional .PBWorkerStatusCode status_code = 2;
  bool has_status_code() const;
  private:
  bool _internal_has_status_code() const;
  public:
  void clear_status_code();
  ::PBWorkerStatusCode status_code() const;
  void set_status_code(::PBWorkerStatusCode value);
  private:
  ::PBWorkerStatusCode _internal_status_code() const;
  void _internal_set_status_code(::PBWorkerStatusCode value);
  public:

  // @@protoc_insertion_point(class_scope:PBWorkerCreateEntityResponseOp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr message_;
    int64_t request_id_;
    int64_t entity_id_;
    int status_code_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_WorkerCmd_2eproto;
};
// -------------------------------------------------------------------

class PBWorkerDeleteEntityResponseOp final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PBWorkerDeleteEntityResponseOp) */ {
 public:
  inline PBWorkerDeleteEntityResponseOp() : PBWorkerDeleteEntityResponseOp(nullptr) {}
  ~PBWorkerDeleteEntityResponseOp() override;
  explicit PROTOBUF_CONSTEXPR PBWorkerDeleteEntityResponseOp(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PBWorkerDeleteEntityResponseOp(const PBWorkerDeleteEntityResponseOp& from);
  PBWorkerDeleteEntityResponseOp(PBWorkerDeleteEntityResponseOp&& from) noexcept
    : PBWorkerDeleteEntityResponseOp() {
    *this = ::std::move(from);
  }

  inline PBWorkerDeleteEntityResponseOp& operator=(const PBWorkerDeleteEntityResponseOp& from) {
    CopyFrom(from);
    return *this;
  }
  inline PBWorkerDeleteEntityResponseOp& operator=(PBWorkerDeleteEntityResponseOp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PBWorkerDeleteEntityResponseOp& default_instance() {
    return *internal_default_instance();
  }
  static inline const PBWorkerDeleteEntityResponseOp* internal_default_instance() {
    return reinterpret_cast<const PBWorkerDeleteEntityResponseOp*>(
               &_PBWorkerDeleteEntityResponseOp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(PBWorkerDeleteEntityResponseOp& a, PBWorkerDeleteEntityResponseOp& b) {
    a.Swap(&b);
  }
  inline void Swap(PBWorkerDeleteEntityResponseOp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PBWorkerDeleteEntityResponseOp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PBWorkerDeleteEntityResponseOp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PBWorkerDeleteEntityResponseOp>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PBWorkerDeleteEntityResponseOp& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PBWorkerDeleteEntityResponseOp& from) {
    PBWorkerDeleteEntityResponseOp::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBWorkerDeleteEntityResponseOp* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PBWorkerDeleteEntityResponseOp";
  }
  protected:
  explicit PBWorkerDeleteEntityResponseOp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessageFieldNumber = 4,
    kRequestIdFieldNumber = 1,
    kEntityIdFieldNumber = 2,
    kStatusCodeFieldNumber = 3,
  };
  // optional string message = 4;
  bool has_message() const;
  private:
  bool _internal_has_message() const;
  public:
  void clear_message();
  const std::string& message() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_message(ArgT0&& arg0, ArgT... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* message);
  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(const std::string& value);
  std::string* _internal_mutable_message();
  public:

  // optional int64 request_id = 1;
  bool has_request_id() const;
  private:
  bool _internal_has_request_id() const;
  public:
  void clear_request_id();
  int64_t request_id() const;
  void set_request_id(int64_t value);
  private:
  int64_t _internal_request_id() const;
  void _internal_set_request_id(int64_t value);
  public:

  // optional int64 entity_id = 2;
  bool has_entity_id() const;
  private:
  bool _internal_has_entity_id() const;
  public:
  void clear_entity_id();
  int64_t entity_id() const;
  void set_entity_id(int64_t value);
  private:
  int64_t _internal_entity_id() const;
  void _internal_set_entity_id(int64_t value);
  public:

  // optional .PBWorkerStatusCode status_code = 3;
  bool has_status_code() const;
  private:
  bool _internal_has_status_code() const;
  public:
  void clear_status_code();
  ::PBWorkerStatusCode status_code() const;
  void set_status_code(::PBWorkerStatusCode value);
  private:
  ::PBWorkerStatusCode _internal_status_code() const;
  void _internal_set_status_code(::PBWorkerStatusCode value);
  public:

  // @@protoc_insertion_point(class_scope:PBWorkerDeleteEntityResponseOp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr message_;
    int64_t request_id_;
    int64_t entity_id_;
    int status_code_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_WorkerCmd_2eproto;
};
// -------------------------------------------------------------------

class PBWorkerEntityQueryResponseOp final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PBWorkerEntityQueryResponseOp) */ {
 public:
  inline PBWorkerEntityQueryResponseOp() : PBWorkerEntityQueryResponseOp(nullptr) {}
  ~PBWorkerEntityQueryResponseOp() override;
  explicit PROTOBUF_CONSTEXPR PBWorkerEntityQueryResponseOp(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PBWorkerEntityQueryResponseOp(const PBWorkerEntityQueryResponseOp& from);
  PBWorkerEntityQueryResponseOp(PBWorkerEntityQueryResponseOp&& from) noexcept
    : PBWorkerEntityQueryResponseOp() {
    *this = ::std::move(from);
  }

  inline PBWorkerEntityQueryResponseOp& operator=(const PBWorkerEntityQueryResponseOp& from) {
    CopyFrom(from);
    return *this;
  }
  inline PBWorkerEntityQueryResponseOp& operator=(PBWorkerEntityQueryResponseOp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PBWorkerEntityQueryResponseOp& default_instance() {
    return *internal_default_instance();
  }
  static inline const PBWorkerEntityQueryResponseOp* internal_default_instance() {
    return reinterpret_cast<const PBWorkerEntityQueryResponseOp*>(
               &_PBWorkerEntityQueryResponseOp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(PBWorkerEntityQueryResponseOp& a, PBWorkerEntityQueryResponseOp& b) {
    a.Swap(&b);
  }
  inline void Swap(PBWorkerEntityQueryResponseOp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PBWorkerEntityQueryResponseOp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PBWorkerEntityQueryResponseOp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PBWorkerEntityQueryResponseOp>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PBWorkerEntityQueryResponseOp& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PBWorkerEntityQueryResponseOp& from) {
    PBWorkerEntityQueryResponseOp::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBWorkerEntityQueryResponseOp* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PBWorkerEntityQueryResponseOp";
  }
  protected:
  explicit PBWorkerEntityQueryResponseOp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultsFieldNumber = 5,
    kMessageFieldNumber = 3,
    kRequestIdFieldNumber = 1,
    kResultCountFieldNumber = 4,
    kStatusCodeFieldNumber = 2,
  };
  // repeated .PBWorkerEntity results = 5;
  int results_size() const;
  private:
  int _internal_results_size() const;
  public:
  void clear_results();
  ::PBWorkerEntity* mutable_results(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PBWorkerEntity >*
      mutable_results();
  private:
  const ::PBWorkerEntity& _internal_results(int index) const;
  ::PBWorkerEntity* _internal_add_results();
  public:
  const ::PBWorkerEntity& results(int index) const;
  ::PBWorkerEntity* add_results();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PBWorkerEntity >&
      results() const;

  // optional string message = 3;
  bool has_message() const;
  private:
  bool _internal_has_message() const;
  public:
  void clear_message();
  const std::string& message() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_message(ArgT0&& arg0, ArgT... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* message);
  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(const std::string& value);
  std::string* _internal_mutable_message();
  public:

  // optional int64 request_id = 1;
  bool has_request_id() const;
  private:
  bool _internal_has_request_id() const;
  public:
  void clear_request_id();
  int64_t request_id() const;
  void set_request_id(int64_t value);
  private:
  int64_t _internal_request_id() const;
  void _internal_set_request_id(int64_t value);
  public:

  // optional uint32 result_count = 4;
  bool has_result_count() const;
  private:
  bool _internal_has_result_count() const;
  public:
  void clear_result_count();
  uint32_t result_count() const;
  void set_result_count(uint32_t value);
  private:
  uint32_t _internal_result_count() const;
  void _internal_set_result_count(uint32_t value);
  public:

  // optional .PBWorkerStatusCode status_code = 2;
  bool has_status_code() const;
  private:
  bool _internal_has_status_code() const;
  public:
  void clear_status_code();
  ::PBWorkerStatusCode status_code() const;
  void set_status_code(::PBWorkerStatusCode value);
  private:
  ::PBWorkerStatusCode _internal_status_code() const;
  void _internal_set_status_code(::PBWorkerStatusCode value);
  public:

  // @@protoc_insertion_point(class_scope:PBWorkerEntityQueryResponseOp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PBWorkerEntity > results_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr message_;
    int64_t request_id_;
    uint32_t result_count_;
    int status_code_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_WorkerCmd_2eproto;
};
// -------------------------------------------------------------------

class PBWorkerAddComponentOp final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PBWorkerAddComponentOp) */ {
 public:
  inline PBWorkerAddComponentOp() : PBWorkerAddComponentOp(nullptr) {}
  ~PBWorkerAddComponentOp() override;
  explicit PROTOBUF_CONSTEXPR PBWorkerAddComponentOp(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PBWorkerAddComponentOp(const PBWorkerAddComponentOp& from);
  PBWorkerAddComponentOp(PBWorkerAddComponentOp&& from) noexcept
    : PBWorkerAddComponentOp() {
    *this = ::std::move(from);
  }

  inline PBWorkerAddComponentOp& operator=(const PBWorkerAddComponentOp& from) {
    CopyFrom(from);
    return *this;
  }
  inline PBWorkerAddComponentOp& operator=(PBWorkerAddComponentOp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PBWorkerAddComponentOp& default_instance() {
    return *internal_default_instance();
  }
  static inline const PBWorkerAddComponentOp* internal_default_instance() {
    return reinterpret_cast<const PBWorkerAddComponentOp*>(
               &_PBWorkerAddComponentOp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(PBWorkerAddComponentOp& a, PBWorkerAddComponentOp& b) {
    a.Swap(&b);
  }
  inline void Swap(PBWorkerAddComponentOp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PBWorkerAddComponentOp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PBWorkerAddComponentOp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PBWorkerAddComponentOp>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PBWorkerAddComponentOp& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PBWorkerAddComponentOp& from) {
    PBWorkerAddComponentOp::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBWorkerAddComponentOp* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PBWorkerAddComponentOp";
  }
  protected:
  explicit PBWorkerAddComponentOp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 2,
    kEntityIdFieldNumber = 1,
  };
  // optional .PBWorkerComponentData data = 2;
  bool has_data() const;
  private:
  bool _internal_has_data() const;
  public:
  void clear_data();
  const ::PBWorkerComponentData& data() const;
  PROTOBUF_NODISCARD ::PBWorkerComponentData* release_data();
  ::PBWorkerComponentData* mutable_data();
  void set_allocated_data(::PBWorkerComponentData* data);
  private:
  const ::PBWorkerComponentData& _internal_data() const;
  ::PBWorkerComponentData* _internal_mutable_data();
  public:
  void unsafe_arena_set_allocated_data(
      ::PBWorkerComponentData* data);
  ::PBWorkerComponentData* unsafe_arena_release_data();

  // optional int64 entity_id = 1;
  bool has_entity_id() const;
  private:
  bool _internal_has_entity_id() const;
  public:
  void clear_entity_id();
  int64_t entity_id() const;
  void set_entity_id(int64_t value);
  private:
  int64_t _internal_entity_id() const;
  void _internal_set_entity_id(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:PBWorkerAddComponentOp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PBWorkerComponentData* data_;
    int64_t entity_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_WorkerCmd_2eproto;
};
// -------------------------------------------------------------------

class PBWorkerRemoveComponentOp final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PBWorkerRemoveComponentOp) */ {
 public:
  inline PBWorkerRemoveComponentOp() : PBWorkerRemoveComponentOp(nullptr) {}
  ~PBWorkerRemoveComponentOp() override;
  explicit PROTOBUF_CONSTEXPR PBWorkerRemoveComponentOp(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PBWorkerRemoveComponentOp(const PBWorkerRemoveComponentOp& from);
  PBWorkerRemoveComponentOp(PBWorkerRemoveComponentOp&& from) noexcept
    : PBWorkerRemoveComponentOp() {
    *this = ::std::move(from);
  }

  inline PBWorkerRemoveComponentOp& operator=(const PBWorkerRemoveComponentOp& from) {
    CopyFrom(from);
    return *this;
  }
  inline PBWorkerRemoveComponentOp& operator=(PBWorkerRemoveComponentOp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PBWorkerRemoveComponentOp& default_instance() {
    return *internal_default_instance();
  }
  static inline const PBWorkerRemoveComponentOp* internal_default_instance() {
    return reinterpret_cast<const PBWorkerRemoveComponentOp*>(
               &_PBWorkerRemoveComponentOp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(PBWorkerRemoveComponentOp& a, PBWorkerRemoveComponentOp& b) {
    a.Swap(&b);
  }
  inline void Swap(PBWorkerRemoveComponentOp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PBWorkerRemoveComponentOp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PBWorkerRemoveComponentOp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PBWorkerRemoveComponentOp>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PBWorkerRemoveComponentOp& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PBWorkerRemoveComponentOp& from) {
    PBWorkerRemoveComponentOp::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBWorkerRemoveComponentOp* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PBWorkerRemoveComponentOp";
  }
  protected:
  explicit PBWorkerRemoveComponentOp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEntityIdFieldNumber = 1,
    kComponentIdFieldNumber = 2,
  };
  // optional int64 entity_id = 1;
  bool has_entity_id() const;
  private:
  bool _internal_has_entity_id() const;
  public:
  void clear_entity_id();
  int64_t entity_id() const;
  void set_entity_id(int64_t value);
  private:
  int64_t _internal_entity_id() const;
  void _internal_set_entity_id(int64_t value);
  public:

  // optional uint32 component_id = 2;
  bool has_component_id() const;
  private:
  bool _internal_has_component_id() const;
  public:
  void clear_component_id();
  uint32_t component_id() const;
  void set_component_id(uint32_t value);
  private:
  uint32_t _internal_component_id() const;
  void _internal_set_component_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:PBWorkerRemoveComponentOp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int64_t entity_id_;
    uint32_t component_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_WorkerCmd_2eproto;
};
// -------------------------------------------------------------------

class PBWorkerAuthorityChangeOp final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PBWorkerAuthorityChangeOp) */ {
 public:
  inline PBWorkerAuthorityChangeOp() : PBWorkerAuthorityChangeOp(nullptr) {}
  ~PBWorkerAuthorityChangeOp() override;
  explicit PROTOBUF_CONSTEXPR PBWorkerAuthorityChangeOp(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PBWorkerAuthorityChangeOp(const PBWorkerAuthorityChangeOp& from);
  PBWorkerAuthorityChangeOp(PBWorkerAuthorityChangeOp&& from) noexcept
    : PBWorkerAuthorityChangeOp() {
    *this = ::std::move(from);
  }

  inline PBWorkerAuthorityChangeOp& operator=(const PBWorkerAuthorityChangeOp& from) {
    CopyFrom(from);
    return *this;
  }
  inline PBWorkerAuthorityChangeOp& operator=(PBWorkerAuthorityChangeOp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PBWorkerAuthorityChangeOp& default_instance() {
    return *internal_default_instance();
  }
  static inline const PBWorkerAuthorityChangeOp* internal_default_instance() {
    return reinterpret_cast<const PBWorkerAuthorityChangeOp*>(
               &_PBWorkerAuthorityChangeOp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(PBWorkerAuthorityChangeOp& a, PBWorkerAuthorityChangeOp& b) {
    a.Swap(&b);
  }
  inline void Swap(PBWorkerAuthorityChangeOp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PBWorkerAuthorityChangeOp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PBWorkerAuthorityChangeOp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PBWorkerAuthorityChangeOp>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PBWorkerAuthorityChangeOp& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PBWorkerAuthorityChangeOp& from) {
    PBWorkerAuthorityChangeOp::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBWorkerAuthorityChangeOp* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PBWorkerAuthorityChangeOp";
  }
  protected:
  explicit PBWorkerAuthorityChangeOp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEntityIdFieldNumber = 1,
    kComponentIdFieldNumber = 2,
    kAuthorityFieldNumber = 3,
  };
  // optional int64 entity_id = 1;
  bool has_entity_id() const;
  private:
  bool _internal_has_entity_id() const;
  public:
  void clear_entity_id();
  int64_t entity_id() const;
  void set_entity_id(int64_t value);
  private:
  int64_t _internal_entity_id() const;
  void _internal_set_entity_id(int64_t value);
  public:

  // optional uint32 component_id = 2;
  bool has_component_id() const;
  private:
  bool _internal_has_component_id() const;
  public:
  void clear_component_id();
  uint32_t component_id() const;
  void set_component_id(uint32_t value);
  private:
  uint32_t _internal_component_id() const;
  void _internal_set_component_id(uint32_t value);
  public:

  // optional .PBWorkerAuthority authority = 3;
  bool has_authority() const;
  private:
  bool _internal_has_authority() const;
  public:
  void clear_authority();
  ::PBWorkerAuthority authority() const;
  void set_authority(::PBWorkerAuthority value);
  private:
  ::PBWorkerAuthority _internal_authority() const;
  void _internal_set_authority(::PBWorkerAuthority value);
  public:

  // @@protoc_insertion_point(class_scope:PBWorkerAuthorityChangeOp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int64_t entity_id_;
    uint32_t component_id_;
    int authority_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_WorkerCmd_2eproto;
};
// -------------------------------------------------------------------

class PBWorkerComponentUpdateOp final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PBWorkerComponentUpdateOp) */ {
 public:
  inline PBWorkerComponentUpdateOp() : PBWorkerComponentUpdateOp(nullptr) {}
  ~PBWorkerComponentUpdateOp() override;
  explicit PROTOBUF_CONSTEXPR PBWorkerComponentUpdateOp(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PBWorkerComponentUpdateOp(const PBWorkerComponentUpdateOp& from);
  PBWorkerComponentUpdateOp(PBWorkerComponentUpdateOp&& from) noexcept
    : PBWorkerComponentUpdateOp() {
    *this = ::std::move(from);
  }

  inline PBWorkerComponentUpdateOp& operator=(const PBWorkerComponentUpdateOp& from) {
    CopyFrom(from);
    return *this;
  }
  inline PBWorkerComponentUpdateOp& operator=(PBWorkerComponentUpdateOp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PBWorkerComponentUpdateOp& default_instance() {
    return *internal_default_instance();
  }
  static inline const PBWorkerComponentUpdateOp* internal_default_instance() {
    return reinterpret_cast<const PBWorkerComponentUpdateOp*>(
               &_PBWorkerComponentUpdateOp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(PBWorkerComponentUpdateOp& a, PBWorkerComponentUpdateOp& b) {
    a.Swap(&b);
  }
  inline void Swap(PBWorkerComponentUpdateOp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PBWorkerComponentUpdateOp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PBWorkerComponentUpdateOp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PBWorkerComponentUpdateOp>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PBWorkerComponentUpdateOp& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PBWorkerComponentUpdateOp& from) {
    PBWorkerComponentUpdateOp::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBWorkerComponentUpdateOp* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PBWorkerComponentUpdateOp";
  }
  protected:
  explicit PBWorkerComponentUpdateOp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUpdateFieldNumber = 2,
    kEntityIdFieldNumber = 1,
  };
  // optional .PBWorkerComponentUpdate update = 2;
  bool has_update() const;
  private:
  bool _internal_has_update() const;
  public:
  void clear_update();
  const ::PBWorkerComponentUpdate& update() const;
  PROTOBUF_NODISCARD ::PBWorkerComponentUpdate* release_update();
  ::PBWorkerComponentUpdate* mutable_update();
  void set_allocated_update(::PBWorkerComponentUpdate* update);
  private:
  const ::PBWorkerComponentUpdate& _internal_update() const;
  ::PBWorkerComponentUpdate* _internal_mutable_update();
  public:
  void unsafe_arena_set_allocated_update(
      ::PBWorkerComponentUpdate* update);
  ::PBWorkerComponentUpdate* unsafe_arena_release_update();

  // optional int64 entity_id = 1;
  bool has_entity_id() const;
  private:
  bool _internal_has_entity_id() const;
  public:
  void clear_entity_id();
  int64_t entity_id() const;
  void set_entity_id(int64_t value);
  private:
  int64_t _internal_entity_id() const;
  void _internal_set_entity_id(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:PBWorkerComponentUpdateOp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PBWorkerComponentUpdate* update_;
    int64_t entity_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_WorkerCmd_2eproto;
};
// -------------------------------------------------------------------

class PBWorkerCommandRequestOp final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PBWorkerCommandRequestOp) */ {
 public:
  inline PBWorkerCommandRequestOp() : PBWorkerCommandRequestOp(nullptr) {}
  ~PBWorkerCommandRequestOp() override;
  explicit PROTOBUF_CONSTEXPR PBWorkerCommandRequestOp(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PBWorkerCommandRequestOp(const PBWorkerCommandRequestOp& from);
  PBWorkerCommandRequestOp(PBWorkerCommandRequestOp&& from) noexcept
    : PBWorkerCommandRequestOp() {
    *this = ::std::move(from);
  }

  inline PBWorkerCommandRequestOp& operator=(const PBWorkerCommandRequestOp& from) {
    CopyFrom(from);
    return *this;
  }
  inline PBWorkerCommandRequestOp& operator=(PBWorkerCommandRequestOp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PBWorkerCommandRequestOp& default_instance() {
    return *internal_default_instance();
  }
  static inline const PBWorkerCommandRequestOp* internal_default_instance() {
    return reinterpret_cast<const PBWorkerCommandRequestOp*>(
               &_PBWorkerCommandRequestOp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(PBWorkerCommandRequestOp& a, PBWorkerCommandRequestOp& b) {
    a.Swap(&b);
  }
  inline void Swap(PBWorkerCommandRequestOp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PBWorkerCommandRequestOp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PBWorkerCommandRequestOp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PBWorkerCommandRequestOp>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PBWorkerCommandRequestOp& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PBWorkerCommandRequestOp& from) {
    PBWorkerCommandRequestOp::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBWorkerCommandRequestOp* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PBWorkerCommandRequestOp";
  }
  protected:
  explicit PBWorkerCommandRequestOp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCallerAttributeSetFieldNumber = 6,
    kRequestFieldNumber = 7,
    kRequestIdFieldNumber = 1,
    kEntityIdFieldNumber = 2,
    kTimeoutMillisFieldNumber = 3,
    kCallerWorkerIdFieldNumber = 4,
    kCallerWorkerEntityIdFieldNumber = 5,
  };
  // optional .PBWorkerWorkerAttributes caller_attribute_set = 6;
  bool has_caller_attribute_set() const;
  private:
  bool _internal_has_caller_attribute_set() const;
  public:
  void clear_caller_attribute_set();
  const ::PBWorkerWorkerAttributes& caller_attribute_set() const;
  PROTOBUF_NODISCARD ::PBWorkerWorkerAttributes* release_caller_attribute_set();
  ::PBWorkerWorkerAttributes* mutable_caller_attribute_set();
  void set_allocated_caller_attribute_set(::PBWorkerWorkerAttributes* caller_attribute_set);
  private:
  const ::PBWorkerWorkerAttributes& _internal_caller_attribute_set() const;
  ::PBWorkerWorkerAttributes* _internal_mutable_caller_attribute_set();
  public:
  void unsafe_arena_set_allocated_caller_attribute_set(
      ::PBWorkerWorkerAttributes* caller_attribute_set);
  ::PBWorkerWorkerAttributes* unsafe_arena_release_caller_attribute_set();

  // optional .PBWorkerCommandRequest request = 7;
  bool has_request() const;
  private:
  bool _internal_has_request() const;
  public:
  void clear_request();
  const ::PBWorkerCommandRequest& request() const;
  PROTOBUF_NODISCARD ::PBWorkerCommandRequest* release_request();
  ::PBWorkerCommandRequest* mutable_request();
  void set_allocated_request(::PBWorkerCommandRequest* request);
  private:
  const ::PBWorkerCommandRequest& _internal_request() const;
  ::PBWorkerCommandRequest* _internal_mutable_request();
  public:
  void unsafe_arena_set_allocated_request(
      ::PBWorkerCommandRequest* request);
  ::PBWorkerCommandRequest* unsafe_arena_release_request();

  // optional int64 request_id = 1;
  bool has_request_id() const;
  private:
  bool _internal_has_request_id() const;
  public:
  void clear_request_id();
  int64_t request_id() const;
  void set_request_id(int64_t value);
  private:
  int64_t _internal_request_id() const;
  void _internal_set_request_id(int64_t value);
  public:

  // optional int64 entity_id = 2;
  bool has_entity_id() const;
  private:
  bool _internal_has_entity_id() const;
  public:
  void clear_entity_id();
  int64_t entity_id() const;
  void set_entity_id(int64_t value);
  private:
  int64_t _internal_entity_id() const;
  void _internal_set_entity_id(int64_t value);
  public:

  // optional uint32 timeout_millis = 3;
  bool has_timeout_millis() const;
  private:
  bool _internal_has_timeout_millis() const;
  public:
  void clear_timeout_millis();
  uint32_t timeout_millis() const;
  void set_timeout_millis(uint32_t value);
  private:
  uint32_t _internal_timeout_millis() const;
  void _internal_set_timeout_millis(uint32_t value);
  public:

  // optional uint32 caller_worker_id = 4;
  bool has_caller_worker_id() const;
  private:
  bool _internal_has_caller_worker_id() const;
  public:
  void clear_caller_worker_id();
  uint32_t caller_worker_id() const;
  void set_caller_worker_id(uint32_t value);
  private:
  uint32_t _internal_caller_worker_id() const;
  void _internal_set_caller_worker_id(uint32_t value);
  public:

  // optional int64 caller_worker_entity_id = 5;
  bool has_caller_worker_entity_id() const;
  private:
  bool _internal_has_caller_worker_entity_id() const;
  public:
  void clear_caller_worker_entity_id();
  int64_t caller_worker_entity_id() const;
  void set_caller_worker_entity_id(int64_t value);
  private:
  int64_t _internal_caller_worker_entity_id() const;
  void _internal_set_caller_worker_entity_id(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:PBWorkerCommandRequestOp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PBWorkerWorkerAttributes* caller_attribute_set_;
    ::PBWorkerCommandRequest* request_;
    int64_t request_id_;
    int64_t entity_id_;
    uint32_t timeout_millis_;
    uint32_t caller_worker_id_;
    int64_t caller_worker_entity_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_WorkerCmd_2eproto;
};
// -------------------------------------------------------------------

class PBWorkerCommandResponseOp final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PBWorkerCommandResponseOp) */ {
 public:
  inline PBWorkerCommandResponseOp() : PBWorkerCommandResponseOp(nullptr) {}
  ~PBWorkerCommandResponseOp() override;
  explicit PROTOBUF_CONSTEXPR PBWorkerCommandResponseOp(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PBWorkerCommandResponseOp(const PBWorkerCommandResponseOp& from);
  PBWorkerCommandResponseOp(PBWorkerCommandResponseOp&& from) noexcept
    : PBWorkerCommandResponseOp() {
    *this = ::std::move(from);
  }

  inline PBWorkerCommandResponseOp& operator=(const PBWorkerCommandResponseOp& from) {
    CopyFrom(from);
    return *this;
  }
  inline PBWorkerCommandResponseOp& operator=(PBWorkerCommandResponseOp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PBWorkerCommandResponseOp& default_instance() {
    return *internal_default_instance();
  }
  static inline const PBWorkerCommandResponseOp* internal_default_instance() {
    return reinterpret_cast<const PBWorkerCommandResponseOp*>(
               &_PBWorkerCommandResponseOp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(PBWorkerCommandResponseOp& a, PBWorkerCommandResponseOp& b) {
    a.Swap(&b);
  }
  inline void Swap(PBWorkerCommandResponseOp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PBWorkerCommandResponseOp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PBWorkerCommandResponseOp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PBWorkerCommandResponseOp>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PBWorkerCommandResponseOp& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PBWorkerCommandResponseOp& from) {
    PBWorkerCommandResponseOp::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBWorkerCommandResponseOp* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PBWorkerCommandResponseOp";
  }
  protected:
  explicit PBWorkerCommandResponseOp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessageFieldNumber = 4,
    kResponseFieldNumber = 5,
    kRequestIdFieldNumber = 1,
    kEntityIdFieldNumber = 2,
    kStatusCodeFieldNumber = 3,
  };
  // optional string message = 4;
  bool has_message() const;
  private:
  bool _internal_has_message() const;
  public:
  void clear_message();
  const std::string& message() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_message(ArgT0&& arg0, ArgT... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* message);
  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(const std::string& value);
  std::string* _internal_mutable_message();
  public:

  // optional .PBWorkerCommandResponse response = 5;
  bool has_response() const;
  private:
  bool _internal_has_response() const;
  public:
  void clear_response();
  const ::PBWorkerCommandResponse& response() const;
  PROTOBUF_NODISCARD ::PBWorkerCommandResponse* release_response();
  ::PBWorkerCommandResponse* mutable_response();
  void set_allocated_response(::PBWorkerCommandResponse* response);
  private:
  const ::PBWorkerCommandResponse& _internal_response() const;
  ::PBWorkerCommandResponse* _internal_mutable_response();
  public:
  void unsafe_arena_set_allocated_response(
      ::PBWorkerCommandResponse* response);
  ::PBWorkerCommandResponse* unsafe_arena_release_response();

  // optional int64 request_id = 1;
  bool has_request_id() const;
  private:
  bool _internal_has_request_id() const;
  public:
  void clear_request_id();
  int64_t request_id() const;
  void set_request_id(int64_t value);
  private:
  int64_t _internal_request_id() const;
  void _internal_set_request_id(int64_t value);
  public:

  // optional int64 entity_id = 2;
  bool has_entity_id() const;
  private:
  bool _internal_has_entity_id() const;
  public:
  void clear_entity_id();
  int64_t entity_id() const;
  void set_entity_id(int64_t value);
  private:
  int64_t _internal_entity_id() const;
  void _internal_set_entity_id(int64_t value);
  public:

  // optional .PBWorkerStatusCode status_code = 3;
  bool has_status_code() const;
  private:
  bool _internal_has_status_code() const;
  public:
  void clear_status_code();
  ::PBWorkerStatusCode status_code() const;
  void set_status_code(::PBWorkerStatusCode value);
  private:
  ::PBWorkerStatusCode _internal_status_code() const;
  void _internal_set_status_code(::PBWorkerStatusCode value);
  public:

  // @@protoc_insertion_point(class_scope:PBWorkerCommandResponseOp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr message_;
    ::PBWorkerCommandResponse* response_;
    int64_t request_id_;
    int64_t entity_id_;
    int status_code_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_WorkerCmd_2eproto;
};
// -------------------------------------------------------------------

class PBWorkerComponentSetAuthorityChangeOp final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PBWorkerComponentSetAuthorityChangeOp) */ {
 public:
  inline PBWorkerComponentSetAuthorityChangeOp() : PBWorkerComponentSetAuthorityChangeOp(nullptr) {}
  ~PBWorkerComponentSetAuthorityChangeOp() override;
  explicit PROTOBUF_CONSTEXPR PBWorkerComponentSetAuthorityChangeOp(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PBWorkerComponentSetAuthorityChangeOp(const PBWorkerComponentSetAuthorityChangeOp& from);
  PBWorkerComponentSetAuthorityChangeOp(PBWorkerComponentSetAuthorityChangeOp&& from) noexcept
    : PBWorkerComponentSetAuthorityChangeOp() {
    *this = ::std::move(from);
  }

  inline PBWorkerComponentSetAuthorityChangeOp& operator=(const PBWorkerComponentSetAuthorityChangeOp& from) {
    CopyFrom(from);
    return *this;
  }
  inline PBWorkerComponentSetAuthorityChangeOp& operator=(PBWorkerComponentSetAuthorityChangeOp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PBWorkerComponentSetAuthorityChangeOp& default_instance() {
    return *internal_default_instance();
  }
  static inline const PBWorkerComponentSetAuthorityChangeOp* internal_default_instance() {
    return reinterpret_cast<const PBWorkerComponentSetAuthorityChangeOp*>(
               &_PBWorkerComponentSetAuthorityChangeOp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(PBWorkerComponentSetAuthorityChangeOp& a, PBWorkerComponentSetAuthorityChangeOp& b) {
    a.Swap(&b);
  }
  inline void Swap(PBWorkerComponentSetAuthorityChangeOp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PBWorkerComponentSetAuthorityChangeOp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PBWorkerComponentSetAuthorityChangeOp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PBWorkerComponentSetAuthorityChangeOp>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PBWorkerComponentSetAuthorityChangeOp& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PBWorkerComponentSetAuthorityChangeOp& from) {
    PBWorkerComponentSetAuthorityChangeOp::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBWorkerComponentSetAuthorityChangeOp* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PBWorkerComponentSetAuthorityChangeOp";
  }
  protected:
  explicit PBWorkerComponentSetAuthorityChangeOp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEntityIdFieldNumber = 1,
    kComponentSetIdFieldNumber = 2,
    kAuthorityFieldNumber = 3,
  };
  // optional int64 entity_id = 1;
  bool has_entity_id() const;
  private:
  bool _internal_has_entity_id() const;
  public:
  void clear_entity_id();
  int64_t entity_id() const;
  void set_entity_id(int64_t value);
  private:
  int64_t _internal_entity_id() const;
  void _internal_set_entity_id(int64_t value);
  public:

  // optional uint32 component_set_id = 2;
  bool has_component_set_id() const;
  private:
  bool _internal_has_component_set_id() const;
  public:
  void clear_component_set_id();
  uint32_t component_set_id() const;
  void set_component_set_id(uint32_t value);
  private:
  uint32_t _internal_component_set_id() const;
  void _internal_set_component_set_id(uint32_t value);
  public:

  // optional .PBWorkerAuthority authority = 3;
  bool has_authority() const;
  private:
  bool _internal_has_authority() const;
  public:
  void clear_authority();
  ::PBWorkerAuthority authority() const;
  void set_authority(::PBWorkerAuthority value);
  private:
  ::PBWorkerAuthority _internal_authority() const;
  void _internal_set_authority(::PBWorkerAuthority value);
  public:

  // @@protoc_insertion_point(class_scope:PBWorkerComponentSetAuthorityChangeOp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int64_t entity_id_;
    uint32_t component_set_id_;
    int authority_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_WorkerCmd_2eproto;
};
// -------------------------------------------------------------------

class PBWorkerOpUnion final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PBWorkerOpUnion) */ {
 public:
  inline PBWorkerOpUnion() : PBWorkerOpUnion(nullptr) {}
  ~PBWorkerOpUnion() override;
  explicit PROTOBUF_CONSTEXPR PBWorkerOpUnion(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PBWorkerOpUnion(const PBWorkerOpUnion& from);
  PBWorkerOpUnion(PBWorkerOpUnion&& from) noexcept
    : PBWorkerOpUnion() {
    *this = ::std::move(from);
  }

  inline PBWorkerOpUnion& operator=(const PBWorkerOpUnion& from) {
    CopyFrom(from);
    return *this;
  }
  inline PBWorkerOpUnion& operator=(PBWorkerOpUnion&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PBWorkerOpUnion& default_instance() {
    return *internal_default_instance();
  }
  static inline const PBWorkerOpUnion* internal_default_instance() {
    return reinterpret_cast<const PBWorkerOpUnion*>(
               &_PBWorkerOpUnion_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(PBWorkerOpUnion& a, PBWorkerOpUnion& b) {
    a.Swap(&b);
  }
  inline void Swap(PBWorkerOpUnion* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PBWorkerOpUnion* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PBWorkerOpUnion* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PBWorkerOpUnion>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PBWorkerOpUnion& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PBWorkerOpUnion& from) {
    PBWorkerOpUnion::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBWorkerOpUnion* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PBWorkerOpUnion";
  }
  protected:
  explicit PBWorkerOpUnion(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDisconnectFieldNumber = 1,
    kFlagUpdateFieldNumber = 2,
    kLogMessageFieldNumber = 3,
    kMetricsFieldNumber = 4,
    kCriticalSectionFieldNumber = 5,
    kAddEntityFieldNumber = 6,
    kRemoveEntityFieldNumber = 7,
    kReserveEntityIdsResponseFieldNumber = 8,
    kCreateEntityResponseFieldNumber = 9,
    kDeleteEntityResponseFieldNumber = 10,
    kEntityQueryResponseFieldNumber = 11,
    kAddComponentFieldNumber = 12,
    kRemoveComponentFieldNumber = 13,
    kAuthorityChangeFieldNumber = 14,
    kComponentUpdateFieldNumber = 15,
    kCommandRequestFieldNumber = 16,
    kCommandResponseFieldNumber = 17,
    kComponentSetAuthorityChangeFieldNumber = 18,
  };
  // optional .PBWorkerDisconnectOp disconnect = 1;
  bool has_disconnect() const;
  private:
  bool _internal_has_disconnect() const;
  public:
  void clear_disconnect();
  const ::PBWorkerDisconnectOp& disconnect() const;
  PROTOBUF_NODISCARD ::PBWorkerDisconnectOp* release_disconnect();
  ::PBWorkerDisconnectOp* mutable_disconnect();
  void set_allocated_disconnect(::PBWorkerDisconnectOp* disconnect);
  private:
  const ::PBWorkerDisconnectOp& _internal_disconnect() const;
  ::PBWorkerDisconnectOp* _internal_mutable_disconnect();
  public:
  void unsafe_arena_set_allocated_disconnect(
      ::PBWorkerDisconnectOp* disconnect);
  ::PBWorkerDisconnectOp* unsafe_arena_release_disconnect();

  // optional .PBWorkerFlagUpdateOp flag_update = 2;
  bool has_flag_update() const;
  private:
  bool _internal_has_flag_update() const;
  public:
  void clear_flag_update();
  const ::PBWorkerFlagUpdateOp& flag_update() const;
  PROTOBUF_NODISCARD ::PBWorkerFlagUpdateOp* release_flag_update();
  ::PBWorkerFlagUpdateOp* mutable_flag_update();
  void set_allocated_flag_update(::PBWorkerFlagUpdateOp* flag_update);
  private:
  const ::PBWorkerFlagUpdateOp& _internal_flag_update() const;
  ::PBWorkerFlagUpdateOp* _internal_mutable_flag_update();
  public:
  void unsafe_arena_set_allocated_flag_update(
      ::PBWorkerFlagUpdateOp* flag_update);
  ::PBWorkerFlagUpdateOp* unsafe_arena_release_flag_update();

  // optional .PBWorkerLogMessageOp log_message = 3;
  bool has_log_message() const;
  private:
  bool _internal_has_log_message() const;
  public:
  void clear_log_message();
  const ::PBWorkerLogMessageOp& log_message() const;
  PROTOBUF_NODISCARD ::PBWorkerLogMessageOp* release_log_message();
  ::PBWorkerLogMessageOp* mutable_log_message();
  void set_allocated_log_message(::PBWorkerLogMessageOp* log_message);
  private:
  const ::PBWorkerLogMessageOp& _internal_log_message() const;
  ::PBWorkerLogMessageOp* _internal_mutable_log_message();
  public:
  void unsafe_arena_set_allocated_log_message(
      ::PBWorkerLogMessageOp* log_message);
  ::PBWorkerLogMessageOp* unsafe_arena_release_log_message();

  // optional .PBWorkerMetricsOp metrics = 4;
  bool has_metrics() const;
  private:
  bool _internal_has_metrics() const;
  public:
  void clear_metrics();
  const ::PBWorkerMetricsOp& metrics() const;
  PROTOBUF_NODISCARD ::PBWorkerMetricsOp* release_metrics();
  ::PBWorkerMetricsOp* mutable_metrics();
  void set_allocated_metrics(::PBWorkerMetricsOp* metrics);
  private:
  const ::PBWorkerMetricsOp& _internal_metrics() const;
  ::PBWorkerMetricsOp* _internal_mutable_metrics();
  public:
  void unsafe_arena_set_allocated_metrics(
      ::PBWorkerMetricsOp* metrics);
  ::PBWorkerMetricsOp* unsafe_arena_release_metrics();

  // optional .PBWorkerCriticalSectionOp critical_section = 5;
  bool has_critical_section() const;
  private:
  bool _internal_has_critical_section() const;
  public:
  void clear_critical_section();
  const ::PBWorkerCriticalSectionOp& critical_section() const;
  PROTOBUF_NODISCARD ::PBWorkerCriticalSectionOp* release_critical_section();
  ::PBWorkerCriticalSectionOp* mutable_critical_section();
  void set_allocated_critical_section(::PBWorkerCriticalSectionOp* critical_section);
  private:
  const ::PBWorkerCriticalSectionOp& _internal_critical_section() const;
  ::PBWorkerCriticalSectionOp* _internal_mutable_critical_section();
  public:
  void unsafe_arena_set_allocated_critical_section(
      ::PBWorkerCriticalSectionOp* critical_section);
  ::PBWorkerCriticalSectionOp* unsafe_arena_release_critical_section();

  // optional .PBWorkerAddEntityOp add_entity = 6;
  bool has_add_entity() const;
  private:
  bool _internal_has_add_entity() const;
  public:
  void clear_add_entity();
  const ::PBWorkerAddEntityOp& add_entity() const;
  PROTOBUF_NODISCARD ::PBWorkerAddEntityOp* release_add_entity();
  ::PBWorkerAddEntityOp* mutable_add_entity();
  void set_allocated_add_entity(::PBWorkerAddEntityOp* add_entity);
  private:
  const ::PBWorkerAddEntityOp& _internal_add_entity() const;
  ::PBWorkerAddEntityOp* _internal_mutable_add_entity();
  public:
  void unsafe_arena_set_allocated_add_entity(
      ::PBWorkerAddEntityOp* add_entity);
  ::PBWorkerAddEntityOp* unsafe_arena_release_add_entity();

  // optional .PBWorkerRemoveEntityOp remove_entity = 7;
  bool has_remove_entity() const;
  private:
  bool _internal_has_remove_entity() const;
  public:
  void clear_remove_entity();
  const ::PBWorkerRemoveEntityOp& remove_entity() const;
  PROTOBUF_NODISCARD ::PBWorkerRemoveEntityOp* release_remove_entity();
  ::PBWorkerRemoveEntityOp* mutable_remove_entity();
  void set_allocated_remove_entity(::PBWorkerRemoveEntityOp* remove_entity);
  private:
  const ::PBWorkerRemoveEntityOp& _internal_remove_entity() const;
  ::PBWorkerRemoveEntityOp* _internal_mutable_remove_entity();
  public:
  void unsafe_arena_set_allocated_remove_entity(
      ::PBWorkerRemoveEntityOp* remove_entity);
  ::PBWorkerRemoveEntityOp* unsafe_arena_release_remove_entity();

  // optional .PBWorkerReserveEntityIdsResponseOp reserve_entity_ids_response = 8;
  bool has_reserve_entity_ids_response() const;
  private:
  bool _internal_has_reserve_entity_ids_response() const;
  public:
  void clear_reserve_entity_ids_response();
  const ::PBWorkerReserveEntityIdsResponseOp& reserve_entity_ids_response() const;
  PROTOBUF_NODISCARD ::PBWorkerReserveEntityIdsResponseOp* release_reserve_entity_ids_response();
  ::PBWorkerReserveEntityIdsResponseOp* mutable_reserve_entity_ids_response();
  void set_allocated_reserve_entity_ids_response(::PBWorkerReserveEntityIdsResponseOp* reserve_entity_ids_response);
  private:
  const ::PBWorkerReserveEntityIdsResponseOp& _internal_reserve_entity_ids_response() const;
  ::PBWorkerReserveEntityIdsResponseOp* _internal_mutable_reserve_entity_ids_response();
  public:
  void unsafe_arena_set_allocated_reserve_entity_ids_response(
      ::PBWorkerReserveEntityIdsResponseOp* reserve_entity_ids_response);
  ::PBWorkerReserveEntityIdsResponseOp* unsafe_arena_release_reserve_entity_ids_response();

  // optional .PBWorkerCreateEntityResponseOp create_entity_response = 9;
  bool has_create_entity_response() const;
  private:
  bool _internal_has_create_entity_response() const;
  public:
  void clear_create_entity_response();
  const ::PBWorkerCreateEntityResponseOp& create_entity_response() const;
  PROTOBUF_NODISCARD ::PBWorkerCreateEntityResponseOp* release_create_entity_response();
  ::PBWorkerCreateEntityResponseOp* mutable_create_entity_response();
  void set_allocated_create_entity_response(::PBWorkerCreateEntityResponseOp* create_entity_response);
  private:
  const ::PBWorkerCreateEntityResponseOp& _internal_create_entity_response() const;
  ::PBWorkerCreateEntityResponseOp* _internal_mutable_create_entity_response();
  public:
  void unsafe_arena_set_allocated_create_entity_response(
      ::PBWorkerCreateEntityResponseOp* create_entity_response);
  ::PBWorkerCreateEntityResponseOp* unsafe_arena_release_create_entity_response();

  // optional .PBWorkerDeleteEntityResponseOp delete_entity_response = 10;
  bool has_delete_entity_response() const;
  private:
  bool _internal_has_delete_entity_response() const;
  public:
  void clear_delete_entity_response();
  const ::PBWorkerDeleteEntityResponseOp& delete_entity_response() const;
  PROTOBUF_NODISCARD ::PBWorkerDeleteEntityResponseOp* release_delete_entity_response();
  ::PBWorkerDeleteEntityResponseOp* mutable_delete_entity_response();
  void set_allocated_delete_entity_response(::PBWorkerDeleteEntityResponseOp* delete_entity_response);
  private:
  const ::PBWorkerDeleteEntityResponseOp& _internal_delete_entity_response() const;
  ::PBWorkerDeleteEntityResponseOp* _internal_mutable_delete_entity_response();
  public:
  void unsafe_arena_set_allocated_delete_entity_response(
      ::PBWorkerDeleteEntityResponseOp* delete_entity_response);
  ::PBWorkerDeleteEntityResponseOp* unsafe_arena_release_delete_entity_response();

  // optional .PBWorkerEntityQueryResponseOp entity_query_response = 11;
  bool has_entity_query_response() const;
  private:
  bool _internal_has_entity_query_response() const;
  public:
  void clear_entity_query_response();
  const ::PBWorkerEntityQueryResponseOp& entity_query_response() const;
  PROTOBUF_NODISCARD ::PBWorkerEntityQueryResponseOp* release_entity_query_response();
  ::PBWorkerEntityQueryResponseOp* mutable_entity_query_response();
  void set_allocated_entity_query_response(::PBWorkerEntityQueryResponseOp* entity_query_response);
  private:
  const ::PBWorkerEntityQueryResponseOp& _internal_entity_query_response() const;
  ::PBWorkerEntityQueryResponseOp* _internal_mutable_entity_query_response();
  public:
  void unsafe_arena_set_allocated_entity_query_response(
      ::PBWorkerEntityQueryResponseOp* entity_query_response);
  ::PBWorkerEntityQueryResponseOp* unsafe_arena_release_entity_query_response();

  // optional .PBWorkerAddComponentOp add_component = 12;
  bool has_add_component() const;
  private:
  bool _internal_has_add_component() const;
  public:
  void clear_add_component();
  const ::PBWorkerAddComponentOp& add_component() const;
  PROTOBUF_NODISCARD ::PBWorkerAddComponentOp* release_add_component();
  ::PBWorkerAddComponentOp* mutable_add_component();
  void set_allocated_add_component(::PBWorkerAddComponentOp* add_component);
  private:
  const ::PBWorkerAddComponentOp& _internal_add_component() const;
  ::PBWorkerAddComponentOp* _internal_mutable_add_component();
  public:
  void unsafe_arena_set_allocated_add_component(
      ::PBWorkerAddComponentOp* add_component);
  ::PBWorkerAddComponentOp* unsafe_arena_release_add_component();

  // optional .PBWorkerRemoveComponentOp remove_component = 13;
  bool has_remove_component() const;
  private:
  bool _internal_has_remove_component() const;
  public:
  void clear_remove_component();
  const ::PBWorkerRemoveComponentOp& remove_component() const;
  PROTOBUF_NODISCARD ::PBWorkerRemoveComponentOp* release_remove_component();
  ::PBWorkerRemoveComponentOp* mutable_remove_component();
  void set_allocated_remove_component(::PBWorkerRemoveComponentOp* remove_component);
  private:
  const ::PBWorkerRemoveComponentOp& _internal_remove_component() const;
  ::PBWorkerRemoveComponentOp* _internal_mutable_remove_component();
  public:
  void unsafe_arena_set_allocated_remove_component(
      ::PBWorkerRemoveComponentOp* remove_component);
  ::PBWorkerRemoveComponentOp* unsafe_arena_release_remove_component();

  // optional .PBWorkerAuthorityChangeOp authority_change = 14;
  bool has_authority_change() const;
  private:
  bool _internal_has_authority_change() const;
  public:
  void clear_authority_change();
  const ::PBWorkerAuthorityChangeOp& authority_change() const;
  PROTOBUF_NODISCARD ::PBWorkerAuthorityChangeOp* release_authority_change();
  ::PBWorkerAuthorityChangeOp* mutable_authority_change();
  void set_allocated_authority_change(::PBWorkerAuthorityChangeOp* authority_change);
  private:
  const ::PBWorkerAuthorityChangeOp& _internal_authority_change() const;
  ::PBWorkerAuthorityChangeOp* _internal_mutable_authority_change();
  public:
  void unsafe_arena_set_allocated_authority_change(
      ::PBWorkerAuthorityChangeOp* authority_change);
  ::PBWorkerAuthorityChangeOp* unsafe_arena_release_authority_change();

  // optional .PBWorkerComponentUpdateOp component_update = 15;
  bool has_component_update() const;
  private:
  bool _internal_has_component_update() const;
  public:
  void clear_component_update();
  const ::PBWorkerComponentUpdateOp& component_update() const;
  PROTOBUF_NODISCARD ::PBWorkerComponentUpdateOp* release_component_update();
  ::PBWorkerComponentUpdateOp* mutable_component_update();
  void set_allocated_component_update(::PBWorkerComponentUpdateOp* component_update);
  private:
  const ::PBWorkerComponentUpdateOp& _internal_component_update() const;
  ::PBWorkerComponentUpdateOp* _internal_mutable_component_update();
  public:
  void unsafe_arena_set_allocated_component_update(
      ::PBWorkerComponentUpdateOp* component_update);
  ::PBWorkerComponentUpdateOp* unsafe_arena_release_component_update();

  // optional .PBWorkerCommandRequestOp command_request = 16;
  bool has_command_request() const;
  private:
  bool _internal_has_command_request() const;
  public:
  void clear_command_request();
  const ::PBWorkerCommandRequestOp& command_request() const;
  PROTOBUF_NODISCARD ::PBWorkerCommandRequestOp* release_command_request();
  ::PBWorkerCommandRequestOp* mutable_command_request();
  void set_allocated_command_request(::PBWorkerCommandRequestOp* command_request);
  private:
  const ::PBWorkerCommandRequestOp& _internal_command_request() const;
  ::PBWorkerCommandRequestOp* _internal_mutable_command_request();
  public:
  void unsafe_arena_set_allocated_command_request(
      ::PBWorkerCommandRequestOp* command_request);
  ::PBWorkerCommandRequestOp* unsafe_arena_release_command_request();

  // optional .PBWorkerCommandResponseOp command_response = 17;
  bool has_command_response() const;
  private:
  bool _internal_has_command_response() const;
  public:
  void clear_command_response();
  const ::PBWorkerCommandResponseOp& command_response() const;
  PROTOBUF_NODISCARD ::PBWorkerCommandResponseOp* release_command_response();
  ::PBWorkerCommandResponseOp* mutable_command_response();
  void set_allocated_command_response(::PBWorkerCommandResponseOp* command_response);
  private:
  const ::PBWorkerCommandResponseOp& _internal_command_response() const;
  ::PBWorkerCommandResponseOp* _internal_mutable_command_response();
  public:
  void unsafe_arena_set_allocated_command_response(
      ::PBWorkerCommandResponseOp* command_response);
  ::PBWorkerCommandResponseOp* unsafe_arena_release_command_response();

  // optional .PBWorkerComponentSetAuthorityChangeOp component_set_authority_change = 18;
  bool has_component_set_authority_change() const;
  private:
  bool _internal_has_component_set_authority_change() const;
  public:
  void clear_component_set_authority_change();
  const ::PBWorkerComponentSetAuthorityChangeOp& component_set_authority_change() const;
  PROTOBUF_NODISCARD ::PBWorkerComponentSetAuthorityChangeOp* release_component_set_authority_change();
  ::PBWorkerComponentSetAuthorityChangeOp* mutable_component_set_authority_change();
  void set_allocated_component_set_authority_change(::PBWorkerComponentSetAuthorityChangeOp* component_set_authority_change);
  private:
  const ::PBWorkerComponentSetAuthorityChangeOp& _internal_component_set_authority_change() const;
  ::PBWorkerComponentSetAuthorityChangeOp* _internal_mutable_component_set_authority_change();
  public:
  void unsafe_arena_set_allocated_component_set_authority_change(
      ::PBWorkerComponentSetAuthorityChangeOp* component_set_authority_change);
  ::PBWorkerComponentSetAuthorityChangeOp* unsafe_arena_release_component_set_authority_change();

  // @@protoc_insertion_point(class_scope:PBWorkerOpUnion)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PBWorkerDisconnectOp* disconnect_;
    ::PBWorkerFlagUpdateOp* flag_update_;
    ::PBWorkerLogMessageOp* log_message_;
    ::PBWorkerMetricsOp* metrics_;
    ::PBWorkerCriticalSectionOp* critical_section_;
    ::PBWorkerAddEntityOp* add_entity_;
    ::PBWorkerRemoveEntityOp* remove_entity_;
    ::PBWorkerReserveEntityIdsResponseOp* reserve_entity_ids_response_;
    ::PBWorkerCreateEntityResponseOp* create_entity_response_;
    ::PBWorkerDeleteEntityResponseOp* delete_entity_response_;
    ::PBWorkerEntityQueryResponseOp* entity_query_response_;
    ::PBWorkerAddComponentOp* add_component_;
    ::PBWorkerRemoveComponentOp* remove_component_;
    ::PBWorkerAuthorityChangeOp* authority_change_;
    ::PBWorkerComponentUpdateOp* component_update_;
    ::PBWorkerCommandRequestOp* command_request_;
    ::PBWorkerCommandResponseOp* command_response_;
    ::PBWorkerComponentSetAuthorityChangeOp* component_set_authority_change_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_WorkerCmd_2eproto;
};
// -------------------------------------------------------------------

class PBWorkerOp final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PBWorkerOp) */ {
 public:
  inline PBWorkerOp() : PBWorkerOp(nullptr) {}
  ~PBWorkerOp() override;
  explicit PROTOBUF_CONSTEXPR PBWorkerOp(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PBWorkerOp(const PBWorkerOp& from);
  PBWorkerOp(PBWorkerOp&& from) noexcept
    : PBWorkerOp() {
    *this = ::std::move(from);
  }

  inline PBWorkerOp& operator=(const PBWorkerOp& from) {
    CopyFrom(from);
    return *this;
  }
  inline PBWorkerOp& operator=(PBWorkerOp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PBWorkerOp& default_instance() {
    return *internal_default_instance();
  }
  static inline const PBWorkerOp* internal_default_instance() {
    return reinterpret_cast<const PBWorkerOp*>(
               &_PBWorkerOp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(PBWorkerOp& a, PBWorkerOp& b) {
    a.Swap(&b);
  }
  inline void Swap(PBWorkerOp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PBWorkerOp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PBWorkerOp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PBWorkerOp>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PBWorkerOp& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PBWorkerOp& from) {
    PBWorkerOp::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBWorkerOp* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PBWorkerOp";
  }
  protected:
  explicit PBWorkerOp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOpFieldNumber = 2,
    kOpTypeFieldNumber = 1,
  };
  // optional .PBWorkerOpUnion op = 2;
  bool has_op() const;
  private:
  bool _internal_has_op() const;
  public:
  void clear_op();
  const ::PBWorkerOpUnion& op() const;
  PROTOBUF_NODISCARD ::PBWorkerOpUnion* release_op();
  ::PBWorkerOpUnion* mutable_op();
  void set_allocated_op(::PBWorkerOpUnion* op);
  private:
  const ::PBWorkerOpUnion& _internal_op() const;
  ::PBWorkerOpUnion* _internal_mutable_op();
  public:
  void unsafe_arena_set_allocated_op(
      ::PBWorkerOpUnion* op);
  ::PBWorkerOpUnion* unsafe_arena_release_op();

  // optional .PBWorkerOpType op_type = 1;
  bool has_op_type() const;
  private:
  bool _internal_has_op_type() const;
  public:
  void clear_op_type();
  ::PBWorkerOpType op_type() const;
  void set_op_type(::PBWorkerOpType value);
  private:
  ::PBWorkerOpType _internal_op_type() const;
  void _internal_set_op_type(::PBWorkerOpType value);
  public:

  // @@protoc_insertion_point(class_scope:PBWorkerOp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PBWorkerOpUnion* op_;
    int op_type_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_WorkerCmd_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PBWorkerCmd

// optional .CmdType cmd = 1 [default = PB_WORK_CMD];
inline bool PBWorkerCmd::_internal_has_cmd() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PBWorkerCmd::has_cmd() const {
  return _internal_has_cmd();
}
inline void PBWorkerCmd::clear_cmd() {
  _impl_.cmd_ = 3;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CmdType PBWorkerCmd::_internal_cmd() const {
  return static_cast< ::CmdType >(_impl_.cmd_);
}
inline ::CmdType PBWorkerCmd::cmd() const {
  // @@protoc_insertion_point(field_get:PBWorkerCmd.cmd)
  return _internal_cmd();
}
inline void PBWorkerCmd::_internal_set_cmd(::CmdType value) {
  assert(::CmdType_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.cmd_ = value;
}
inline void PBWorkerCmd::set_cmd(::CmdType value) {
  _internal_set_cmd(value);
  // @@protoc_insertion_point(field_set:PBWorkerCmd.cmd)
}

// -------------------------------------------------------------------

// PBWorkerDisconnectOp

// optional uint32 connection_status_code = 1;
inline bool PBWorkerDisconnectOp::_internal_has_connection_status_code() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool PBWorkerDisconnectOp::has_connection_status_code() const {
  return _internal_has_connection_status_code();
}
inline void PBWorkerDisconnectOp::clear_connection_status_code() {
  _impl_.connection_status_code_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t PBWorkerDisconnectOp::_internal_connection_status_code() const {
  return _impl_.connection_status_code_;
}
inline uint32_t PBWorkerDisconnectOp::connection_status_code() const {
  // @@protoc_insertion_point(field_get:PBWorkerDisconnectOp.connection_status_code)
  return _internal_connection_status_code();
}
inline void PBWorkerDisconnectOp::_internal_set_connection_status_code(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.connection_status_code_ = value;
}
inline void PBWorkerDisconnectOp::set_connection_status_code(uint32_t value) {
  _internal_set_connection_status_code(value);
  // @@protoc_insertion_point(field_set:PBWorkerDisconnectOp.connection_status_code)
}

// optional string reason = 2;
inline bool PBWorkerDisconnectOp::_internal_has_reason() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PBWorkerDisconnectOp::has_reason() const {
  return _internal_has_reason();
}
inline void PBWorkerDisconnectOp::clear_reason() {
  _impl_.reason_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& PBWorkerDisconnectOp::reason() const {
  // @@protoc_insertion_point(field_get:PBWorkerDisconnectOp.reason)
  return _internal_reason();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void PBWorkerDisconnectOp::set_reason(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.reason_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:PBWorkerDisconnectOp.reason)
}
inline std::string* PBWorkerDisconnectOp::mutable_reason() {
  std::string* _s = _internal_mutable_reason();
  // @@protoc_insertion_point(field_mutable:PBWorkerDisconnectOp.reason)
  return _s;
}
inline const std::string& PBWorkerDisconnectOp::_internal_reason() const {
  return _impl_.reason_.Get();
}
inline void PBWorkerDisconnectOp::_internal_set_reason(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.reason_.Set(value, GetArenaForAllocation());
}
inline std::string* PBWorkerDisconnectOp::_internal_mutable_reason() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.reason_.Mutable(GetArenaForAllocation());
}
inline std::string* PBWorkerDisconnectOp::release_reason() {
  // @@protoc_insertion_point(field_release:PBWorkerDisconnectOp.reason)
  if (!_internal_has_reason()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.reason_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.reason_.IsDefault()) {
    _impl_.reason_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void PBWorkerDisconnectOp::set_allocated_reason(std::string* reason) {
  if (reason != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.reason_.SetAllocated(reason, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.reason_.IsDefault()) {
    _impl_.reason_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:PBWorkerDisconnectOp.reason)
}

// -------------------------------------------------------------------

// PBWorkerFlagUpdateOp

// optional string name = 1;
inline bool PBWorkerFlagUpdateOp::_internal_has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PBWorkerFlagUpdateOp::has_name() const {
  return _internal_has_name();
}
inline void PBWorkerFlagUpdateOp::clear_name() {
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& PBWorkerFlagUpdateOp::name() const {
  // @@protoc_insertion_point(field_get:PBWorkerFlagUpdateOp.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void PBWorkerFlagUpdateOp::set_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:PBWorkerFlagUpdateOp.name)
}
inline std::string* PBWorkerFlagUpdateOp::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:PBWorkerFlagUpdateOp.name)
  return _s;
}
inline const std::string& PBWorkerFlagUpdateOp::_internal_name() const {
  return _impl_.name_.Get();
}
inline void PBWorkerFlagUpdateOp::_internal_set_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* PBWorkerFlagUpdateOp::_internal_mutable_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable(GetArenaForAllocation());
}
inline std::string* PBWorkerFlagUpdateOp::release_name() {
  // @@protoc_insertion_point(field_release:PBWorkerFlagUpdateOp.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void PBWorkerFlagUpdateOp::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:PBWorkerFlagUpdateOp.name)
}

// optional string value = 2;
inline bool PBWorkerFlagUpdateOp::_internal_has_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool PBWorkerFlagUpdateOp::has_value() const {
  return _internal_has_value();
}
inline void PBWorkerFlagUpdateOp::clear_value() {
  _impl_.value_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& PBWorkerFlagUpdateOp::value() const {
  // @@protoc_insertion_point(field_get:PBWorkerFlagUpdateOp.value)
  return _internal_value();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void PBWorkerFlagUpdateOp::set_value(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000002u;
 _impl_.value_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:PBWorkerFlagUpdateOp.value)
}
inline std::string* PBWorkerFlagUpdateOp::mutable_value() {
  std::string* _s = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:PBWorkerFlagUpdateOp.value)
  return _s;
}
inline const std::string& PBWorkerFlagUpdateOp::_internal_value() const {
  return _impl_.value_.Get();
}
inline void PBWorkerFlagUpdateOp::_internal_set_value(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.value_.Set(value, GetArenaForAllocation());
}
inline std::string* PBWorkerFlagUpdateOp::_internal_mutable_value() {
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.value_.Mutable(GetArenaForAllocation());
}
inline std::string* PBWorkerFlagUpdateOp::release_value() {
  // @@protoc_insertion_point(field_release:PBWorkerFlagUpdateOp.value)
  if (!_internal_has_value()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* p = _impl_.value_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.value_.IsDefault()) {
    _impl_.value_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void PBWorkerFlagUpdateOp::set_allocated_value(std::string* value) {
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.value_.SetAllocated(value, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.value_.IsDefault()) {
    _impl_.value_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:PBWorkerFlagUpdateOp.value)
}

// -------------------------------------------------------------------

// PBWorkerLogMessageOp

// optional int32 level = 1;
inline bool PBWorkerLogMessageOp::_internal_has_level() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool PBWorkerLogMessageOp::has_level() const {
  return _internal_has_level();
}
inline void PBWorkerLogMessageOp::clear_level() {
  _impl_.level_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int32_t PBWorkerLogMessageOp::_internal_level() const {
  return _impl_.level_;
}
inline int32_t PBWorkerLogMessageOp::level() const {
  // @@protoc_insertion_point(field_get:PBWorkerLogMessageOp.level)
  return _internal_level();
}
inline void PBWorkerLogMessageOp::_internal_set_level(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.level_ = value;
}
inline void PBWorkerLogMessageOp::set_level(int32_t value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:PBWorkerLogMessageOp.level)
}

// optional string message = 2;
inline bool PBWorkerLogMessageOp::_internal_has_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PBWorkerLogMessageOp::has_message() const {
  return _internal_has_message();
}
inline void PBWorkerLogMessageOp::clear_message() {
  _impl_.message_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& PBWorkerLogMessageOp::message() const {
  // @@protoc_insertion_point(field_get:PBWorkerLogMessageOp.message)
  return _internal_message();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void PBWorkerLogMessageOp::set_message(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.message_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:PBWorkerLogMessageOp.message)
}
inline std::string* PBWorkerLogMessageOp::mutable_message() {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:PBWorkerLogMessageOp.message)
  return _s;
}
inline const std::string& PBWorkerLogMessageOp::_internal_message() const {
  return _impl_.message_.Get();
}
inline void PBWorkerLogMessageOp::_internal_set_message(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.message_.Set(value, GetArenaForAllocation());
}
inline std::string* PBWorkerLogMessageOp::_internal_mutable_message() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.message_.Mutable(GetArenaForAllocation());
}
inline std::string* PBWorkerLogMessageOp::release_message() {
  // @@protoc_insertion_point(field_release:PBWorkerLogMessageOp.message)
  if (!_internal_has_message()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.message_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void PBWorkerLogMessageOp::set_allocated_message(std::string* message) {
  if (message != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.message_.SetAllocated(message, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:PBWorkerLogMessageOp.message)
}

// -------------------------------------------------------------------

// PBWorkerMetricsOp

// optional .PBWorkerMetrics metrics = 1;
inline bool PBWorkerMetricsOp::_internal_has_metrics() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.metrics_ != nullptr);
  return value;
}
inline bool PBWorkerMetricsOp::has_metrics() const {
  return _internal_has_metrics();
}
inline const ::PBWorkerMetrics& PBWorkerMetricsOp::_internal_metrics() const {
  const ::PBWorkerMetrics* p = _impl_.metrics_;
  return p != nullptr ? *p : reinterpret_cast<const ::PBWorkerMetrics&>(
      ::_PBWorkerMetrics_default_instance_);
}
inline const ::PBWorkerMetrics& PBWorkerMetricsOp::metrics() const {
  // @@protoc_insertion_point(field_get:PBWorkerMetricsOp.metrics)
  return _internal_metrics();
}
inline void PBWorkerMetricsOp::unsafe_arena_set_allocated_metrics(
    ::PBWorkerMetrics* metrics) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.metrics_);
  }
  _impl_.metrics_ = metrics;
  if (metrics) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBWorkerMetricsOp.metrics)
}
inline ::PBWorkerMetrics* PBWorkerMetricsOp::release_metrics() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::PBWorkerMetrics* temp = _impl_.metrics_;
  _impl_.metrics_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PBWorkerMetrics* PBWorkerMetricsOp::unsafe_arena_release_metrics() {
  // @@protoc_insertion_point(field_release:PBWorkerMetricsOp.metrics)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::PBWorkerMetrics* temp = _impl_.metrics_;
  _impl_.metrics_ = nullptr;
  return temp;
}
inline ::PBWorkerMetrics* PBWorkerMetricsOp::_internal_mutable_metrics() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.metrics_ == nullptr) {
    auto* p = CreateMaybeMessage<::PBWorkerMetrics>(GetArenaForAllocation());
    _impl_.metrics_ = p;
  }
  return _impl_.metrics_;
}
inline ::PBWorkerMetrics* PBWorkerMetricsOp::mutable_metrics() {
  ::PBWorkerMetrics* _msg = _internal_mutable_metrics();
  // @@protoc_insertion_point(field_mutable:PBWorkerMetricsOp.metrics)
  return _msg;
}
inline void PBWorkerMetricsOp::set_allocated_metrics(::PBWorkerMetrics* metrics) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.metrics_);
  }
  if (metrics) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(metrics));
    if (message_arena != submessage_arena) {
      metrics = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, metrics, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.metrics_ = metrics;
  // @@protoc_insertion_point(field_set_allocated:PBWorkerMetricsOp.metrics)
}

// -------------------------------------------------------------------

// PBWorkerCriticalSectionOp

// optional uint32 in_critical_section = 1;
inline bool PBWorkerCriticalSectionOp::_internal_has_in_critical_section() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PBWorkerCriticalSectionOp::has_in_critical_section() const {
  return _internal_has_in_critical_section();
}
inline void PBWorkerCriticalSectionOp::clear_in_critical_section() {
  _impl_.in_critical_section_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t PBWorkerCriticalSectionOp::_internal_in_critical_section() const {
  return _impl_.in_critical_section_;
}
inline uint32_t PBWorkerCriticalSectionOp::in_critical_section() const {
  // @@protoc_insertion_point(field_get:PBWorkerCriticalSectionOp.in_critical_section)
  return _internal_in_critical_section();
}
inline void PBWorkerCriticalSectionOp::_internal_set_in_critical_section(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.in_critical_section_ = value;
}
inline void PBWorkerCriticalSectionOp::set_in_critical_section(uint32_t value) {
  _internal_set_in_critical_section(value);
  // @@protoc_insertion_point(field_set:PBWorkerCriticalSectionOp.in_critical_section)
}

// -------------------------------------------------------------------

// PBWorkerAddEntityOp

// optional int64 entity_id = 1;
inline bool PBWorkerAddEntityOp::_internal_has_entity_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PBWorkerAddEntityOp::has_entity_id() const {
  return _internal_has_entity_id();
}
inline void PBWorkerAddEntityOp::clear_entity_id() {
  _impl_.entity_id_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline int64_t PBWorkerAddEntityOp::_internal_entity_id() const {
  return _impl_.entity_id_;
}
inline int64_t PBWorkerAddEntityOp::entity_id() const {
  // @@protoc_insertion_point(field_get:PBWorkerAddEntityOp.entity_id)
  return _internal_entity_id();
}
inline void PBWorkerAddEntityOp::_internal_set_entity_id(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.entity_id_ = value;
}
inline void PBWorkerAddEntityOp::set_entity_id(int64_t value) {
  _internal_set_entity_id(value);
  // @@protoc_insertion_point(field_set:PBWorkerAddEntityOp.entity_id)
}

// -------------------------------------------------------------------

// PBWorkerRemoveEntityOp

// optional int64 entity_id = 1;
inline bool PBWorkerRemoveEntityOp::_internal_has_entity_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PBWorkerRemoveEntityOp::has_entity_id() const {
  return _internal_has_entity_id();
}
inline void PBWorkerRemoveEntityOp::clear_entity_id() {
  _impl_.entity_id_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline int64_t PBWorkerRemoveEntityOp::_internal_entity_id() const {
  return _impl_.entity_id_;
}
inline int64_t PBWorkerRemoveEntityOp::entity_id() const {
  // @@protoc_insertion_point(field_get:PBWorkerRemoveEntityOp.entity_id)
  return _internal_entity_id();
}
inline void PBWorkerRemoveEntityOp::_internal_set_entity_id(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.entity_id_ = value;
}
inline void PBWorkerRemoveEntityOp::set_entity_id(int64_t value) {
  _internal_set_entity_id(value);
  // @@protoc_insertion_point(field_set:PBWorkerRemoveEntityOp.entity_id)
}

// -------------------------------------------------------------------

// PBWorkerReserveEntityIdsResponseOp

// optional int64 request_id = 1;
inline bool PBWorkerReserveEntityIdsResponseOp::_internal_has_request_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool PBWorkerReserveEntityIdsResponseOp::has_request_id() const {
  return _internal_has_request_id();
}
inline void PBWorkerReserveEntityIdsResponseOp::clear_request_id() {
  _impl_.request_id_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int64_t PBWorkerReserveEntityIdsResponseOp::_internal_request_id() const {
  return _impl_.request_id_;
}
inline int64_t PBWorkerReserveEntityIdsResponseOp::request_id() const {
  // @@protoc_insertion_point(field_get:PBWorkerReserveEntityIdsResponseOp.request_id)
  return _internal_request_id();
}
inline void PBWorkerReserveEntityIdsResponseOp::_internal_set_request_id(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.request_id_ = value;
}
inline void PBWorkerReserveEntityIdsResponseOp::set_request_id(int64_t value) {
  _internal_set_request_id(value);
  // @@protoc_insertion_point(field_set:PBWorkerReserveEntityIdsResponseOp.request_id)
}

// optional .PBWorkerStatusCode status_code = 2;
inline bool PBWorkerReserveEntityIdsResponseOp::_internal_has_status_code() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool PBWorkerReserveEntityIdsResponseOp::has_status_code() const {
  return _internal_has_status_code();
}
inline void PBWorkerReserveEntityIdsResponseOp::clear_status_code() {
  _impl_.status_code_ = 1;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::PBWorkerStatusCode PBWorkerReserveEntityIdsResponseOp::_internal_status_code() const {
  return static_cast< ::PBWorkerStatusCode >(_impl_.status_code_);
}
inline ::PBWorkerStatusCode PBWorkerReserveEntityIdsResponseOp::status_code() const {
  // @@protoc_insertion_point(field_get:PBWorkerReserveEntityIdsResponseOp.status_code)
  return _internal_status_code();
}
inline void PBWorkerReserveEntityIdsResponseOp::_internal_set_status_code(::PBWorkerStatusCode value) {
  assert(::PBWorkerStatusCode_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.status_code_ = value;
}
inline void PBWorkerReserveEntityIdsResponseOp::set_status_code(::PBWorkerStatusCode value) {
  _internal_set_status_code(value);
  // @@protoc_insertion_point(field_set:PBWorkerReserveEntityIdsResponseOp.status_code)
}

// optional string message = 3;
inline bool PBWorkerReserveEntityIdsResponseOp::_internal_has_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PBWorkerReserveEntityIdsResponseOp::has_message() const {
  return _internal_has_message();
}
inline void PBWorkerReserveEntityIdsResponseOp::clear_message() {
  _impl_.message_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& PBWorkerReserveEntityIdsResponseOp::message() const {
  // @@protoc_insertion_point(field_get:PBWorkerReserveEntityIdsResponseOp.message)
  return _internal_message();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void PBWorkerReserveEntityIdsResponseOp::set_message(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.message_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:PBWorkerReserveEntityIdsResponseOp.message)
}
inline std::string* PBWorkerReserveEntityIdsResponseOp::mutable_message() {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:PBWorkerReserveEntityIdsResponseOp.message)
  return _s;
}
inline const std::string& PBWorkerReserveEntityIdsResponseOp::_internal_message() const {
  return _impl_.message_.Get();
}
inline void PBWorkerReserveEntityIdsResponseOp::_internal_set_message(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.message_.Set(value, GetArenaForAllocation());
}
inline std::string* PBWorkerReserveEntityIdsResponseOp::_internal_mutable_message() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.message_.Mutable(GetArenaForAllocation());
}
inline std::string* PBWorkerReserveEntityIdsResponseOp::release_message() {
  // @@protoc_insertion_point(field_release:PBWorkerReserveEntityIdsResponseOp.message)
  if (!_internal_has_message()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.message_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void PBWorkerReserveEntityIdsResponseOp::set_allocated_message(std::string* message) {
  if (message != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.message_.SetAllocated(message, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:PBWorkerReserveEntityIdsResponseOp.message)
}

// optional int64 first_entity_id = 4;
inline bool PBWorkerReserveEntityIdsResponseOp::_internal_has_first_entity_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool PBWorkerReserveEntityIdsResponseOp::has_first_entity_id() const {
  return _internal_has_first_entity_id();
}
inline void PBWorkerReserveEntityIdsResponseOp::clear_first_entity_id() {
  _impl_.first_entity_id_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline int64_t PBWorkerReserveEntityIdsResponseOp::_internal_first_entity_id() const {
  return _impl_.first_entity_id_;
}
inline int64_t PBWorkerReserveEntityIdsResponseOp::first_entity_id() const {
  // @@protoc_insertion_point(field_get:PBWorkerReserveEntityIdsResponseOp.first_entity_id)
  return _internal_first_entity_id();
}
inline void PBWorkerReserveEntityIdsResponseOp::_internal_set_first_entity_id(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.first_entity_id_ = value;
}
inline void PBWorkerReserveEntityIdsResponseOp::set_first_entity_id(int64_t value) {
  _internal_set_first_entity_id(value);
  // @@protoc_insertion_point(field_set:PBWorkerReserveEntityIdsResponseOp.first_entity_id)
}

// optional uint32 number_of_entity_ids = 5;
inline bool PBWorkerReserveEntityIdsResponseOp::_internal_has_number_of_entity_ids() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool PBWorkerReserveEntityIdsResponseOp::has_number_of_entity_ids() const {
  return _internal_has_number_of_entity_ids();
}
inline void PBWorkerReserveEntityIdsResponseOp::clear_number_of_entity_ids() {
  _impl_.number_of_entity_ids_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t PBWorkerReserveEntityIdsResponseOp::_internal_number_of_entity_ids() const {
  return _impl_.number_of_entity_ids_;
}
inline uint32_t PBWorkerReserveEntityIdsResponseOp::number_of_entity_ids() const {
  // @@protoc_insertion_point(field_get:PBWorkerReserveEntityIdsResponseOp.number_of_entity_ids)
  return _internal_number_of_entity_ids();
}
inline void PBWorkerReserveEntityIdsResponseOp::_internal_set_number_of_entity_ids(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.number_of_entity_ids_ = value;
}
inline void PBWorkerReserveEntityIdsResponseOp::set_number_of_entity_ids(uint32_t value) {
  _internal_set_number_of_entity_ids(value);
  // @@protoc_insertion_point(field_set:PBWorkerReserveEntityIdsResponseOp.number_of_entity_ids)
}

// -------------------------------------------------------------------

// PBWorkerCreateEntityResponseOp

// optional int64 request_id = 1;
inline bool PBWorkerCreateEntityResponseOp::_internal_has_request_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool PBWorkerCreateEntityResponseOp::has_request_id() const {
  return _internal_has_request_id();
}
inline void PBWorkerCreateEntityResponseOp::clear_request_id() {
  _impl_.request_id_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int64_t PBWorkerCreateEntityResponseOp::_internal_request_id() const {
  return _impl_.request_id_;
}
inline int64_t PBWorkerCreateEntityResponseOp::request_id() const {
  // @@protoc_insertion_point(field_get:PBWorkerCreateEntityResponseOp.request_id)
  return _internal_request_id();
}
inline void PBWorkerCreateEntityResponseOp::_internal_set_request_id(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.request_id_ = value;
}
inline void PBWorkerCreateEntityResponseOp::set_request_id(int64_t value) {
  _internal_set_request_id(value);
  // @@protoc_insertion_point(field_set:PBWorkerCreateEntityResponseOp.request_id)
}

// optional .PBWorkerStatusCode status_code = 2;
inline bool PBWorkerCreateEntityResponseOp::_internal_has_status_code() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool PBWorkerCreateEntityResponseOp::has_status_code() const {
  return _internal_has_status_code();
}
inline void PBWorkerCreateEntityResponseOp::clear_status_code() {
  _impl_.status_code_ = 1;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::PBWorkerStatusCode PBWorkerCreateEntityResponseOp::_internal_status_code() const {
  return static_cast< ::PBWorkerStatusCode >(_impl_.status_code_);
}
inline ::PBWorkerStatusCode PBWorkerCreateEntityResponseOp::status_code() const {
  // @@protoc_insertion_point(field_get:PBWorkerCreateEntityResponseOp.status_code)
  return _internal_status_code();
}
inline void PBWorkerCreateEntityResponseOp::_internal_set_status_code(::PBWorkerStatusCode value) {
  assert(::PBWorkerStatusCode_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.status_code_ = value;
}
inline void PBWorkerCreateEntityResponseOp::set_status_code(::PBWorkerStatusCode value) {
  _internal_set_status_code(value);
  // @@protoc_insertion_point(field_set:PBWorkerCreateEntityResponseOp.status_code)
}

// optional string message = 3;
inline bool PBWorkerCreateEntityResponseOp::_internal_has_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PBWorkerCreateEntityResponseOp::has_message() const {
  return _internal_has_message();
}
inline void PBWorkerCreateEntityResponseOp::clear_message() {
  _impl_.message_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& PBWorkerCreateEntityResponseOp::message() const {
  // @@protoc_insertion_point(field_get:PBWorkerCreateEntityResponseOp.message)
  return _internal_message();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void PBWorkerCreateEntityResponseOp::set_message(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.message_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:PBWorkerCreateEntityResponseOp.message)
}
inline std::string* PBWorkerCreateEntityResponseOp::mutable_message() {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:PBWorkerCreateEntityResponseOp.message)
  return _s;
}
inline const std::string& PBWorkerCreateEntityResponseOp::_internal_message() const {
  return _impl_.message_.Get();
}
inline void PBWorkerCreateEntityResponseOp::_internal_set_message(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.message_.Set(value, GetArenaForAllocation());
}
inline std::string* PBWorkerCreateEntityResponseOp::_internal_mutable_message() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.message_.Mutable(GetArenaForAllocation());
}
inline std::string* PBWorkerCreateEntityResponseOp::release_message() {
  // @@protoc_insertion_point(field_release:PBWorkerCreateEntityResponseOp.message)
  if (!_internal_has_message()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.message_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void PBWorkerCreateEntityResponseOp::set_allocated_message(std::string* message) {
  if (message != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.message_.SetAllocated(message, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:PBWorkerCreateEntityResponseOp.message)
}

// optional int64 entity_id = 4;
inline bool PBWorkerCreateEntityResponseOp::_internal_has_entity_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool PBWorkerCreateEntityResponseOp::has_entity_id() const {
  return _internal_has_entity_id();
}
inline void PBWorkerCreateEntityResponseOp::clear_entity_id() {
  _impl_.entity_id_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline int64_t PBWorkerCreateEntityResponseOp::_internal_entity_id() const {
  return _impl_.entity_id_;
}
inline int64_t PBWorkerCreateEntityResponseOp::entity_id() const {
  // @@protoc_insertion_point(field_get:PBWorkerCreateEntityResponseOp.entity_id)
  return _internal_entity_id();
}
inline void PBWorkerCreateEntityResponseOp::_internal_set_entity_id(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.entity_id_ = value;
}
inline void PBWorkerCreateEntityResponseOp::set_entity_id(int64_t value) {
  _internal_set_entity_id(value);
  // @@protoc_insertion_point(field_set:PBWorkerCreateEntityResponseOp.entity_id)
}

// -------------------------------------------------------------------

// PBWorkerDeleteEntityResponseOp

// optional int64 request_id = 1;
inline bool PBWorkerDeleteEntityResponseOp::_internal_has_request_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool PBWorkerDeleteEntityResponseOp::has_request_id() const {
  return _internal_has_request_id();
}
inline void PBWorkerDeleteEntityResponseOp::clear_request_id() {
  _impl_.request_id_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int64_t PBWorkerDeleteEntityResponseOp::_internal_request_id() const {
  return _impl_.request_id_;
}
inline int64_t PBWorkerDeleteEntityResponseOp::request_id() const {
  // @@protoc_insertion_point(field_get:PBWorkerDeleteEntityResponseOp.request_id)
  return _internal_request_id();
}
inline void PBWorkerDeleteEntityResponseOp::_internal_set_request_id(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.request_id_ = value;
}
inline void PBWorkerDeleteEntityResponseOp::set_request_id(int64_t value) {
  _internal_set_request_id(value);
  // @@protoc_insertion_point(field_set:PBWorkerDeleteEntityResponseOp.request_id)
}

// optional int64 entity_id = 2;
inline bool PBWorkerDeleteEntityResponseOp::_internal_has_entity_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool PBWorkerDeleteEntityResponseOp::has_entity_id() const {
  return _internal_has_entity_id();
}
inline void PBWorkerDeleteEntityResponseOp::clear_entity_id() {
  _impl_.entity_id_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline int64_t PBWorkerDeleteEntityResponseOp::_internal_entity_id() const {
  return _impl_.entity_id_;
}
inline int64_t PBWorkerDeleteEntityResponseOp::entity_id() const {
  // @@protoc_insertion_point(field_get:PBWorkerDeleteEntityResponseOp.entity_id)
  return _internal_entity_id();
}
inline void PBWorkerDeleteEntityResponseOp::_internal_set_entity_id(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.entity_id_ = value;
}
inline void PBWorkerDeleteEntityResponseOp::set_entity_id(int64_t value) {
  _internal_set_entity_id(value);
  // @@protoc_insertion_point(field_set:PBWorkerDeleteEntityResponseOp.entity_id)
}

// optional .PBWorkerStatusCode status_code = 3;
inline bool PBWorkerDeleteEntityResponseOp::_internal_has_status_code() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool PBWorkerDeleteEntityResponseOp::has_status_code() const {
  return _internal_has_status_code();
}
inline void PBWorkerDeleteEntityResponseOp::clear_status_code() {
  _impl_.status_code_ = 1;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::PBWorkerStatusCode PBWorkerDeleteEntityResponseOp::_internal_status_code() const {
  return static_cast< ::PBWorkerStatusCode >(_impl_.status_code_);
}
inline ::PBWorkerStatusCode PBWorkerDeleteEntityResponseOp::status_code() const {
  // @@protoc_insertion_point(field_get:PBWorkerDeleteEntityResponseOp.status_code)
  return _internal_status_code();
}
inline void PBWorkerDeleteEntityResponseOp::_internal_set_status_code(::PBWorkerStatusCode value) {
  assert(::PBWorkerStatusCode_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.status_code_ = value;
}
inline void PBWorkerDeleteEntityResponseOp::set_status_code(::PBWorkerStatusCode value) {
  _internal_set_status_code(value);
  // @@protoc_insertion_point(field_set:PBWorkerDeleteEntityResponseOp.status_code)
}

// optional string message = 4;
inline bool PBWorkerDeleteEntityResponseOp::_internal_has_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PBWorkerDeleteEntityResponseOp::has_message() const {
  return _internal_has_message();
}
inline void PBWorkerDeleteEntityResponseOp::clear_message() {
  _impl_.message_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& PBWorkerDeleteEntityResponseOp::message() const {
  // @@protoc_insertion_point(field_get:PBWorkerDeleteEntityResponseOp.message)
  return _internal_message();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void PBWorkerDeleteEntityResponseOp::set_message(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.message_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:PBWorkerDeleteEntityResponseOp.message)
}
inline std::string* PBWorkerDeleteEntityResponseOp::mutable_message() {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:PBWorkerDeleteEntityResponseOp.message)
  return _s;
}
inline const std::string& PBWorkerDeleteEntityResponseOp::_internal_message() const {
  return _impl_.message_.Get();
}
inline void PBWorkerDeleteEntityResponseOp::_internal_set_message(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.message_.Set(value, GetArenaForAllocation());
}
inline std::string* PBWorkerDeleteEntityResponseOp::_internal_mutable_message() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.message_.Mutable(GetArenaForAllocation());
}
inline std::string* PBWorkerDeleteEntityResponseOp::release_message() {
  // @@protoc_insertion_point(field_release:PBWorkerDeleteEntityResponseOp.message)
  if (!_internal_has_message()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.message_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void PBWorkerDeleteEntityResponseOp::set_allocated_message(std::string* message) {
  if (message != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.message_.SetAllocated(message, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:PBWorkerDeleteEntityResponseOp.message)
}

// -------------------------------------------------------------------

// PBWorkerEntityQueryResponseOp

// optional int64 request_id = 1;
inline bool PBWorkerEntityQueryResponseOp::_internal_has_request_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool PBWorkerEntityQueryResponseOp::has_request_id() const {
  return _internal_has_request_id();
}
inline void PBWorkerEntityQueryResponseOp::clear_request_id() {
  _impl_.request_id_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int64_t PBWorkerEntityQueryResponseOp::_internal_request_id() const {
  return _impl_.request_id_;
}
inline int64_t PBWorkerEntityQueryResponseOp::request_id() const {
  // @@protoc_insertion_point(field_get:PBWorkerEntityQueryResponseOp.request_id)
  return _internal_request_id();
}
inline void PBWorkerEntityQueryResponseOp::_internal_set_request_id(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.request_id_ = value;
}
inline void PBWorkerEntityQueryResponseOp::set_request_id(int64_t value) {
  _internal_set_request_id(value);
  // @@protoc_insertion_point(field_set:PBWorkerEntityQueryResponseOp.request_id)
}

// optional .PBWorkerStatusCode status_code = 2;
inline bool PBWorkerEntityQueryResponseOp::_internal_has_status_code() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool PBWorkerEntityQueryResponseOp::has_status_code() const {
  return _internal_has_status_code();
}
inline void PBWorkerEntityQueryResponseOp::clear_status_code() {
  _impl_.status_code_ = 1;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::PBWorkerStatusCode PBWorkerEntityQueryResponseOp::_internal_status_code() const {
  return static_cast< ::PBWorkerStatusCode >(_impl_.status_code_);
}
inline ::PBWorkerStatusCode PBWorkerEntityQueryResponseOp::status_code() const {
  // @@protoc_insertion_point(field_get:PBWorkerEntityQueryResponseOp.status_code)
  return _internal_status_code();
}
inline void PBWorkerEntityQueryResponseOp::_internal_set_status_code(::PBWorkerStatusCode value) {
  assert(::PBWorkerStatusCode_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.status_code_ = value;
}
inline void PBWorkerEntityQueryResponseOp::set_status_code(::PBWorkerStatusCode value) {
  _internal_set_status_code(value);
  // @@protoc_insertion_point(field_set:PBWorkerEntityQueryResponseOp.status_code)
}

// optional string message = 3;
inline bool PBWorkerEntityQueryResponseOp::_internal_has_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PBWorkerEntityQueryResponseOp::has_message() const {
  return _internal_has_message();
}
inline void PBWorkerEntityQueryResponseOp::clear_message() {
  _impl_.message_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& PBWorkerEntityQueryResponseOp::message() const {
  // @@protoc_insertion_point(field_get:PBWorkerEntityQueryResponseOp.message)
  return _internal_message();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void PBWorkerEntityQueryResponseOp::set_message(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.message_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:PBWorkerEntityQueryResponseOp.message)
}
inline std::string* PBWorkerEntityQueryResponseOp::mutable_message() {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:PBWorkerEntityQueryResponseOp.message)
  return _s;
}
inline const std::string& PBWorkerEntityQueryResponseOp::_internal_message() const {
  return _impl_.message_.Get();
}
inline void PBWorkerEntityQueryResponseOp::_internal_set_message(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.message_.Set(value, GetArenaForAllocation());
}
inline std::string* PBWorkerEntityQueryResponseOp::_internal_mutable_message() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.message_.Mutable(GetArenaForAllocation());
}
inline std::string* PBWorkerEntityQueryResponseOp::release_message() {
  // @@protoc_insertion_point(field_release:PBWorkerEntityQueryResponseOp.message)
  if (!_internal_has_message()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.message_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void PBWorkerEntityQueryResponseOp::set_allocated_message(std::string* message) {
  if (message != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.message_.SetAllocated(message, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:PBWorkerEntityQueryResponseOp.message)
}

// optional uint32 result_count = 4;
inline bool PBWorkerEntityQueryResponseOp::_internal_has_result_count() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool PBWorkerEntityQueryResponseOp::has_result_count() const {
  return _internal_has_result_count();
}
inline void PBWorkerEntityQueryResponseOp::clear_result_count() {
  _impl_.result_count_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t PBWorkerEntityQueryResponseOp::_internal_result_count() const {
  return _impl_.result_count_;
}
inline uint32_t PBWorkerEntityQueryResponseOp::result_count() const {
  // @@protoc_insertion_point(field_get:PBWorkerEntityQueryResponseOp.result_count)
  return _internal_result_count();
}
inline void PBWorkerEntityQueryResponseOp::_internal_set_result_count(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.result_count_ = value;
}
inline void PBWorkerEntityQueryResponseOp::set_result_count(uint32_t value) {
  _internal_set_result_count(value);
  // @@protoc_insertion_point(field_set:PBWorkerEntityQueryResponseOp.result_count)
}

// repeated .PBWorkerEntity results = 5;
inline int PBWorkerEntityQueryResponseOp::_internal_results_size() const {
  return _impl_.results_.size();
}
inline int PBWorkerEntityQueryResponseOp::results_size() const {
  return _internal_results_size();
}
inline ::PBWorkerEntity* PBWorkerEntityQueryResponseOp::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:PBWorkerEntityQueryResponseOp.results)
  return _impl_.results_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PBWorkerEntity >*
PBWorkerEntityQueryResponseOp::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:PBWorkerEntityQueryResponseOp.results)
  return &_impl_.results_;
}
inline const ::PBWorkerEntity& PBWorkerEntityQueryResponseOp::_internal_results(int index) const {
  return _impl_.results_.Get(index);
}
inline const ::PBWorkerEntity& PBWorkerEntityQueryResponseOp::results(int index) const {
  // @@protoc_insertion_point(field_get:PBWorkerEntityQueryResponseOp.results)
  return _internal_results(index);
}
inline ::PBWorkerEntity* PBWorkerEntityQueryResponseOp::_internal_add_results() {
  return _impl_.results_.Add();
}
inline ::PBWorkerEntity* PBWorkerEntityQueryResponseOp::add_results() {
  ::PBWorkerEntity* _add = _internal_add_results();
  // @@protoc_insertion_point(field_add:PBWorkerEntityQueryResponseOp.results)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PBWorkerEntity >&
PBWorkerEntityQueryResponseOp::results() const {
  // @@protoc_insertion_point(field_list:PBWorkerEntityQueryResponseOp.results)
  return _impl_.results_;
}

// -------------------------------------------------------------------

// PBWorkerAddComponentOp

// optional int64 entity_id = 1;
inline bool PBWorkerAddComponentOp::_internal_has_entity_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool PBWorkerAddComponentOp::has_entity_id() const {
  return _internal_has_entity_id();
}
inline void PBWorkerAddComponentOp::clear_entity_id() {
  _impl_.entity_id_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int64_t PBWorkerAddComponentOp::_internal_entity_id() const {
  return _impl_.entity_id_;
}
inline int64_t PBWorkerAddComponentOp::entity_id() const {
  // @@protoc_insertion_point(field_get:PBWorkerAddComponentOp.entity_id)
  return _internal_entity_id();
}
inline void PBWorkerAddComponentOp::_internal_set_entity_id(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.entity_id_ = value;
}
inline void PBWorkerAddComponentOp::set_entity_id(int64_t value) {
  _internal_set_entity_id(value);
  // @@protoc_insertion_point(field_set:PBWorkerAddComponentOp.entity_id)
}

// optional .PBWorkerComponentData data = 2;
inline bool PBWorkerAddComponentOp::_internal_has_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.data_ != nullptr);
  return value;
}
inline bool PBWorkerAddComponentOp::has_data() const {
  return _internal_has_data();
}
inline const ::PBWorkerComponentData& PBWorkerAddComponentOp::_internal_data() const {
  const ::PBWorkerComponentData* p = _impl_.data_;
  return p != nullptr ? *p : reinterpret_cast<const ::PBWorkerComponentData&>(
      ::_PBWorkerComponentData_default_instance_);
}
inline const ::PBWorkerComponentData& PBWorkerAddComponentOp::data() const {
  // @@protoc_insertion_point(field_get:PBWorkerAddComponentOp.data)
  return _internal_data();
}
inline void PBWorkerAddComponentOp::unsafe_arena_set_allocated_data(
    ::PBWorkerComponentData* data) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.data_);
  }
  _impl_.data_ = data;
  if (data) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBWorkerAddComponentOp.data)
}
inline ::PBWorkerComponentData* PBWorkerAddComponentOp::release_data() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::PBWorkerComponentData* temp = _impl_.data_;
  _impl_.data_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PBWorkerComponentData* PBWorkerAddComponentOp::unsafe_arena_release_data() {
  // @@protoc_insertion_point(field_release:PBWorkerAddComponentOp.data)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::PBWorkerComponentData* temp = _impl_.data_;
  _impl_.data_ = nullptr;
  return temp;
}
inline ::PBWorkerComponentData* PBWorkerAddComponentOp::_internal_mutable_data() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.data_ == nullptr) {
    auto* p = CreateMaybeMessage<::PBWorkerComponentData>(GetArenaForAllocation());
    _impl_.data_ = p;
  }
  return _impl_.data_;
}
inline ::PBWorkerComponentData* PBWorkerAddComponentOp::mutable_data() {
  ::PBWorkerComponentData* _msg = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:PBWorkerAddComponentOp.data)
  return _msg;
}
inline void PBWorkerAddComponentOp::set_allocated_data(::PBWorkerComponentData* data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.data_);
  }
  if (data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(data));
    if (message_arena != submessage_arena) {
      data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.data_ = data;
  // @@protoc_insertion_point(field_set_allocated:PBWorkerAddComponentOp.data)
}

// -------------------------------------------------------------------

// PBWorkerRemoveComponentOp

// optional int64 entity_id = 1;
inline bool PBWorkerRemoveComponentOp::_internal_has_entity_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PBWorkerRemoveComponentOp::has_entity_id() const {
  return _internal_has_entity_id();
}
inline void PBWorkerRemoveComponentOp::clear_entity_id() {
  _impl_.entity_id_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline int64_t PBWorkerRemoveComponentOp::_internal_entity_id() const {
  return _impl_.entity_id_;
}
inline int64_t PBWorkerRemoveComponentOp::entity_id() const {
  // @@protoc_insertion_point(field_get:PBWorkerRemoveComponentOp.entity_id)
  return _internal_entity_id();
}
inline void PBWorkerRemoveComponentOp::_internal_set_entity_id(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.entity_id_ = value;
}
inline void PBWorkerRemoveComponentOp::set_entity_id(int64_t value) {
  _internal_set_entity_id(value);
  // @@protoc_insertion_point(field_set:PBWorkerRemoveComponentOp.entity_id)
}

// optional uint32 component_id = 2;
inline bool PBWorkerRemoveComponentOp::_internal_has_component_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool PBWorkerRemoveComponentOp::has_component_id() const {
  return _internal_has_component_id();
}
inline void PBWorkerRemoveComponentOp::clear_component_id() {
  _impl_.component_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t PBWorkerRemoveComponentOp::_internal_component_id() const {
  return _impl_.component_id_;
}
inline uint32_t PBWorkerRemoveComponentOp::component_id() const {
  // @@protoc_insertion_point(field_get:PBWorkerRemoveComponentOp.component_id)
  return _internal_component_id();
}
inline void PBWorkerRemoveComponentOp::_internal_set_component_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.component_id_ = value;
}
inline void PBWorkerRemoveComponentOp::set_component_id(uint32_t value) {
  _internal_set_component_id(value);
  // @@protoc_insertion_point(field_set:PBWorkerRemoveComponentOp.component_id)
}

// -------------------------------------------------------------------

// PBWorkerAuthorityChangeOp

// optional int64 entity_id = 1;
inline bool PBWorkerAuthorityChangeOp::_internal_has_entity_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PBWorkerAuthorityChangeOp::has_entity_id() const {
  return _internal_has_entity_id();
}
inline void PBWorkerAuthorityChangeOp::clear_entity_id() {
  _impl_.entity_id_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline int64_t PBWorkerAuthorityChangeOp::_internal_entity_id() const {
  return _impl_.entity_id_;
}
inline int64_t PBWorkerAuthorityChangeOp::entity_id() const {
  // @@protoc_insertion_point(field_get:PBWorkerAuthorityChangeOp.entity_id)
  return _internal_entity_id();
}
inline void PBWorkerAuthorityChangeOp::_internal_set_entity_id(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.entity_id_ = value;
}
inline void PBWorkerAuthorityChangeOp::set_entity_id(int64_t value) {
  _internal_set_entity_id(value);
  // @@protoc_insertion_point(field_set:PBWorkerAuthorityChangeOp.entity_id)
}

// optional uint32 component_id = 2;
inline bool PBWorkerAuthorityChangeOp::_internal_has_component_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool PBWorkerAuthorityChangeOp::has_component_id() const {
  return _internal_has_component_id();
}
inline void PBWorkerAuthorityChangeOp::clear_component_id() {
  _impl_.component_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t PBWorkerAuthorityChangeOp::_internal_component_id() const {
  return _impl_.component_id_;
}
inline uint32_t PBWorkerAuthorityChangeOp::component_id() const {
  // @@protoc_insertion_point(field_get:PBWorkerAuthorityChangeOp.component_id)
  return _internal_component_id();
}
inline void PBWorkerAuthorityChangeOp::_internal_set_component_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.component_id_ = value;
}
inline void PBWorkerAuthorityChangeOp::set_component_id(uint32_t value) {
  _internal_set_component_id(value);
  // @@protoc_insertion_point(field_set:PBWorkerAuthorityChangeOp.component_id)
}

// optional .PBWorkerAuthority authority = 3;
inline bool PBWorkerAuthorityChangeOp::_internal_has_authority() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool PBWorkerAuthorityChangeOp::has_authority() const {
  return _internal_has_authority();
}
inline void PBWorkerAuthorityChangeOp::clear_authority() {
  _impl_.authority_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::PBWorkerAuthority PBWorkerAuthorityChangeOp::_internal_authority() const {
  return static_cast< ::PBWorkerAuthority >(_impl_.authority_);
}
inline ::PBWorkerAuthority PBWorkerAuthorityChangeOp::authority() const {
  // @@protoc_insertion_point(field_get:PBWorkerAuthorityChangeOp.authority)
  return _internal_authority();
}
inline void PBWorkerAuthorityChangeOp::_internal_set_authority(::PBWorkerAuthority value) {
  assert(::PBWorkerAuthority_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.authority_ = value;
}
inline void PBWorkerAuthorityChangeOp::set_authority(::PBWorkerAuthority value) {
  _internal_set_authority(value);
  // @@protoc_insertion_point(field_set:PBWorkerAuthorityChangeOp.authority)
}

// -------------------------------------------------------------------

// PBWorkerComponentUpdateOp

// optional int64 entity_id = 1;
inline bool PBWorkerComponentUpdateOp::_internal_has_entity_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool PBWorkerComponentUpdateOp::has_entity_id() const {
  return _internal_has_entity_id();
}
inline void PBWorkerComponentUpdateOp::clear_entity_id() {
  _impl_.entity_id_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int64_t PBWorkerComponentUpdateOp::_internal_entity_id() const {
  return _impl_.entity_id_;
}
inline int64_t PBWorkerComponentUpdateOp::entity_id() const {
  // @@protoc_insertion_point(field_get:PBWorkerComponentUpdateOp.entity_id)
  return _internal_entity_id();
}
inline void PBWorkerComponentUpdateOp::_internal_set_entity_id(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.entity_id_ = value;
}
inline void PBWorkerComponentUpdateOp::set_entity_id(int64_t value) {
  _internal_set_entity_id(value);
  // @@protoc_insertion_point(field_set:PBWorkerComponentUpdateOp.entity_id)
}

// optional .PBWorkerComponentUpdate update = 2;
inline bool PBWorkerComponentUpdateOp::_internal_has_update() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.update_ != nullptr);
  return value;
}
inline bool PBWorkerComponentUpdateOp::has_update() const {
  return _internal_has_update();
}
inline const ::PBWorkerComponentUpdate& PBWorkerComponentUpdateOp::_internal_update() const {
  const ::PBWorkerComponentUpdate* p = _impl_.update_;
  return p != nullptr ? *p : reinterpret_cast<const ::PBWorkerComponentUpdate&>(
      ::_PBWorkerComponentUpdate_default_instance_);
}
inline const ::PBWorkerComponentUpdate& PBWorkerComponentUpdateOp::update() const {
  // @@protoc_insertion_point(field_get:PBWorkerComponentUpdateOp.update)
  return _internal_update();
}
inline void PBWorkerComponentUpdateOp::unsafe_arena_set_allocated_update(
    ::PBWorkerComponentUpdate* update) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.update_);
  }
  _impl_.update_ = update;
  if (update) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBWorkerComponentUpdateOp.update)
}
inline ::PBWorkerComponentUpdate* PBWorkerComponentUpdateOp::release_update() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::PBWorkerComponentUpdate* temp = _impl_.update_;
  _impl_.update_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PBWorkerComponentUpdate* PBWorkerComponentUpdateOp::unsafe_arena_release_update() {
  // @@protoc_insertion_point(field_release:PBWorkerComponentUpdateOp.update)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::PBWorkerComponentUpdate* temp = _impl_.update_;
  _impl_.update_ = nullptr;
  return temp;
}
inline ::PBWorkerComponentUpdate* PBWorkerComponentUpdateOp::_internal_mutable_update() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.update_ == nullptr) {
    auto* p = CreateMaybeMessage<::PBWorkerComponentUpdate>(GetArenaForAllocation());
    _impl_.update_ = p;
  }
  return _impl_.update_;
}
inline ::PBWorkerComponentUpdate* PBWorkerComponentUpdateOp::mutable_update() {
  ::PBWorkerComponentUpdate* _msg = _internal_mutable_update();
  // @@protoc_insertion_point(field_mutable:PBWorkerComponentUpdateOp.update)
  return _msg;
}
inline void PBWorkerComponentUpdateOp::set_allocated_update(::PBWorkerComponentUpdate* update) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.update_);
  }
  if (update) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(update));
    if (message_arena != submessage_arena) {
      update = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, update, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.update_ = update;
  // @@protoc_insertion_point(field_set_allocated:PBWorkerComponentUpdateOp.update)
}

// -------------------------------------------------------------------

// PBWorkerCommandRequestOp

// optional int64 request_id = 1;
inline bool PBWorkerCommandRequestOp::_internal_has_request_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool PBWorkerCommandRequestOp::has_request_id() const {
  return _internal_has_request_id();
}
inline void PBWorkerCommandRequestOp::clear_request_id() {
  _impl_.request_id_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline int64_t PBWorkerCommandRequestOp::_internal_request_id() const {
  return _impl_.request_id_;
}
inline int64_t PBWorkerCommandRequestOp::request_id() const {
  // @@protoc_insertion_point(field_get:PBWorkerCommandRequestOp.request_id)
  return _internal_request_id();
}
inline void PBWorkerCommandRequestOp::_internal_set_request_id(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.request_id_ = value;
}
inline void PBWorkerCommandRequestOp::set_request_id(int64_t value) {
  _internal_set_request_id(value);
  // @@protoc_insertion_point(field_set:PBWorkerCommandRequestOp.request_id)
}

// optional int64 entity_id = 2;
inline bool PBWorkerCommandRequestOp::_internal_has_entity_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool PBWorkerCommandRequestOp::has_entity_id() const {
  return _internal_has_entity_id();
}
inline void PBWorkerCommandRequestOp::clear_entity_id() {
  _impl_.entity_id_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline int64_t PBWorkerCommandRequestOp::_internal_entity_id() const {
  return _impl_.entity_id_;
}
inline int64_t PBWorkerCommandRequestOp::entity_id() const {
  // @@protoc_insertion_point(field_get:PBWorkerCommandRequestOp.entity_id)
  return _internal_entity_id();
}
inline void PBWorkerCommandRequestOp::_internal_set_entity_id(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.entity_id_ = value;
}
inline void PBWorkerCommandRequestOp::set_entity_id(int64_t value) {
  _internal_set_entity_id(value);
  // @@protoc_insertion_point(field_set:PBWorkerCommandRequestOp.entity_id)
}

// optional uint32 timeout_millis = 3;
inline bool PBWorkerCommandRequestOp::_internal_has_timeout_millis() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool PBWorkerCommandRequestOp::has_timeout_millis() const {
  return _internal_has_timeout_millis();
}
inline void PBWorkerCommandRequestOp::clear_timeout_millis() {
  _impl_.timeout_millis_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline uint32_t PBWorkerCommandRequestOp::_internal_timeout_millis() const {
  return _impl_.timeout_millis_;
}
inline uint32_t PBWorkerCommandRequestOp::timeout_millis() const {
  // @@protoc_insertion_point(field_get:PBWorkerCommandRequestOp.timeout_millis)
  return _internal_timeout_millis();
}
inline void PBWorkerCommandRequestOp::_internal_set_timeout_millis(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.timeout_millis_ = value;
}
inline void PBWorkerCommandRequestOp::set_timeout_millis(uint32_t value) {
  _internal_set_timeout_millis(value);
  // @@protoc_insertion_point(field_set:PBWorkerCommandRequestOp.timeout_millis)
}

// optional uint32 caller_worker_id = 4;
inline bool PBWorkerCommandRequestOp::_internal_has_caller_worker_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool PBWorkerCommandRequestOp::has_caller_worker_id() const {
  return _internal_has_caller_worker_id();
}
inline void PBWorkerCommandRequestOp::clear_caller_worker_id() {
  _impl_.caller_worker_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline uint32_t PBWorkerCommandRequestOp::_internal_caller_worker_id() const {
  return _impl_.caller_worker_id_;
}
inline uint32_t PBWorkerCommandRequestOp::caller_worker_id() const {
  // @@protoc_insertion_point(field_get:PBWorkerCommandRequestOp.caller_worker_id)
  return _internal_caller_worker_id();
}
inline void PBWorkerCommandRequestOp::_internal_set_caller_worker_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.caller_worker_id_ = value;
}
inline void PBWorkerCommandRequestOp::set_caller_worker_id(uint32_t value) {
  _internal_set_caller_worker_id(value);
  // @@protoc_insertion_point(field_set:PBWorkerCommandRequestOp.caller_worker_id)
}

// optional int64 caller_worker_entity_id = 5;
inline bool PBWorkerCommandRequestOp::_internal_has_caller_worker_entity_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool PBWorkerCommandRequestOp::has_caller_worker_entity_id() const {
  return _internal_has_caller_worker_entity_id();
}
inline void PBWorkerCommandRequestOp::clear_caller_worker_entity_id() {
  _impl_.caller_worker_entity_id_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline int64_t PBWorkerCommandRequestOp::_internal_caller_worker_entity_id() const {
  return _impl_.caller_worker_entity_id_;
}
inline int64_t PBWorkerCommandRequestOp::caller_worker_entity_id() const {
  // @@protoc_insertion_point(field_get:PBWorkerCommandRequestOp.caller_worker_entity_id)
  return _internal_caller_worker_entity_id();
}
inline void PBWorkerCommandRequestOp::_internal_set_caller_worker_entity_id(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.caller_worker_entity_id_ = value;
}
inline void PBWorkerCommandRequestOp::set_caller_worker_entity_id(int64_t value) {
  _internal_set_caller_worker_entity_id(value);
  // @@protoc_insertion_point(field_set:PBWorkerCommandRequestOp.caller_worker_entity_id)
}

// optional .PBWorkerWorkerAttributes caller_attribute_set = 6;
inline bool PBWorkerCommandRequestOp::_internal_has_caller_attribute_set() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.caller_attribute_set_ != nullptr);
  return value;
}
inline bool PBWorkerCommandRequestOp::has_caller_attribute_set() const {
  return _internal_has_caller_attribute_set();
}
inline const ::PBWorkerWorkerAttributes& PBWorkerCommandRequestOp::_internal_caller_attribute_set() const {
  const ::PBWorkerWorkerAttributes* p = _impl_.caller_attribute_set_;
  return p != nullptr ? *p : reinterpret_cast<const ::PBWorkerWorkerAttributes&>(
      ::_PBWorkerWorkerAttributes_default_instance_);
}
inline const ::PBWorkerWorkerAttributes& PBWorkerCommandRequestOp::caller_attribute_set() const {
  // @@protoc_insertion_point(field_get:PBWorkerCommandRequestOp.caller_attribute_set)
  return _internal_caller_attribute_set();
}
inline void PBWorkerCommandRequestOp::unsafe_arena_set_allocated_caller_attribute_set(
    ::PBWorkerWorkerAttributes* caller_attribute_set) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.caller_attribute_set_);
  }
  _impl_.caller_attribute_set_ = caller_attribute_set;
  if (caller_attribute_set) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBWorkerCommandRequestOp.caller_attribute_set)
}
inline ::PBWorkerWorkerAttributes* PBWorkerCommandRequestOp::release_caller_attribute_set() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::PBWorkerWorkerAttributes* temp = _impl_.caller_attribute_set_;
  _impl_.caller_attribute_set_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PBWorkerWorkerAttributes* PBWorkerCommandRequestOp::unsafe_arena_release_caller_attribute_set() {
  // @@protoc_insertion_point(field_release:PBWorkerCommandRequestOp.caller_attribute_set)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::PBWorkerWorkerAttributes* temp = _impl_.caller_attribute_set_;
  _impl_.caller_attribute_set_ = nullptr;
  return temp;
}
inline ::PBWorkerWorkerAttributes* PBWorkerCommandRequestOp::_internal_mutable_caller_attribute_set() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.caller_attribute_set_ == nullptr) {
    auto* p = CreateMaybeMessage<::PBWorkerWorkerAttributes>(GetArenaForAllocation());
    _impl_.caller_attribute_set_ = p;
  }
  return _impl_.caller_attribute_set_;
}
inline ::PBWorkerWorkerAttributes* PBWorkerCommandRequestOp::mutable_caller_attribute_set() {
  ::PBWorkerWorkerAttributes* _msg = _internal_mutable_caller_attribute_set();
  // @@protoc_insertion_point(field_mutable:PBWorkerCommandRequestOp.caller_attribute_set)
  return _msg;
}
inline void PBWorkerCommandRequestOp::set_allocated_caller_attribute_set(::PBWorkerWorkerAttributes* caller_attribute_set) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.caller_attribute_set_);
  }
  if (caller_attribute_set) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(caller_attribute_set));
    if (message_arena != submessage_arena) {
      caller_attribute_set = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, caller_attribute_set, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.caller_attribute_set_ = caller_attribute_set;
  // @@protoc_insertion_point(field_set_allocated:PBWorkerCommandRequestOp.caller_attribute_set)
}

// optional .PBWorkerCommandRequest request = 7;
inline bool PBWorkerCommandRequestOp::_internal_has_request() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.request_ != nullptr);
  return value;
}
inline bool PBWorkerCommandRequestOp::has_request() const {
  return _internal_has_request();
}
inline const ::PBWorkerCommandRequest& PBWorkerCommandRequestOp::_internal_request() const {
  const ::PBWorkerCommandRequest* p = _impl_.request_;
  return p != nullptr ? *p : reinterpret_cast<const ::PBWorkerCommandRequest&>(
      ::_PBWorkerCommandRequest_default_instance_);
}
inline const ::PBWorkerCommandRequest& PBWorkerCommandRequestOp::request() const {
  // @@protoc_insertion_point(field_get:PBWorkerCommandRequestOp.request)
  return _internal_request();
}
inline void PBWorkerCommandRequestOp::unsafe_arena_set_allocated_request(
    ::PBWorkerCommandRequest* request) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.request_);
  }
  _impl_.request_ = request;
  if (request) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBWorkerCommandRequestOp.request)
}
inline ::PBWorkerCommandRequest* PBWorkerCommandRequestOp::release_request() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::PBWorkerCommandRequest* temp = _impl_.request_;
  _impl_.request_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PBWorkerCommandRequest* PBWorkerCommandRequestOp::unsafe_arena_release_request() {
  // @@protoc_insertion_point(field_release:PBWorkerCommandRequestOp.request)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::PBWorkerCommandRequest* temp = _impl_.request_;
  _impl_.request_ = nullptr;
  return temp;
}
inline ::PBWorkerCommandRequest* PBWorkerCommandRequestOp::_internal_mutable_request() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.request_ == nullptr) {
    auto* p = CreateMaybeMessage<::PBWorkerCommandRequest>(GetArenaForAllocation());
    _impl_.request_ = p;
  }
  return _impl_.request_;
}
inline ::PBWorkerCommandRequest* PBWorkerCommandRequestOp::mutable_request() {
  ::PBWorkerCommandRequest* _msg = _internal_mutable_request();
  // @@protoc_insertion_point(field_mutable:PBWorkerCommandRequestOp.request)
  return _msg;
}
inline void PBWorkerCommandRequestOp::set_allocated_request(::PBWorkerCommandRequest* request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.request_);
  }
  if (request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(request));
    if (message_arena != submessage_arena) {
      request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, request, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.request_ = request;
  // @@protoc_insertion_point(field_set_allocated:PBWorkerCommandRequestOp.request)
}

// -------------------------------------------------------------------

// PBWorkerCommandResponseOp

// optional int64 request_id = 1;
inline bool PBWorkerCommandResponseOp::_internal_has_request_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool PBWorkerCommandResponseOp::has_request_id() const {
  return _internal_has_request_id();
}
inline void PBWorkerCommandResponseOp::clear_request_id() {
  _impl_.request_id_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline int64_t PBWorkerCommandResponseOp::_internal_request_id() const {
  return _impl_.request_id_;
}
inline int64_t PBWorkerCommandResponseOp::request_id() const {
  // @@protoc_insertion_point(field_get:PBWorkerCommandResponseOp.request_id)
  return _internal_request_id();
}
inline void PBWorkerCommandResponseOp::_internal_set_request_id(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.request_id_ = value;
}
inline void PBWorkerCommandResponseOp::set_request_id(int64_t value) {
  _internal_set_request_id(value);
  // @@protoc_insertion_point(field_set:PBWorkerCommandResponseOp.request_id)
}

// optional int64 entity_id = 2;
inline bool PBWorkerCommandResponseOp::_internal_has_entity_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool PBWorkerCommandResponseOp::has_entity_id() const {
  return _internal_has_entity_id();
}
inline void PBWorkerCommandResponseOp::clear_entity_id() {
  _impl_.entity_id_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline int64_t PBWorkerCommandResponseOp::_internal_entity_id() const {
  return _impl_.entity_id_;
}
inline int64_t PBWorkerCommandResponseOp::entity_id() const {
  // @@protoc_insertion_point(field_get:PBWorkerCommandResponseOp.entity_id)
  return _internal_entity_id();
}
inline void PBWorkerCommandResponseOp::_internal_set_entity_id(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.entity_id_ = value;
}
inline void PBWorkerCommandResponseOp::set_entity_id(int64_t value) {
  _internal_set_entity_id(value);
  // @@protoc_insertion_point(field_set:PBWorkerCommandResponseOp.entity_id)
}

// optional .PBWorkerStatusCode status_code = 3;
inline bool PBWorkerCommandResponseOp::_internal_has_status_code() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool PBWorkerCommandResponseOp::has_status_code() const {
  return _internal_has_status_code();
}
inline void PBWorkerCommandResponseOp::clear_status_code() {
  _impl_.status_code_ = 1;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::PBWorkerStatusCode PBWorkerCommandResponseOp::_internal_status_code() const {
  return static_cast< ::PBWorkerStatusCode >(_impl_.status_code_);
}
inline ::PBWorkerStatusCode PBWorkerCommandResponseOp::status_code() const {
  // @@protoc_insertion_point(field_get:PBWorkerCommandResponseOp.status_code)
  return _internal_status_code();
}
inline void PBWorkerCommandResponseOp::_internal_set_status_code(::PBWorkerStatusCode value) {
  assert(::PBWorkerStatusCode_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.status_code_ = value;
}
inline void PBWorkerCommandResponseOp::set_status_code(::PBWorkerStatusCode value) {
  _internal_set_status_code(value);
  // @@protoc_insertion_point(field_set:PBWorkerCommandResponseOp.status_code)
}

// optional string message = 4;
inline bool PBWorkerCommandResponseOp::_internal_has_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PBWorkerCommandResponseOp::has_message() const {
  return _internal_has_message();
}
inline void PBWorkerCommandResponseOp::clear_message() {
  _impl_.message_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& PBWorkerCommandResponseOp::message() const {
  // @@protoc_insertion_point(field_get:PBWorkerCommandResponseOp.message)
  return _internal_message();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void PBWorkerCommandResponseOp::set_message(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.message_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:PBWorkerCommandResponseOp.message)
}
inline std::string* PBWorkerCommandResponseOp::mutable_message() {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:PBWorkerCommandResponseOp.message)
  return _s;
}
inline const std::string& PBWorkerCommandResponseOp::_internal_message() const {
  return _impl_.message_.Get();
}
inline void PBWorkerCommandResponseOp::_internal_set_message(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.message_.Set(value, GetArenaForAllocation());
}
inline std::string* PBWorkerCommandResponseOp::_internal_mutable_message() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.message_.Mutable(GetArenaForAllocation());
}
inline std::string* PBWorkerCommandResponseOp::release_message() {
  // @@protoc_insertion_point(field_release:PBWorkerCommandResponseOp.message)
  if (!_internal_has_message()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.message_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void PBWorkerCommandResponseOp::set_allocated_message(std::string* message) {
  if (message != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.message_.SetAllocated(message, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:PBWorkerCommandResponseOp.message)
}

// optional .PBWorkerCommandResponse response = 5;
inline bool PBWorkerCommandResponseOp::_internal_has_response() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.response_ != nullptr);
  return value;
}
inline bool PBWorkerCommandResponseOp::has_response() const {
  return _internal_has_response();
}
inline const ::PBWorkerCommandResponse& PBWorkerCommandResponseOp::_internal_response() const {
  const ::PBWorkerCommandResponse* p = _impl_.response_;
  return p != nullptr ? *p : reinterpret_cast<const ::PBWorkerCommandResponse&>(
      ::_PBWorkerCommandResponse_default_instance_);
}
inline const ::PBWorkerCommandResponse& PBWorkerCommandResponseOp::response() const {
  // @@protoc_insertion_point(field_get:PBWorkerCommandResponseOp.response)
  return _internal_response();
}
inline void PBWorkerCommandResponseOp::unsafe_arena_set_allocated_response(
    ::PBWorkerCommandResponse* response) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.response_);
  }
  _impl_.response_ = response;
  if (response) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBWorkerCommandResponseOp.response)
}
inline ::PBWorkerCommandResponse* PBWorkerCommandResponseOp::release_response() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::PBWorkerCommandResponse* temp = _impl_.response_;
  _impl_.response_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PBWorkerCommandResponse* PBWorkerCommandResponseOp::unsafe_arena_release_response() {
  // @@protoc_insertion_point(field_release:PBWorkerCommandResponseOp.response)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::PBWorkerCommandResponse* temp = _impl_.response_;
  _impl_.response_ = nullptr;
  return temp;
}
inline ::PBWorkerCommandResponse* PBWorkerCommandResponseOp::_internal_mutable_response() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.response_ == nullptr) {
    auto* p = CreateMaybeMessage<::PBWorkerCommandResponse>(GetArenaForAllocation());
    _impl_.response_ = p;
  }
  return _impl_.response_;
}
inline ::PBWorkerCommandResponse* PBWorkerCommandResponseOp::mutable_response() {
  ::PBWorkerCommandResponse* _msg = _internal_mutable_response();
  // @@protoc_insertion_point(field_mutable:PBWorkerCommandResponseOp.response)
  return _msg;
}
inline void PBWorkerCommandResponseOp::set_allocated_response(::PBWorkerCommandResponse* response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.response_);
  }
  if (response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(response));
    if (message_arena != submessage_arena) {
      response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, response, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.response_ = response;
  // @@protoc_insertion_point(field_set_allocated:PBWorkerCommandResponseOp.response)
}

// -------------------------------------------------------------------

// PBWorkerComponentSetAuthorityChangeOp

// optional int64 entity_id = 1;
inline bool PBWorkerComponentSetAuthorityChangeOp::_internal_has_entity_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PBWorkerComponentSetAuthorityChangeOp::has_entity_id() const {
  return _internal_has_entity_id();
}
inline void PBWorkerComponentSetAuthorityChangeOp::clear_entity_id() {
  _impl_.entity_id_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline int64_t PBWorkerComponentSetAuthorityChangeOp::_internal_entity_id() const {
  return _impl_.entity_id_;
}
inline int64_t PBWorkerComponentSetAuthorityChangeOp::entity_id() const {
  // @@protoc_insertion_point(field_get:PBWorkerComponentSetAuthorityChangeOp.entity_id)
  return _internal_entity_id();
}
inline void PBWorkerComponentSetAuthorityChangeOp::_internal_set_entity_id(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.entity_id_ = value;
}
inline void PBWorkerComponentSetAuthorityChangeOp::set_entity_id(int64_t value) {
  _internal_set_entity_id(value);
  // @@protoc_insertion_point(field_set:PBWorkerComponentSetAuthorityChangeOp.entity_id)
}

// optional uint32 component_set_id = 2;
inline bool PBWorkerComponentSetAuthorityChangeOp::_internal_has_component_set_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool PBWorkerComponentSetAuthorityChangeOp::has_component_set_id() const {
  return _internal_has_component_set_id();
}
inline void PBWorkerComponentSetAuthorityChangeOp::clear_component_set_id() {
  _impl_.component_set_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t PBWorkerComponentSetAuthorityChangeOp::_internal_component_set_id() const {
  return _impl_.component_set_id_;
}
inline uint32_t PBWorkerComponentSetAuthorityChangeOp::component_set_id() const {
  // @@protoc_insertion_point(field_get:PBWorkerComponentSetAuthorityChangeOp.component_set_id)
  return _internal_component_set_id();
}
inline void PBWorkerComponentSetAuthorityChangeOp::_internal_set_component_set_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.component_set_id_ = value;
}
inline void PBWorkerComponentSetAuthorityChangeOp::set_component_set_id(uint32_t value) {
  _internal_set_component_set_id(value);
  // @@protoc_insertion_point(field_set:PBWorkerComponentSetAuthorityChangeOp.component_set_id)
}

// optional .PBWorkerAuthority authority = 3;
inline bool PBWorkerComponentSetAuthorityChangeOp::_internal_has_authority() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool PBWorkerComponentSetAuthorityChangeOp::has_authority() const {
  return _internal_has_authority();
}
inline void PBWorkerComponentSetAuthorityChangeOp::clear_authority() {
  _impl_.authority_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::PBWorkerAuthority PBWorkerComponentSetAuthorityChangeOp::_internal_authority() const {
  return static_cast< ::PBWorkerAuthority >(_impl_.authority_);
}
inline ::PBWorkerAuthority PBWorkerComponentSetAuthorityChangeOp::authority() const {
  // @@protoc_insertion_point(field_get:PBWorkerComponentSetAuthorityChangeOp.authority)
  return _internal_authority();
}
inline void PBWorkerComponentSetAuthorityChangeOp::_internal_set_authority(::PBWorkerAuthority value) {
  assert(::PBWorkerAuthority_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.authority_ = value;
}
inline void PBWorkerComponentSetAuthorityChangeOp::set_authority(::PBWorkerAuthority value) {
  _internal_set_authority(value);
  // @@protoc_insertion_point(field_set:PBWorkerComponentSetAuthorityChangeOp.authority)
}

// -------------------------------------------------------------------

// PBWorkerOpUnion

// optional .PBWorkerDisconnectOp disconnect = 1;
inline bool PBWorkerOpUnion::_internal_has_disconnect() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.disconnect_ != nullptr);
  return value;
}
inline bool PBWorkerOpUnion::has_disconnect() const {
  return _internal_has_disconnect();
}
inline void PBWorkerOpUnion::clear_disconnect() {
  if (_impl_.disconnect_ != nullptr) _impl_.disconnect_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::PBWorkerDisconnectOp& PBWorkerOpUnion::_internal_disconnect() const {
  const ::PBWorkerDisconnectOp* p = _impl_.disconnect_;
  return p != nullptr ? *p : reinterpret_cast<const ::PBWorkerDisconnectOp&>(
      ::_PBWorkerDisconnectOp_default_instance_);
}
inline const ::PBWorkerDisconnectOp& PBWorkerOpUnion::disconnect() const {
  // @@protoc_insertion_point(field_get:PBWorkerOpUnion.disconnect)
  return _internal_disconnect();
}
inline void PBWorkerOpUnion::unsafe_arena_set_allocated_disconnect(
    ::PBWorkerDisconnectOp* disconnect) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.disconnect_);
  }
  _impl_.disconnect_ = disconnect;
  if (disconnect) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBWorkerOpUnion.disconnect)
}
inline ::PBWorkerDisconnectOp* PBWorkerOpUnion::release_disconnect() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::PBWorkerDisconnectOp* temp = _impl_.disconnect_;
  _impl_.disconnect_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PBWorkerDisconnectOp* PBWorkerOpUnion::unsafe_arena_release_disconnect() {
  // @@protoc_insertion_point(field_release:PBWorkerOpUnion.disconnect)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::PBWorkerDisconnectOp* temp = _impl_.disconnect_;
  _impl_.disconnect_ = nullptr;
  return temp;
}
inline ::PBWorkerDisconnectOp* PBWorkerOpUnion::_internal_mutable_disconnect() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.disconnect_ == nullptr) {
    auto* p = CreateMaybeMessage<::PBWorkerDisconnectOp>(GetArenaForAllocation());
    _impl_.disconnect_ = p;
  }
  return _impl_.disconnect_;
}
inline ::PBWorkerDisconnectOp* PBWorkerOpUnion::mutable_disconnect() {
  ::PBWorkerDisconnectOp* _msg = _internal_mutable_disconnect();
  // @@protoc_insertion_point(field_mutable:PBWorkerOpUnion.disconnect)
  return _msg;
}
inline void PBWorkerOpUnion::set_allocated_disconnect(::PBWorkerDisconnectOp* disconnect) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.disconnect_;
  }
  if (disconnect) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(disconnect);
    if (message_arena != submessage_arena) {
      disconnect = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, disconnect, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.disconnect_ = disconnect;
  // @@protoc_insertion_point(field_set_allocated:PBWorkerOpUnion.disconnect)
}

// optional .PBWorkerFlagUpdateOp flag_update = 2;
inline bool PBWorkerOpUnion::_internal_has_flag_update() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.flag_update_ != nullptr);
  return value;
}
inline bool PBWorkerOpUnion::has_flag_update() const {
  return _internal_has_flag_update();
}
inline void PBWorkerOpUnion::clear_flag_update() {
  if (_impl_.flag_update_ != nullptr) _impl_.flag_update_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::PBWorkerFlagUpdateOp& PBWorkerOpUnion::_internal_flag_update() const {
  const ::PBWorkerFlagUpdateOp* p = _impl_.flag_update_;
  return p != nullptr ? *p : reinterpret_cast<const ::PBWorkerFlagUpdateOp&>(
      ::_PBWorkerFlagUpdateOp_default_instance_);
}
inline const ::PBWorkerFlagUpdateOp& PBWorkerOpUnion::flag_update() const {
  // @@protoc_insertion_point(field_get:PBWorkerOpUnion.flag_update)
  return _internal_flag_update();
}
inline void PBWorkerOpUnion::unsafe_arena_set_allocated_flag_update(
    ::PBWorkerFlagUpdateOp* flag_update) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.flag_update_);
  }
  _impl_.flag_update_ = flag_update;
  if (flag_update) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBWorkerOpUnion.flag_update)
}
inline ::PBWorkerFlagUpdateOp* PBWorkerOpUnion::release_flag_update() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::PBWorkerFlagUpdateOp* temp = _impl_.flag_update_;
  _impl_.flag_update_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PBWorkerFlagUpdateOp* PBWorkerOpUnion::unsafe_arena_release_flag_update() {
  // @@protoc_insertion_point(field_release:PBWorkerOpUnion.flag_update)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::PBWorkerFlagUpdateOp* temp = _impl_.flag_update_;
  _impl_.flag_update_ = nullptr;
  return temp;
}
inline ::PBWorkerFlagUpdateOp* PBWorkerOpUnion::_internal_mutable_flag_update() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.flag_update_ == nullptr) {
    auto* p = CreateMaybeMessage<::PBWorkerFlagUpdateOp>(GetArenaForAllocation());
    _impl_.flag_update_ = p;
  }
  return _impl_.flag_update_;
}
inline ::PBWorkerFlagUpdateOp* PBWorkerOpUnion::mutable_flag_update() {
  ::PBWorkerFlagUpdateOp* _msg = _internal_mutable_flag_update();
  // @@protoc_insertion_point(field_mutable:PBWorkerOpUnion.flag_update)
  return _msg;
}
inline void PBWorkerOpUnion::set_allocated_flag_update(::PBWorkerFlagUpdateOp* flag_update) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.flag_update_;
  }
  if (flag_update) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(flag_update);
    if (message_arena != submessage_arena) {
      flag_update = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, flag_update, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.flag_update_ = flag_update;
  // @@protoc_insertion_point(field_set_allocated:PBWorkerOpUnion.flag_update)
}

// optional .PBWorkerLogMessageOp log_message = 3;
inline bool PBWorkerOpUnion::_internal_has_log_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.log_message_ != nullptr);
  return value;
}
inline bool PBWorkerOpUnion::has_log_message() const {
  return _internal_has_log_message();
}
inline void PBWorkerOpUnion::clear_log_message() {
  if (_impl_.log_message_ != nullptr) _impl_.log_message_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::PBWorkerLogMessageOp& PBWorkerOpUnion::_internal_log_message() const {
  const ::PBWorkerLogMessageOp* p = _impl_.log_message_;
  return p != nullptr ? *p : reinterpret_cast<const ::PBWorkerLogMessageOp&>(
      ::_PBWorkerLogMessageOp_default_instance_);
}
inline const ::PBWorkerLogMessageOp& PBWorkerOpUnion::log_message() const {
  // @@protoc_insertion_point(field_get:PBWorkerOpUnion.log_message)
  return _internal_log_message();
}
inline void PBWorkerOpUnion::unsafe_arena_set_allocated_log_message(
    ::PBWorkerLogMessageOp* log_message) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.log_message_);
  }
  _impl_.log_message_ = log_message;
  if (log_message) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBWorkerOpUnion.log_message)
}
inline ::PBWorkerLogMessageOp* PBWorkerOpUnion::release_log_message() {
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::PBWorkerLogMessageOp* temp = _impl_.log_message_;
  _impl_.log_message_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PBWorkerLogMessageOp* PBWorkerOpUnion::unsafe_arena_release_log_message() {
  // @@protoc_insertion_point(field_release:PBWorkerOpUnion.log_message)
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::PBWorkerLogMessageOp* temp = _impl_.log_message_;
  _impl_.log_message_ = nullptr;
  return temp;
}
inline ::PBWorkerLogMessageOp* PBWorkerOpUnion::_internal_mutable_log_message() {
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.log_message_ == nullptr) {
    auto* p = CreateMaybeMessage<::PBWorkerLogMessageOp>(GetArenaForAllocation());
    _impl_.log_message_ = p;
  }
  return _impl_.log_message_;
}
inline ::PBWorkerLogMessageOp* PBWorkerOpUnion::mutable_log_message() {
  ::PBWorkerLogMessageOp* _msg = _internal_mutable_log_message();
  // @@protoc_insertion_point(field_mutable:PBWorkerOpUnion.log_message)
  return _msg;
}
inline void PBWorkerOpUnion::set_allocated_log_message(::PBWorkerLogMessageOp* log_message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.log_message_;
  }
  if (log_message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(log_message);
    if (message_arena != submessage_arena) {
      log_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, log_message, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.log_message_ = log_message;
  // @@protoc_insertion_point(field_set_allocated:PBWorkerOpUnion.log_message)
}

// optional .PBWorkerMetricsOp metrics = 4;
inline bool PBWorkerOpUnion::_internal_has_metrics() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.metrics_ != nullptr);
  return value;
}
inline bool PBWorkerOpUnion::has_metrics() const {
  return _internal_has_metrics();
}
inline void PBWorkerOpUnion::clear_metrics() {
  if (_impl_.metrics_ != nullptr) _impl_.metrics_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::PBWorkerMetricsOp& PBWorkerOpUnion::_internal_metrics() const {
  const ::PBWorkerMetricsOp* p = _impl_.metrics_;
  return p != nullptr ? *p : reinterpret_cast<const ::PBWorkerMetricsOp&>(
      ::_PBWorkerMetricsOp_default_instance_);
}
inline const ::PBWorkerMetricsOp& PBWorkerOpUnion::metrics() const {
  // @@protoc_insertion_point(field_get:PBWorkerOpUnion.metrics)
  return _internal_metrics();
}
inline void PBWorkerOpUnion::unsafe_arena_set_allocated_metrics(
    ::PBWorkerMetricsOp* metrics) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.metrics_);
  }
  _impl_.metrics_ = metrics;
  if (metrics) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBWorkerOpUnion.metrics)
}
inline ::PBWorkerMetricsOp* PBWorkerOpUnion::release_metrics() {
  _impl_._has_bits_[0] &= ~0x00000008u;
  ::PBWorkerMetricsOp* temp = _impl_.metrics_;
  _impl_.metrics_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PBWorkerMetricsOp* PBWorkerOpUnion::unsafe_arena_release_metrics() {
  // @@protoc_insertion_point(field_release:PBWorkerOpUnion.metrics)
  _impl_._has_bits_[0] &= ~0x00000008u;
  ::PBWorkerMetricsOp* temp = _impl_.metrics_;
  _impl_.metrics_ = nullptr;
  return temp;
}
inline ::PBWorkerMetricsOp* PBWorkerOpUnion::_internal_mutable_metrics() {
  _impl_._has_bits_[0] |= 0x00000008u;
  if (_impl_.metrics_ == nullptr) {
    auto* p = CreateMaybeMessage<::PBWorkerMetricsOp>(GetArenaForAllocation());
    _impl_.metrics_ = p;
  }
  return _impl_.metrics_;
}
inline ::PBWorkerMetricsOp* PBWorkerOpUnion::mutable_metrics() {
  ::PBWorkerMetricsOp* _msg = _internal_mutable_metrics();
  // @@protoc_insertion_point(field_mutable:PBWorkerOpUnion.metrics)
  return _msg;
}
inline void PBWorkerOpUnion::set_allocated_metrics(::PBWorkerMetricsOp* metrics) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.metrics_;
  }
  if (metrics) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(metrics);
    if (message_arena != submessage_arena) {
      metrics = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, metrics, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.metrics_ = metrics;
  // @@protoc_insertion_point(field_set_allocated:PBWorkerOpUnion.metrics)
}

// optional .PBWorkerCriticalSectionOp critical_section = 5;
inline bool PBWorkerOpUnion::_internal_has_critical_section() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.critical_section_ != nullptr);
  return value;
}
inline bool PBWorkerOpUnion::has_critical_section() const {
  return _internal_has_critical_section();
}
inline void PBWorkerOpUnion::clear_critical_section() {
  if (_impl_.critical_section_ != nullptr) _impl_.critical_section_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const ::PBWorkerCriticalSectionOp& PBWorkerOpUnion::_internal_critical_section() const {
  const ::PBWorkerCriticalSectionOp* p = _impl_.critical_section_;
  return p != nullptr ? *p : reinterpret_cast<const ::PBWorkerCriticalSectionOp&>(
      ::_PBWorkerCriticalSectionOp_default_instance_);
}
inline const ::PBWorkerCriticalSectionOp& PBWorkerOpUnion::critical_section() const {
  // @@protoc_insertion_point(field_get:PBWorkerOpUnion.critical_section)
  return _internal_critical_section();
}
inline void PBWorkerOpUnion::unsafe_arena_set_allocated_critical_section(
    ::PBWorkerCriticalSectionOp* critical_section) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.critical_section_);
  }
  _impl_.critical_section_ = critical_section;
  if (critical_section) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBWorkerOpUnion.critical_section)
}
inline ::PBWorkerCriticalSectionOp* PBWorkerOpUnion::release_critical_section() {
  _impl_._has_bits_[0] &= ~0x00000010u;
  ::PBWorkerCriticalSectionOp* temp = _impl_.critical_section_;
  _impl_.critical_section_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PBWorkerCriticalSectionOp* PBWorkerOpUnion::unsafe_arena_release_critical_section() {
  // @@protoc_insertion_point(field_release:PBWorkerOpUnion.critical_section)
  _impl_._has_bits_[0] &= ~0x00000010u;
  ::PBWorkerCriticalSectionOp* temp = _impl_.critical_section_;
  _impl_.critical_section_ = nullptr;
  return temp;
}
inline ::PBWorkerCriticalSectionOp* PBWorkerOpUnion::_internal_mutable_critical_section() {
  _impl_._has_bits_[0] |= 0x00000010u;
  if (_impl_.critical_section_ == nullptr) {
    auto* p = CreateMaybeMessage<::PBWorkerCriticalSectionOp>(GetArenaForAllocation());
    _impl_.critical_section_ = p;
  }
  return _impl_.critical_section_;
}
inline ::PBWorkerCriticalSectionOp* PBWorkerOpUnion::mutable_critical_section() {
  ::PBWorkerCriticalSectionOp* _msg = _internal_mutable_critical_section();
  // @@protoc_insertion_point(field_mutable:PBWorkerOpUnion.critical_section)
  return _msg;
}
inline void PBWorkerOpUnion::set_allocated_critical_section(::PBWorkerCriticalSectionOp* critical_section) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.critical_section_;
  }
  if (critical_section) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(critical_section);
    if (message_arena != submessage_arena) {
      critical_section = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, critical_section, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  _impl_.critical_section_ = critical_section;
  // @@protoc_insertion_point(field_set_allocated:PBWorkerOpUnion.critical_section)
}

// optional .PBWorkerAddEntityOp add_entity = 6;
inline bool PBWorkerOpUnion::_internal_has_add_entity() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.add_entity_ != nullptr);
  return value;
}
inline bool PBWorkerOpUnion::has_add_entity() const {
  return _internal_has_add_entity();
}
inline void PBWorkerOpUnion::clear_add_entity() {
  if (_impl_.add_entity_ != nullptr) _impl_.add_entity_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline const ::PBWorkerAddEntityOp& PBWorkerOpUnion::_internal_add_entity() const {
  const ::PBWorkerAddEntityOp* p = _impl_.add_entity_;
  return p != nullptr ? *p : reinterpret_cast<const ::PBWorkerAddEntityOp&>(
      ::_PBWorkerAddEntityOp_default_instance_);
}
inline const ::PBWorkerAddEntityOp& PBWorkerOpUnion::add_entity() const {
  // @@protoc_insertion_point(field_get:PBWorkerOpUnion.add_entity)
  return _internal_add_entity();
}
inline void PBWorkerOpUnion::unsafe_arena_set_allocated_add_entity(
    ::PBWorkerAddEntityOp* add_entity) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.add_entity_);
  }
  _impl_.add_entity_ = add_entity;
  if (add_entity) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBWorkerOpUnion.add_entity)
}
inline ::PBWorkerAddEntityOp* PBWorkerOpUnion::release_add_entity() {
  _impl_._has_bits_[0] &= ~0x00000020u;
  ::PBWorkerAddEntityOp* temp = _impl_.add_entity_;
  _impl_.add_entity_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PBWorkerAddEntityOp* PBWorkerOpUnion::unsafe_arena_release_add_entity() {
  // @@protoc_insertion_point(field_release:PBWorkerOpUnion.add_entity)
  _impl_._has_bits_[0] &= ~0x00000020u;
  ::PBWorkerAddEntityOp* temp = _impl_.add_entity_;
  _impl_.add_entity_ = nullptr;
  return temp;
}
inline ::PBWorkerAddEntityOp* PBWorkerOpUnion::_internal_mutable_add_entity() {
  _impl_._has_bits_[0] |= 0x00000020u;
  if (_impl_.add_entity_ == nullptr) {
    auto* p = CreateMaybeMessage<::PBWorkerAddEntityOp>(GetArenaForAllocation());
    _impl_.add_entity_ = p;
  }
  return _impl_.add_entity_;
}
inline ::PBWorkerAddEntityOp* PBWorkerOpUnion::mutable_add_entity() {
  ::PBWorkerAddEntityOp* _msg = _internal_mutable_add_entity();
  // @@protoc_insertion_point(field_mutable:PBWorkerOpUnion.add_entity)
  return _msg;
}
inline void PBWorkerOpUnion::set_allocated_add_entity(::PBWorkerAddEntityOp* add_entity) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.add_entity_;
  }
  if (add_entity) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(add_entity);
    if (message_arena != submessage_arena) {
      add_entity = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, add_entity, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  _impl_.add_entity_ = add_entity;
  // @@protoc_insertion_point(field_set_allocated:PBWorkerOpUnion.add_entity)
}

// optional .PBWorkerRemoveEntityOp remove_entity = 7;
inline bool PBWorkerOpUnion::_internal_has_remove_entity() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.remove_entity_ != nullptr);
  return value;
}
inline bool PBWorkerOpUnion::has_remove_entity() const {
  return _internal_has_remove_entity();
}
inline void PBWorkerOpUnion::clear_remove_entity() {
  if (_impl_.remove_entity_ != nullptr) _impl_.remove_entity_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline const ::PBWorkerRemoveEntityOp& PBWorkerOpUnion::_internal_remove_entity() const {
  const ::PBWorkerRemoveEntityOp* p = _impl_.remove_entity_;
  return p != nullptr ? *p : reinterpret_cast<const ::PBWorkerRemoveEntityOp&>(
      ::_PBWorkerRemoveEntityOp_default_instance_);
}
inline const ::PBWorkerRemoveEntityOp& PBWorkerOpUnion::remove_entity() const {
  // @@protoc_insertion_point(field_get:PBWorkerOpUnion.remove_entity)
  return _internal_remove_entity();
}
inline void PBWorkerOpUnion::unsafe_arena_set_allocated_remove_entity(
    ::PBWorkerRemoveEntityOp* remove_entity) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.remove_entity_);
  }
  _impl_.remove_entity_ = remove_entity;
  if (remove_entity) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBWorkerOpUnion.remove_entity)
}
inline ::PBWorkerRemoveEntityOp* PBWorkerOpUnion::release_remove_entity() {
  _impl_._has_bits_[0] &= ~0x00000040u;
  ::PBWorkerRemoveEntityOp* temp = _impl_.remove_entity_;
  _impl_.remove_entity_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PBWorkerRemoveEntityOp* PBWorkerOpUnion::unsafe_arena_release_remove_entity() {
  // @@protoc_insertion_point(field_release:PBWorkerOpUnion.remove_entity)
  _impl_._has_bits_[0] &= ~0x00000040u;
  ::PBWorkerRemoveEntityOp* temp = _impl_.remove_entity_;
  _impl_.remove_entity_ = nullptr;
  return temp;
}
inline ::PBWorkerRemoveEntityOp* PBWorkerOpUnion::_internal_mutable_remove_entity() {
  _impl_._has_bits_[0] |= 0x00000040u;
  if (_impl_.remove_entity_ == nullptr) {
    auto* p = CreateMaybeMessage<::PBWorkerRemoveEntityOp>(GetArenaForAllocation());
    _impl_.remove_entity_ = p;
  }
  return _impl_.remove_entity_;
}
inline ::PBWorkerRemoveEntityOp* PBWorkerOpUnion::mutable_remove_entity() {
  ::PBWorkerRemoveEntityOp* _msg = _internal_mutable_remove_entity();
  // @@protoc_insertion_point(field_mutable:PBWorkerOpUnion.remove_entity)
  return _msg;
}
inline void PBWorkerOpUnion::set_allocated_remove_entity(::PBWorkerRemoveEntityOp* remove_entity) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.remove_entity_;
  }
  if (remove_entity) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(remove_entity);
    if (message_arena != submessage_arena) {
      remove_entity = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, remove_entity, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  _impl_.remove_entity_ = remove_entity;
  // @@protoc_insertion_point(field_set_allocated:PBWorkerOpUnion.remove_entity)
}

// optional .PBWorkerReserveEntityIdsResponseOp reserve_entity_ids_response = 8;
inline bool PBWorkerOpUnion::_internal_has_reserve_entity_ids_response() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.reserve_entity_ids_response_ != nullptr);
  return value;
}
inline bool PBWorkerOpUnion::has_reserve_entity_ids_response() const {
  return _internal_has_reserve_entity_ids_response();
}
inline void PBWorkerOpUnion::clear_reserve_entity_ids_response() {
  if (_impl_.reserve_entity_ids_response_ != nullptr) _impl_.reserve_entity_ids_response_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline const ::PBWorkerReserveEntityIdsResponseOp& PBWorkerOpUnion::_internal_reserve_entity_ids_response() const {
  const ::PBWorkerReserveEntityIdsResponseOp* p = _impl_.reserve_entity_ids_response_;
  return p != nullptr ? *p : reinterpret_cast<const ::PBWorkerReserveEntityIdsResponseOp&>(
      ::_PBWorkerReserveEntityIdsResponseOp_default_instance_);
}
inline const ::PBWorkerReserveEntityIdsResponseOp& PBWorkerOpUnion::reserve_entity_ids_response() const {
  // @@protoc_insertion_point(field_get:PBWorkerOpUnion.reserve_entity_ids_response)
  return _internal_reserve_entity_ids_response();
}
inline void PBWorkerOpUnion::unsafe_arena_set_allocated_reserve_entity_ids_response(
    ::PBWorkerReserveEntityIdsResponseOp* reserve_entity_ids_response) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.reserve_entity_ids_response_);
  }
  _impl_.reserve_entity_ids_response_ = reserve_entity_ids_response;
  if (reserve_entity_ids_response) {
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBWorkerOpUnion.reserve_entity_ids_response)
}
inline ::PBWorkerReserveEntityIdsResponseOp* PBWorkerOpUnion::release_reserve_entity_ids_response() {
  _impl_._has_bits_[0] &= ~0x00000080u;
  ::PBWorkerReserveEntityIdsResponseOp* temp = _impl_.reserve_entity_ids_response_;
  _impl_.reserve_entity_ids_response_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PBWorkerReserveEntityIdsResponseOp* PBWorkerOpUnion::unsafe_arena_release_reserve_entity_ids_response() {
  // @@protoc_insertion_point(field_release:PBWorkerOpUnion.reserve_entity_ids_response)
  _impl_._has_bits_[0] &= ~0x00000080u;
  ::PBWorkerReserveEntityIdsResponseOp* temp = _impl_.reserve_entity_ids_response_;
  _impl_.reserve_entity_ids_response_ = nullptr;
  return temp;
}
inline ::PBWorkerReserveEntityIdsResponseOp* PBWorkerOpUnion::_internal_mutable_reserve_entity_ids_response() {
  _impl_._has_bits_[0] |= 0x00000080u;
  if (_impl_.reserve_entity_ids_response_ == nullptr) {
    auto* p = CreateMaybeMessage<::PBWorkerReserveEntityIdsResponseOp>(GetArenaForAllocation());
    _impl_.reserve_entity_ids_response_ = p;
  }
  return _impl_.reserve_entity_ids_response_;
}
inline ::PBWorkerReserveEntityIdsResponseOp* PBWorkerOpUnion::mutable_reserve_entity_ids_response() {
  ::PBWorkerReserveEntityIdsResponseOp* _msg = _internal_mutable_reserve_entity_ids_response();
  // @@protoc_insertion_point(field_mutable:PBWorkerOpUnion.reserve_entity_ids_response)
  return _msg;
}
inline void PBWorkerOpUnion::set_allocated_reserve_entity_ids_response(::PBWorkerReserveEntityIdsResponseOp* reserve_entity_ids_response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.reserve_entity_ids_response_;
  }
  if (reserve_entity_ids_response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(reserve_entity_ids_response);
    if (message_arena != submessage_arena) {
      reserve_entity_ids_response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, reserve_entity_ids_response, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }
  _impl_.reserve_entity_ids_response_ = reserve_entity_ids_response;
  // @@protoc_insertion_point(field_set_allocated:PBWorkerOpUnion.reserve_entity_ids_response)
}

// optional .PBWorkerCreateEntityResponseOp create_entity_response = 9;
inline bool PBWorkerOpUnion::_internal_has_create_entity_response() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.create_entity_response_ != nullptr);
  return value;
}
inline bool PBWorkerOpUnion::has_create_entity_response() const {
  return _internal_has_create_entity_response();
}
inline void PBWorkerOpUnion::clear_create_entity_response() {
  if (_impl_.create_entity_response_ != nullptr) _impl_.create_entity_response_->Clear();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline const ::PBWorkerCreateEntityResponseOp& PBWorkerOpUnion::_internal_create_entity_response() const {
  const ::PBWorkerCreateEntityResponseOp* p = _impl_.create_entity_response_;
  return p != nullptr ? *p : reinterpret_cast<const ::PBWorkerCreateEntityResponseOp&>(
      ::_PBWorkerCreateEntityResponseOp_default_instance_);
}
inline const ::PBWorkerCreateEntityResponseOp& PBWorkerOpUnion::create_entity_response() const {
  // @@protoc_insertion_point(field_get:PBWorkerOpUnion.create_entity_response)
  return _internal_create_entity_response();
}
inline void PBWorkerOpUnion::unsafe_arena_set_allocated_create_entity_response(
    ::PBWorkerCreateEntityResponseOp* create_entity_response) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.create_entity_response_);
  }
  _impl_.create_entity_response_ = create_entity_response;
  if (create_entity_response) {
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBWorkerOpUnion.create_entity_response)
}
inline ::PBWorkerCreateEntityResponseOp* PBWorkerOpUnion::release_create_entity_response() {
  _impl_._has_bits_[0] &= ~0x00000100u;
  ::PBWorkerCreateEntityResponseOp* temp = _impl_.create_entity_response_;
  _impl_.create_entity_response_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PBWorkerCreateEntityResponseOp* PBWorkerOpUnion::unsafe_arena_release_create_entity_response() {
  // @@protoc_insertion_point(field_release:PBWorkerOpUnion.create_entity_response)
  _impl_._has_bits_[0] &= ~0x00000100u;
  ::PBWorkerCreateEntityResponseOp* temp = _impl_.create_entity_response_;
  _impl_.create_entity_response_ = nullptr;
  return temp;
}
inline ::PBWorkerCreateEntityResponseOp* PBWorkerOpUnion::_internal_mutable_create_entity_response() {
  _impl_._has_bits_[0] |= 0x00000100u;
  if (_impl_.create_entity_response_ == nullptr) {
    auto* p = CreateMaybeMessage<::PBWorkerCreateEntityResponseOp>(GetArenaForAllocation());
    _impl_.create_entity_response_ = p;
  }
  return _impl_.create_entity_response_;
}
inline ::PBWorkerCreateEntityResponseOp* PBWorkerOpUnion::mutable_create_entity_response() {
  ::PBWorkerCreateEntityResponseOp* _msg = _internal_mutable_create_entity_response();
  // @@protoc_insertion_point(field_mutable:PBWorkerOpUnion.create_entity_response)
  return _msg;
}
inline void PBWorkerOpUnion::set_allocated_create_entity_response(::PBWorkerCreateEntityResponseOp* create_entity_response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.create_entity_response_;
  }
  if (create_entity_response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(create_entity_response);
    if (message_arena != submessage_arena) {
      create_entity_response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, create_entity_response, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }
  _impl_.create_entity_response_ = create_entity_response;
  // @@protoc_insertion_point(field_set_allocated:PBWorkerOpUnion.create_entity_response)
}

// optional .PBWorkerDeleteEntityResponseOp delete_entity_response = 10;
inline bool PBWorkerOpUnion::_internal_has_delete_entity_response() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.delete_entity_response_ != nullptr);
  return value;
}
inline bool PBWorkerOpUnion::has_delete_entity_response() const {
  return _internal_has_delete_entity_response();
}
inline void PBWorkerOpUnion::clear_delete_entity_response() {
  if (_impl_.delete_entity_response_ != nullptr) _impl_.delete_entity_response_->Clear();
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline const ::PBWorkerDeleteEntityResponseOp& PBWorkerOpUnion::_internal_delete_entity_response() const {
  const ::PBWorkerDeleteEntityResponseOp* p = _impl_.delete_entity_response_;
  return p != nullptr ? *p : reinterpret_cast<const ::PBWorkerDeleteEntityResponseOp&>(
      ::_PBWorkerDeleteEntityResponseOp_default_instance_);
}
inline const ::PBWorkerDeleteEntityResponseOp& PBWorkerOpUnion::delete_entity_response() const {
  // @@protoc_insertion_point(field_get:PBWorkerOpUnion.delete_entity_response)
  return _internal_delete_entity_response();
}
inline void PBWorkerOpUnion::unsafe_arena_set_allocated_delete_entity_response(
    ::PBWorkerDeleteEntityResponseOp* delete_entity_response) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.delete_entity_response_);
  }
  _impl_.delete_entity_response_ = delete_entity_response;
  if (delete_entity_response) {
    _impl_._has_bits_[0] |= 0x00000200u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000200u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBWorkerOpUnion.delete_entity_response)
}
inline ::PBWorkerDeleteEntityResponseOp* PBWorkerOpUnion::release_delete_entity_response() {
  _impl_._has_bits_[0] &= ~0x00000200u;
  ::PBWorkerDeleteEntityResponseOp* temp = _impl_.delete_entity_response_;
  _impl_.delete_entity_response_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PBWorkerDeleteEntityResponseOp* PBWorkerOpUnion::unsafe_arena_release_delete_entity_response() {
  // @@protoc_insertion_point(field_release:PBWorkerOpUnion.delete_entity_response)
  _impl_._has_bits_[0] &= ~0x00000200u;
  ::PBWorkerDeleteEntityResponseOp* temp = _impl_.delete_entity_response_;
  _impl_.delete_entity_response_ = nullptr;
  return temp;
}
inline ::PBWorkerDeleteEntityResponseOp* PBWorkerOpUnion::_internal_mutable_delete_entity_response() {
  _impl_._has_bits_[0] |= 0x00000200u;
  if (_impl_.delete_entity_response_ == nullptr) {
    auto* p = CreateMaybeMessage<::PBWorkerDeleteEntityResponseOp>(GetArenaForAllocation());
    _impl_.delete_entity_response_ = p;
  }
  return _impl_.delete_entity_response_;
}
inline ::PBWorkerDeleteEntityResponseOp* PBWorkerOpUnion::mutable_delete_entity_response() {
  ::PBWorkerDeleteEntityResponseOp* _msg = _internal_mutable_delete_entity_response();
  // @@protoc_insertion_point(field_mutable:PBWorkerOpUnion.delete_entity_response)
  return _msg;
}
inline void PBWorkerOpUnion::set_allocated_delete_entity_response(::PBWorkerDeleteEntityResponseOp* delete_entity_response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.delete_entity_response_;
  }
  if (delete_entity_response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(delete_entity_response);
    if (message_arena != submessage_arena) {
      delete_entity_response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, delete_entity_response, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000200u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000200u;
  }
  _impl_.delete_entity_response_ = delete_entity_response;
  // @@protoc_insertion_point(field_set_allocated:PBWorkerOpUnion.delete_entity_response)
}

// optional .PBWorkerEntityQueryResponseOp entity_query_response = 11;
inline bool PBWorkerOpUnion::_internal_has_entity_query_response() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.entity_query_response_ != nullptr);
  return value;
}
inline bool PBWorkerOpUnion::has_entity_query_response() const {
  return _internal_has_entity_query_response();
}
inline void PBWorkerOpUnion::clear_entity_query_response() {
  if (_impl_.entity_query_response_ != nullptr) _impl_.entity_query_response_->Clear();
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline const ::PBWorkerEntityQueryResponseOp& PBWorkerOpUnion::_internal_entity_query_response() const {
  const ::PBWorkerEntityQueryResponseOp* p = _impl_.entity_query_response_;
  return p != nullptr ? *p : reinterpret_cast<const ::PBWorkerEntityQueryResponseOp&>(
      ::_PBWorkerEntityQueryResponseOp_default_instance_);
}
inline const ::PBWorkerEntityQueryResponseOp& PBWorkerOpUnion::entity_query_response() const {
  // @@protoc_insertion_point(field_get:PBWorkerOpUnion.entity_query_response)
  return _internal_entity_query_response();
}
inline void PBWorkerOpUnion::unsafe_arena_set_allocated_entity_query_response(
    ::PBWorkerEntityQueryResponseOp* entity_query_response) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.entity_query_response_);
  }
  _impl_.entity_query_response_ = entity_query_response;
  if (entity_query_response) {
    _impl_._has_bits_[0] |= 0x00000400u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000400u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBWorkerOpUnion.entity_query_response)
}
inline ::PBWorkerEntityQueryResponseOp* PBWorkerOpUnion::release_entity_query_response() {
  _impl_._has_bits_[0] &= ~0x00000400u;
  ::PBWorkerEntityQueryResponseOp* temp = _impl_.entity_query_response_;
  _impl_.entity_query_response_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PBWorkerEntityQueryResponseOp* PBWorkerOpUnion::unsafe_arena_release_entity_query_response() {
  // @@protoc_insertion_point(field_release:PBWorkerOpUnion.entity_query_response)
  _impl_._has_bits_[0] &= ~0x00000400u;
  ::PBWorkerEntityQueryResponseOp* temp = _impl_.entity_query_response_;
  _impl_.entity_query_response_ = nullptr;
  return temp;
}
inline ::PBWorkerEntityQueryResponseOp* PBWorkerOpUnion::_internal_mutable_entity_query_response() {
  _impl_._has_bits_[0] |= 0x00000400u;
  if (_impl_.entity_query_response_ == nullptr) {
    auto* p = CreateMaybeMessage<::PBWorkerEntityQueryResponseOp>(GetArenaForAllocation());
    _impl_.entity_query_response_ = p;
  }
  return _impl_.entity_query_response_;
}
inline ::PBWorkerEntityQueryResponseOp* PBWorkerOpUnion::mutable_entity_query_response() {
  ::PBWorkerEntityQueryResponseOp* _msg = _internal_mutable_entity_query_response();
  // @@protoc_insertion_point(field_mutable:PBWorkerOpUnion.entity_query_response)
  return _msg;
}
inline void PBWorkerOpUnion::set_allocated_entity_query_response(::PBWorkerEntityQueryResponseOp* entity_query_response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.entity_query_response_;
  }
  if (entity_query_response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(entity_query_response);
    if (message_arena != submessage_arena) {
      entity_query_response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, entity_query_response, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000400u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000400u;
  }
  _impl_.entity_query_response_ = entity_query_response;
  // @@protoc_insertion_point(field_set_allocated:PBWorkerOpUnion.entity_query_response)
}

// optional .PBWorkerAddComponentOp add_component = 12;
inline bool PBWorkerOpUnion::_internal_has_add_component() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.add_component_ != nullptr);
  return value;
}
inline bool PBWorkerOpUnion::has_add_component() const {
  return _internal_has_add_component();
}
inline void PBWorkerOpUnion::clear_add_component() {
  if (_impl_.add_component_ != nullptr) _impl_.add_component_->Clear();
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline const ::PBWorkerAddComponentOp& PBWorkerOpUnion::_internal_add_component() const {
  const ::PBWorkerAddComponentOp* p = _impl_.add_component_;
  return p != nullptr ? *p : reinterpret_cast<const ::PBWorkerAddComponentOp&>(
      ::_PBWorkerAddComponentOp_default_instance_);
}
inline const ::PBWorkerAddComponentOp& PBWorkerOpUnion::add_component() const {
  // @@protoc_insertion_point(field_get:PBWorkerOpUnion.add_component)
  return _internal_add_component();
}
inline void PBWorkerOpUnion::unsafe_arena_set_allocated_add_component(
    ::PBWorkerAddComponentOp* add_component) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.add_component_);
  }
  _impl_.add_component_ = add_component;
  if (add_component) {
    _impl_._has_bits_[0] |= 0x00000800u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000800u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBWorkerOpUnion.add_component)
}
inline ::PBWorkerAddComponentOp* PBWorkerOpUnion::release_add_component() {
  _impl_._has_bits_[0] &= ~0x00000800u;
  ::PBWorkerAddComponentOp* temp = _impl_.add_component_;
  _impl_.add_component_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PBWorkerAddComponentOp* PBWorkerOpUnion::unsafe_arena_release_add_component() {
  // @@protoc_insertion_point(field_release:PBWorkerOpUnion.add_component)
  _impl_._has_bits_[0] &= ~0x00000800u;
  ::PBWorkerAddComponentOp* temp = _impl_.add_component_;
  _impl_.add_component_ = nullptr;
  return temp;
}
inline ::PBWorkerAddComponentOp* PBWorkerOpUnion::_internal_mutable_add_component() {
  _impl_._has_bits_[0] |= 0x00000800u;
  if (_impl_.add_component_ == nullptr) {
    auto* p = CreateMaybeMessage<::PBWorkerAddComponentOp>(GetArenaForAllocation());
    _impl_.add_component_ = p;
  }
  return _impl_.add_component_;
}
inline ::PBWorkerAddComponentOp* PBWorkerOpUnion::mutable_add_component() {
  ::PBWorkerAddComponentOp* _msg = _internal_mutable_add_component();
  // @@protoc_insertion_point(field_mutable:PBWorkerOpUnion.add_component)
  return _msg;
}
inline void PBWorkerOpUnion::set_allocated_add_component(::PBWorkerAddComponentOp* add_component) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.add_component_;
  }
  if (add_component) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(add_component);
    if (message_arena != submessage_arena) {
      add_component = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, add_component, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000800u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000800u;
  }
  _impl_.add_component_ = add_component;
  // @@protoc_insertion_point(field_set_allocated:PBWorkerOpUnion.add_component)
}

// optional .PBWorkerRemoveComponentOp remove_component = 13;
inline bool PBWorkerOpUnion::_internal_has_remove_component() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.remove_component_ != nullptr);
  return value;
}
inline bool PBWorkerOpUnion::has_remove_component() const {
  return _internal_has_remove_component();
}
inline void PBWorkerOpUnion::clear_remove_component() {
  if (_impl_.remove_component_ != nullptr) _impl_.remove_component_->Clear();
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline const ::PBWorkerRemoveComponentOp& PBWorkerOpUnion::_internal_remove_component() const {
  const ::PBWorkerRemoveComponentOp* p = _impl_.remove_component_;
  return p != nullptr ? *p : reinterpret_cast<const ::PBWorkerRemoveComponentOp&>(
      ::_PBWorkerRemoveComponentOp_default_instance_);
}
inline const ::PBWorkerRemoveComponentOp& PBWorkerOpUnion::remove_component() const {
  // @@protoc_insertion_point(field_get:PBWorkerOpUnion.remove_component)
  return _internal_remove_component();
}
inline void PBWorkerOpUnion::unsafe_arena_set_allocated_remove_component(
    ::PBWorkerRemoveComponentOp* remove_component) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.remove_component_);
  }
  _impl_.remove_component_ = remove_component;
  if (remove_component) {
    _impl_._has_bits_[0] |= 0x00001000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00001000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBWorkerOpUnion.remove_component)
}
inline ::PBWorkerRemoveComponentOp* PBWorkerOpUnion::release_remove_component() {
  _impl_._has_bits_[0] &= ~0x00001000u;
  ::PBWorkerRemoveComponentOp* temp = _impl_.remove_component_;
  _impl_.remove_component_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PBWorkerRemoveComponentOp* PBWorkerOpUnion::unsafe_arena_release_remove_component() {
  // @@protoc_insertion_point(field_release:PBWorkerOpUnion.remove_component)
  _impl_._has_bits_[0] &= ~0x00001000u;
  ::PBWorkerRemoveComponentOp* temp = _impl_.remove_component_;
  _impl_.remove_component_ = nullptr;
  return temp;
}
inline ::PBWorkerRemoveComponentOp* PBWorkerOpUnion::_internal_mutable_remove_component() {
  _impl_._has_bits_[0] |= 0x00001000u;
  if (_impl_.remove_component_ == nullptr) {
    auto* p = CreateMaybeMessage<::PBWorkerRemoveComponentOp>(GetArenaForAllocation());
    _impl_.remove_component_ = p;
  }
  return _impl_.remove_component_;
}
inline ::PBWorkerRemoveComponentOp* PBWorkerOpUnion::mutable_remove_component() {
  ::PBWorkerRemoveComponentOp* _msg = _internal_mutable_remove_component();
  // @@protoc_insertion_point(field_mutable:PBWorkerOpUnion.remove_component)
  return _msg;
}
inline void PBWorkerOpUnion::set_allocated_remove_component(::PBWorkerRemoveComponentOp* remove_component) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.remove_component_;
  }
  if (remove_component) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(remove_component);
    if (message_arena != submessage_arena) {
      remove_component = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, remove_component, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00001000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00001000u;
  }
  _impl_.remove_component_ = remove_component;
  // @@protoc_insertion_point(field_set_allocated:PBWorkerOpUnion.remove_component)
}

// optional .PBWorkerAuthorityChangeOp authority_change = 14;
inline bool PBWorkerOpUnion::_internal_has_authority_change() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.authority_change_ != nullptr);
  return value;
}
inline bool PBWorkerOpUnion::has_authority_change() const {
  return _internal_has_authority_change();
}
inline void PBWorkerOpUnion::clear_authority_change() {
  if (_impl_.authority_change_ != nullptr) _impl_.authority_change_->Clear();
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline const ::PBWorkerAuthorityChangeOp& PBWorkerOpUnion::_internal_authority_change() const {
  const ::PBWorkerAuthorityChangeOp* p = _impl_.authority_change_;
  return p != nullptr ? *p : reinterpret_cast<const ::PBWorkerAuthorityChangeOp&>(
      ::_PBWorkerAuthorityChangeOp_default_instance_);
}
inline const ::PBWorkerAuthorityChangeOp& PBWorkerOpUnion::authority_change() const {
  // @@protoc_insertion_point(field_get:PBWorkerOpUnion.authority_change)
  return _internal_authority_change();
}
inline void PBWorkerOpUnion::unsafe_arena_set_allocated_authority_change(
    ::PBWorkerAuthorityChangeOp* authority_change) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.authority_change_);
  }
  _impl_.authority_change_ = authority_change;
  if (authority_change) {
    _impl_._has_bits_[0] |= 0x00002000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00002000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBWorkerOpUnion.authority_change)
}
inline ::PBWorkerAuthorityChangeOp* PBWorkerOpUnion::release_authority_change() {
  _impl_._has_bits_[0] &= ~0x00002000u;
  ::PBWorkerAuthorityChangeOp* temp = _impl_.authority_change_;
  _impl_.authority_change_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PBWorkerAuthorityChangeOp* PBWorkerOpUnion::unsafe_arena_release_authority_change() {
  // @@protoc_insertion_point(field_release:PBWorkerOpUnion.authority_change)
  _impl_._has_bits_[0] &= ~0x00002000u;
  ::PBWorkerAuthorityChangeOp* temp = _impl_.authority_change_;
  _impl_.authority_change_ = nullptr;
  return temp;
}
inline ::PBWorkerAuthorityChangeOp* PBWorkerOpUnion::_internal_mutable_authority_change() {
  _impl_._has_bits_[0] |= 0x00002000u;
  if (_impl_.authority_change_ == nullptr) {
    auto* p = CreateMaybeMessage<::PBWorkerAuthorityChangeOp>(GetArenaForAllocation());
    _impl_.authority_change_ = p;
  }
  return _impl_.authority_change_;
}
inline ::PBWorkerAuthorityChangeOp* PBWorkerOpUnion::mutable_authority_change() {
  ::PBWorkerAuthorityChangeOp* _msg = _internal_mutable_authority_change();
  // @@protoc_insertion_point(field_mutable:PBWorkerOpUnion.authority_change)
  return _msg;
}
inline void PBWorkerOpUnion::set_allocated_authority_change(::PBWorkerAuthorityChangeOp* authority_change) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.authority_change_;
  }
  if (authority_change) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(authority_change);
    if (message_arena != submessage_arena) {
      authority_change = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, authority_change, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00002000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00002000u;
  }
  _impl_.authority_change_ = authority_change;
  // @@protoc_insertion_point(field_set_allocated:PBWorkerOpUnion.authority_change)
}

// optional .PBWorkerComponentUpdateOp component_update = 15;
inline bool PBWorkerOpUnion::_internal_has_component_update() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.component_update_ != nullptr);
  return value;
}
inline bool PBWorkerOpUnion::has_component_update() const {
  return _internal_has_component_update();
}
inline void PBWorkerOpUnion::clear_component_update() {
  if (_impl_.component_update_ != nullptr) _impl_.component_update_->Clear();
  _impl_._has_bits_[0] &= ~0x00004000u;
}
inline const ::PBWorkerComponentUpdateOp& PBWorkerOpUnion::_internal_component_update() const {
  const ::PBWorkerComponentUpdateOp* p = _impl_.component_update_;
  return p != nullptr ? *p : reinterpret_cast<const ::PBWorkerComponentUpdateOp&>(
      ::_PBWorkerComponentUpdateOp_default_instance_);
}
inline const ::PBWorkerComponentUpdateOp& PBWorkerOpUnion::component_update() const {
  // @@protoc_insertion_point(field_get:PBWorkerOpUnion.component_update)
  return _internal_component_update();
}
inline void PBWorkerOpUnion::unsafe_arena_set_allocated_component_update(
    ::PBWorkerComponentUpdateOp* component_update) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.component_update_);
  }
  _impl_.component_update_ = component_update;
  if (component_update) {
    _impl_._has_bits_[0] |= 0x00004000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00004000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBWorkerOpUnion.component_update)
}
inline ::PBWorkerComponentUpdateOp* PBWorkerOpUnion::release_component_update() {
  _impl_._has_bits_[0] &= ~0x00004000u;
  ::PBWorkerComponentUpdateOp* temp = _impl_.component_update_;
  _impl_.component_update_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PBWorkerComponentUpdateOp* PBWorkerOpUnion::unsafe_arena_release_component_update() {
  // @@protoc_insertion_point(field_release:PBWorkerOpUnion.component_update)
  _impl_._has_bits_[0] &= ~0x00004000u;
  ::PBWorkerComponentUpdateOp* temp = _impl_.component_update_;
  _impl_.component_update_ = nullptr;
  return temp;
}
inline ::PBWorkerComponentUpdateOp* PBWorkerOpUnion::_internal_mutable_component_update() {
  _impl_._has_bits_[0] |= 0x00004000u;
  if (_impl_.component_update_ == nullptr) {
    auto* p = CreateMaybeMessage<::PBWorkerComponentUpdateOp>(GetArenaForAllocation());
    _impl_.component_update_ = p;
  }
  return _impl_.component_update_;
}
inline ::PBWorkerComponentUpdateOp* PBWorkerOpUnion::mutable_component_update() {
  ::PBWorkerComponentUpdateOp* _msg = _internal_mutable_component_update();
  // @@protoc_insertion_point(field_mutable:PBWorkerOpUnion.component_update)
  return _msg;
}
inline void PBWorkerOpUnion::set_allocated_component_update(::PBWorkerComponentUpdateOp* component_update) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.component_update_;
  }
  if (component_update) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(component_update);
    if (message_arena != submessage_arena) {
      component_update = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, component_update, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00004000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00004000u;
  }
  _impl_.component_update_ = component_update;
  // @@protoc_insertion_point(field_set_allocated:PBWorkerOpUnion.component_update)
}

// optional .PBWorkerCommandRequestOp command_request = 16;
inline bool PBWorkerOpUnion::_internal_has_command_request() const {
  bool value = (_impl_._has_bits_[0] & 0x00008000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.command_request_ != nullptr);
  return value;
}
inline bool PBWorkerOpUnion::has_command_request() const {
  return _internal_has_command_request();
}
inline void PBWorkerOpUnion::clear_command_request() {
  if (_impl_.command_request_ != nullptr) _impl_.command_request_->Clear();
  _impl_._has_bits_[0] &= ~0x00008000u;
}
inline const ::PBWorkerCommandRequestOp& PBWorkerOpUnion::_internal_command_request() const {
  const ::PBWorkerCommandRequestOp* p = _impl_.command_request_;
  return p != nullptr ? *p : reinterpret_cast<const ::PBWorkerCommandRequestOp&>(
      ::_PBWorkerCommandRequestOp_default_instance_);
}
inline const ::PBWorkerCommandRequestOp& PBWorkerOpUnion::command_request() const {
  // @@protoc_insertion_point(field_get:PBWorkerOpUnion.command_request)
  return _internal_command_request();
}
inline void PBWorkerOpUnion::unsafe_arena_set_allocated_command_request(
    ::PBWorkerCommandRequestOp* command_request) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.command_request_);
  }
  _impl_.command_request_ = command_request;
  if (command_request) {
    _impl_._has_bits_[0] |= 0x00008000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00008000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBWorkerOpUnion.command_request)
}
inline ::PBWorkerCommandRequestOp* PBWorkerOpUnion::release_command_request() {
  _impl_._has_bits_[0] &= ~0x00008000u;
  ::PBWorkerCommandRequestOp* temp = _impl_.command_request_;
  _impl_.command_request_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PBWorkerCommandRequestOp* PBWorkerOpUnion::unsafe_arena_release_command_request() {
  // @@protoc_insertion_point(field_release:PBWorkerOpUnion.command_request)
  _impl_._has_bits_[0] &= ~0x00008000u;
  ::PBWorkerCommandRequestOp* temp = _impl_.command_request_;
  _impl_.command_request_ = nullptr;
  return temp;
}
inline ::PBWorkerCommandRequestOp* PBWorkerOpUnion::_internal_mutable_command_request() {
  _impl_._has_bits_[0] |= 0x00008000u;
  if (_impl_.command_request_ == nullptr) {
    auto* p = CreateMaybeMessage<::PBWorkerCommandRequestOp>(GetArenaForAllocation());
    _impl_.command_request_ = p;
  }
  return _impl_.command_request_;
}
inline ::PBWorkerCommandRequestOp* PBWorkerOpUnion::mutable_command_request() {
  ::PBWorkerCommandRequestOp* _msg = _internal_mutable_command_request();
  // @@protoc_insertion_point(field_mutable:PBWorkerOpUnion.command_request)
  return _msg;
}
inline void PBWorkerOpUnion::set_allocated_command_request(::PBWorkerCommandRequestOp* command_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.command_request_;
  }
  if (command_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(command_request);
    if (message_arena != submessage_arena) {
      command_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, command_request, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00008000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00008000u;
  }
  _impl_.command_request_ = command_request;
  // @@protoc_insertion_point(field_set_allocated:PBWorkerOpUnion.command_request)
}

// optional .PBWorkerCommandResponseOp command_response = 17;
inline bool PBWorkerOpUnion::_internal_has_command_response() const {
  bool value = (_impl_._has_bits_[0] & 0x00010000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.command_response_ != nullptr);
  return value;
}
inline bool PBWorkerOpUnion::has_command_response() const {
  return _internal_has_command_response();
}
inline void PBWorkerOpUnion::clear_command_response() {
  if (_impl_.command_response_ != nullptr) _impl_.command_response_->Clear();
  _impl_._has_bits_[0] &= ~0x00010000u;
}
inline const ::PBWorkerCommandResponseOp& PBWorkerOpUnion::_internal_command_response() const {
  const ::PBWorkerCommandResponseOp* p = _impl_.command_response_;
  return p != nullptr ? *p : reinterpret_cast<const ::PBWorkerCommandResponseOp&>(
      ::_PBWorkerCommandResponseOp_default_instance_);
}
inline const ::PBWorkerCommandResponseOp& PBWorkerOpUnion::command_response() const {
  // @@protoc_insertion_point(field_get:PBWorkerOpUnion.command_response)
  return _internal_command_response();
}
inline void PBWorkerOpUnion::unsafe_arena_set_allocated_command_response(
    ::PBWorkerCommandResponseOp* command_response) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.command_response_);
  }
  _impl_.command_response_ = command_response;
  if (command_response) {
    _impl_._has_bits_[0] |= 0x00010000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00010000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBWorkerOpUnion.command_response)
}
inline ::PBWorkerCommandResponseOp* PBWorkerOpUnion::release_command_response() {
  _impl_._has_bits_[0] &= ~0x00010000u;
  ::PBWorkerCommandResponseOp* temp = _impl_.command_response_;
  _impl_.command_response_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PBWorkerCommandResponseOp* PBWorkerOpUnion::unsafe_arena_release_command_response() {
  // @@protoc_insertion_point(field_release:PBWorkerOpUnion.command_response)
  _impl_._has_bits_[0] &= ~0x00010000u;
  ::PBWorkerCommandResponseOp* temp = _impl_.command_response_;
  _impl_.command_response_ = nullptr;
  return temp;
}
inline ::PBWorkerCommandResponseOp* PBWorkerOpUnion::_internal_mutable_command_response() {
  _impl_._has_bits_[0] |= 0x00010000u;
  if (_impl_.command_response_ == nullptr) {
    auto* p = CreateMaybeMessage<::PBWorkerCommandResponseOp>(GetArenaForAllocation());
    _impl_.command_response_ = p;
  }
  return _impl_.command_response_;
}
inline ::PBWorkerCommandResponseOp* PBWorkerOpUnion::mutable_command_response() {
  ::PBWorkerCommandResponseOp* _msg = _internal_mutable_command_response();
  // @@protoc_insertion_point(field_mutable:PBWorkerOpUnion.command_response)
  return _msg;
}
inline void PBWorkerOpUnion::set_allocated_command_response(::PBWorkerCommandResponseOp* command_response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.command_response_;
  }
  if (command_response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(command_response);
    if (message_arena != submessage_arena) {
      command_response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, command_response, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00010000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00010000u;
  }
  _impl_.command_response_ = command_response;
  // @@protoc_insertion_point(field_set_allocated:PBWorkerOpUnion.command_response)
}

// optional .PBWorkerComponentSetAuthorityChangeOp component_set_authority_change = 18;
inline bool PBWorkerOpUnion::_internal_has_component_set_authority_change() const {
  bool value = (_impl_._has_bits_[0] & 0x00020000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.component_set_authority_change_ != nullptr);
  return value;
}
inline bool PBWorkerOpUnion::has_component_set_authority_change() const {
  return _internal_has_component_set_authority_change();
}
inline void PBWorkerOpUnion::clear_component_set_authority_change() {
  if (_impl_.component_set_authority_change_ != nullptr) _impl_.component_set_authority_change_->Clear();
  _impl_._has_bits_[0] &= ~0x00020000u;
}
inline const ::PBWorkerComponentSetAuthorityChangeOp& PBWorkerOpUnion::_internal_component_set_authority_change() const {
  const ::PBWorkerComponentSetAuthorityChangeOp* p = _impl_.component_set_authority_change_;
  return p != nullptr ? *p : reinterpret_cast<const ::PBWorkerComponentSetAuthorityChangeOp&>(
      ::_PBWorkerComponentSetAuthorityChangeOp_default_instance_);
}
inline const ::PBWorkerComponentSetAuthorityChangeOp& PBWorkerOpUnion::component_set_authority_change() const {
  // @@protoc_insertion_point(field_get:PBWorkerOpUnion.component_set_authority_change)
  return _internal_component_set_authority_change();
}
inline void PBWorkerOpUnion::unsafe_arena_set_allocated_component_set_authority_change(
    ::PBWorkerComponentSetAuthorityChangeOp* component_set_authority_change) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.component_set_authority_change_);
  }
  _impl_.component_set_authority_change_ = component_set_authority_change;
  if (component_set_authority_change) {
    _impl_._has_bits_[0] |= 0x00020000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00020000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBWorkerOpUnion.component_set_authority_change)
}
inline ::PBWorkerComponentSetAuthorityChangeOp* PBWorkerOpUnion::release_component_set_authority_change() {
  _impl_._has_bits_[0] &= ~0x00020000u;
  ::PBWorkerComponentSetAuthorityChangeOp* temp = _impl_.component_set_authority_change_;
  _impl_.component_set_authority_change_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PBWorkerComponentSetAuthorityChangeOp* PBWorkerOpUnion::unsafe_arena_release_component_set_authority_change() {
  // @@protoc_insertion_point(field_release:PBWorkerOpUnion.component_set_authority_change)
  _impl_._has_bits_[0] &= ~0x00020000u;
  ::PBWorkerComponentSetAuthorityChangeOp* temp = _impl_.component_set_authority_change_;
  _impl_.component_set_authority_change_ = nullptr;
  return temp;
}
inline ::PBWorkerComponentSetAuthorityChangeOp* PBWorkerOpUnion::_internal_mutable_component_set_authority_change() {
  _impl_._has_bits_[0] |= 0x00020000u;
  if (_impl_.component_set_authority_change_ == nullptr) {
    auto* p = CreateMaybeMessage<::PBWorkerComponentSetAuthorityChangeOp>(GetArenaForAllocation());
    _impl_.component_set_authority_change_ = p;
  }
  return _impl_.component_set_authority_change_;
}
inline ::PBWorkerComponentSetAuthorityChangeOp* PBWorkerOpUnion::mutable_component_set_authority_change() {
  ::PBWorkerComponentSetAuthorityChangeOp* _msg = _internal_mutable_component_set_authority_change();
  // @@protoc_insertion_point(field_mutable:PBWorkerOpUnion.component_set_authority_change)
  return _msg;
}
inline void PBWorkerOpUnion::set_allocated_component_set_authority_change(::PBWorkerComponentSetAuthorityChangeOp* component_set_authority_change) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.component_set_authority_change_;
  }
  if (component_set_authority_change) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(component_set_authority_change);
    if (message_arena != submessage_arena) {
      component_set_authority_change = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, component_set_authority_change, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00020000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00020000u;
  }
  _impl_.component_set_authority_change_ = component_set_authority_change;
  // @@protoc_insertion_point(field_set_allocated:PBWorkerOpUnion.component_set_authority_change)
}

// -------------------------------------------------------------------

// PBWorkerOp

// optional .PBWorkerOpType op_type = 1;
inline bool PBWorkerOp::_internal_has_op_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool PBWorkerOp::has_op_type() const {
  return _internal_has_op_type();
}
inline void PBWorkerOp::clear_op_type() {
  _impl_.op_type_ = 1;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::PBWorkerOpType PBWorkerOp::_internal_op_type() const {
  return static_cast< ::PBWorkerOpType >(_impl_.op_type_);
}
inline ::PBWorkerOpType PBWorkerOp::op_type() const {
  // @@protoc_insertion_point(field_get:PBWorkerOp.op_type)
  return _internal_op_type();
}
inline void PBWorkerOp::_internal_set_op_type(::PBWorkerOpType value) {
  assert(::PBWorkerOpType_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.op_type_ = value;
}
inline void PBWorkerOp::set_op_type(::PBWorkerOpType value) {
  _internal_set_op_type(value);
  // @@protoc_insertion_point(field_set:PBWorkerOp.op_type)
}

// optional .PBWorkerOpUnion op = 2;
inline bool PBWorkerOp::_internal_has_op() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.op_ != nullptr);
  return value;
}
inline bool PBWorkerOp::has_op() const {
  return _internal_has_op();
}
inline void PBWorkerOp::clear_op() {
  if (_impl_.op_ != nullptr) _impl_.op_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::PBWorkerOpUnion& PBWorkerOp::_internal_op() const {
  const ::PBWorkerOpUnion* p = _impl_.op_;
  return p != nullptr ? *p : reinterpret_cast<const ::PBWorkerOpUnion&>(
      ::_PBWorkerOpUnion_default_instance_);
}
inline const ::PBWorkerOpUnion& PBWorkerOp::op() const {
  // @@protoc_insertion_point(field_get:PBWorkerOp.op)
  return _internal_op();
}
inline void PBWorkerOp::unsafe_arena_set_allocated_op(
    ::PBWorkerOpUnion* op) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.op_);
  }
  _impl_.op_ = op;
  if (op) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBWorkerOp.op)
}
inline ::PBWorkerOpUnion* PBWorkerOp::release_op() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::PBWorkerOpUnion* temp = _impl_.op_;
  _impl_.op_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PBWorkerOpUnion* PBWorkerOp::unsafe_arena_release_op() {
  // @@protoc_insertion_point(field_release:PBWorkerOp.op)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::PBWorkerOpUnion* temp = _impl_.op_;
  _impl_.op_ = nullptr;
  return temp;
}
inline ::PBWorkerOpUnion* PBWorkerOp::_internal_mutable_op() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.op_ == nullptr) {
    auto* p = CreateMaybeMessage<::PBWorkerOpUnion>(GetArenaForAllocation());
    _impl_.op_ = p;
  }
  return _impl_.op_;
}
inline ::PBWorkerOpUnion* PBWorkerOp::mutable_op() {
  ::PBWorkerOpUnion* _msg = _internal_mutable_op();
  // @@protoc_insertion_point(field_mutable:PBWorkerOp.op)
  return _msg;
}
inline void PBWorkerOp::set_allocated_op(::PBWorkerOpUnion* op) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.op_;
  }
  if (op) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(op);
    if (message_arena != submessage_arena) {
      op = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, op, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.op_ = op;
  // @@protoc_insertion_point(field_set_allocated:PBWorkerOp.op)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::PBWorkerOpType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBWorkerOpType>() {
  return ::PBWorkerOpType_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_WorkerCmd_2eproto
